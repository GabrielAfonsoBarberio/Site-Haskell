
==================== FINAL INTERFACE ====================
2016-11-29 02:26:56.496324 UTC

interface main@main:Foundation [family instance module] 8001
  interface hash: e31fac7665512a25d6623228ee9b5a37
  ABI hash: b6c547314552954f5b094b1fe32ac043
  export-list hash: 62ca6f8939f8743e3f405764e62ce2af
  orphan hash: 2e17cd166c3601d2833a508ded56c466
  flag hash: 63e82b79100e0b2c4cebe8e50c6e154b
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.estaAutenticado
  Foundation.migrateAll
  Foundation.resourcesApp
  Foundation.App{Foundation.App connPool getStatic}
  Foundation.Cliente{Foundation.Cliente clienteCidade clienteCpf clienteEndereco clienteEstado clienteNome clienteTelefone}
  Foundation.ClienteId
  Foundation.Form
  Foundation.Funcionario{Foundation.Funcionario funcionarioEmail funcionarioNome funcionarioPosicao funcionarioSenha}
  Foundation.FuncionarioId
  Foundation.Handler
  Foundation.Inventario{Foundation.Inventario inventarioDisponibilidade inventarioNome inventarioTipo}
  Foundation.InventarioId
  Foundation.Relatorio{Foundation.Relatorio relatorioClienteid relatorioConcluido relatorioFuncionarioid relatorioItemid}
  Foundation.RelatorioId
  Foundation.Widget
  Database.Persist.Class.PersistEntity.EntityField{Foundation.ClienteCidade Foundation.ClienteCpf Foundation.ClienteEndereco Foundation.ClienteEstado Foundation.ClienteId Foundation.ClienteNome Foundation.ClienteTelefone Foundation.FuncionarioEmail Foundation.FuncionarioId Foundation.FuncionarioNome Foundation.FuncionarioPosicao Foundation.FuncionarioSenha Foundation.InventarioDisponibilidade Foundation.InventarioId Foundation.InventarioNome Foundation.InventarioTipo Foundation.RelatorioClienteid Foundation.RelatorioConcluido Foundation.RelatorioFuncionarioid Foundation.RelatorioId Foundation.RelatorioItemid}
  Database.Persist.Class.PersistEntity.Key{Foundation.ClienteKey Foundation.FuncionarioKey Foundation.InventarioKey Foundation.RelatorioKey unClienteKey unFuncionarioKey unInventarioKey unRelatorioKey}
  Database.Persist.Class.PersistEntity.Unique{Foundation.UniqueEmail Foundation.UniqueRelato}
  Yesod.Routes.Class.Route{Foundation.AdminR Foundation.ClienteR Foundation.FuncionarioR Foundation.HomeR Foundation.InvR Foundation.ListAdminR Foundation.ListClienteR Foundation.ListInvR Foundation.ListRelatorioR Foundation.LoginR Foundation.LogoutR Foundation.RelatorioR Foundation.StaticR}
module dependencies:
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      aeson-compat-0.3.6@aeson-compat-0.3.6-5wE6V2cyaFcB5no9HXBKW5
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cereal-0.5.4.0@cereal-0.5.4.0-2FJYHGgtE5C3SxaZjt25xS
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      clientsession-0.9.1.2@clientsession-0.9.1.2-IpBcpG3jp1KHy8EW2Zpyr3
                      conduit-1.2.8@conduit-1.2.8-5FcKXI45VDc6lGPbFuJAWM
                      conduit-extra-1.1.15@conduit-extra-1.1.15-53svZ1V22a02WgMiq2YICw
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-COLYQrn2KP0KrG5tq2u9OS
                      crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-GQAZIw8UH93GFERaAFFYYo
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-A7dMarJBg4dHM8dTPvP0ZL
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      css-text-0.1.2.2@css-text-0.1.2.2-2oPStu29BQF6h11Hvse6Bl
                      data-default-0.7.1.1@data-default-0.7.1.1-5uix4eIzBY9IcVb4V2HbW3
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-ESBROgKchbm3QXcQv2e7oG
                      directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF
                      entropy-0.3.7@entropy-0.3.7-54dsRvsNlllHvcIX99CGiD
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.7@fast-logger-2.4.7-E7H6TuZQzia59KuB50vayl
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-FAbjmjQAybhLjdn6FTjXH8 integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q
                      persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD
                      persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK
                      persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW
                      postgresql-libpq-0.9.2.0@postgresql-libpq-0.9.2.0-IWEdPrPraPeE94ud73Ope3
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-3INwbAr3KaOko5GoR6I2w
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      process-1.4.2.0@process-1.4.2.0
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-9vTgJsy3ECMB5KkdzRIRAh
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0
                      silently-1.2.5@silently-1.2.5-Ek776fxSdtm4h8aXqt6CNw
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      skein-1.0.9.4@skein-1.0.9.4-2lnBX1jPJHzHUOltMUlcf7
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-4lLWE8CZnvmDZJW5bKkus1
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-KFZuUgmBRr4GSrTHv7XvSl
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      tagsoup-0.14@tagsoup-0.14-HxE6zinFMUaDOGdOBKKTEg
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-6csRgbgolyoCCOLw42RlBs
                      wai-extra-3.0.19@wai-extra-3.0.19-JgWV2EEhKqI9Cbv1ALadHO
                      wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e
                      warp-3.2.9@warp-3.2.9-1T06si5IpgT9ocLo3cujDp
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-LQRG7XxkG2ZCHdKqzimhvw
                      yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo
                      yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1
                      yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp
                      yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy
                      yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF:Text.Email.Parser
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK:Control.Monad.Logger
                         mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistConfig
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Css
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Handler
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Types
                         yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Class c9d74667288c52e23279e16b75c64023
import  -/  aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Internal fd763f29fceeda2453c690ef7d94155c
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Either bd9f099b82d4ed2d98c56d7144ac6957
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.Proxy aa86c72628cf3b1ceb0816ca84687d80
import  -/  base-4.9.0.0:Data.Tuple acb0ed10307ed88df6c81b8589f4de16
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.Int 2421020ac5d687542a6612a08a16b1fd
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:Text.ParserCombinators.ReadPrec 9512e2f4b227f507f87a150887202aed
import  -/  base-4.9.0.0:Text.Read.Lex fe3dd7b823826bf6870140c5363f9596
import  -/  blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C:Text.Blaze.Html a616e69638e5c542aa4042a4609214fe
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal 1a31a1f30d9522329d9076dffd947c78
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 1e8d61dcc59a1a983b27bab6fd6bdcaf
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 7491ab24d955eec25fba8e0d89b657f1
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C:Web.HttpApiData.Internal 83e6a9c1db43515fa1c790229d0cb8e5
import  -/  path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q:Web.PathPieces 348dda38f1ee102032eafd2f94207cab
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistEntity dbb3af8b40ede057aba8c075ea719bcc
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistField df94d583649369fa2eb1b519f878bffa
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistStore 425057bb4452baac78187a91fb6485d4
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Class 599cdbb673629ef73b6c75d97f911e54
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Migration e11ca0af4ee195f82122eadc55ef7759
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Run 56b0f4f5239645be52e0322a26069684
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Types 9318c06a4405e7f3264399ee225d5a36
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Types.Internal 16bc664bd5ed2da2362e1a11fc92ffa9
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Types.Base 3819eb7a7073cab29eef56ed2ed7ab93
import  -/  persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql 1b8867174b6955b71b9a450f85dd5d9e
import  -/  persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW:Database.Persist.TH 3add5094458e8db8b1b883952a8b50da
import  -/  shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Shakespeare.I18N 65b58d632a1ee32a4fe2fca264aa7518
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Internal 530216acfbfab25df053b0caac6d6a57
import  -/  unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base 14d496cc7cee5fb21a6e5f814bf985c8
import  -/  unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Strict 5b7474ba841d7985b582123ebcf7b9dc
import  -/  yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo:Yesod 60aea8526cb37ebb973e9ce325cb4deb
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Yesod bba8d8da735046bb383f45f087c1645b
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Handler 91ca97147a231a54093ebbcf44176b77
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Internal.TH e6d17668858c894a550076f3de7e14d1
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Types f4af841d830e6493d55daa368687d9b6
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Routes.Class dce6f8256417653c30d69caad4656b0b
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Routes.Parse 5cf5ad0914be4f5906bd026cd1fa4f1c
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Routes.TH.Types ebff9f979593c580fb938f18e86671e8
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Fields 6609e336a601f9246072290aaf0faf40
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Types e7c3cd1f2504cbf6aa5d13cc99bfffe3
import  -/  yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy:Yesod.Persist.Core bd24bc5753868a0e0776592694d2328d
import  -/  yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk:Yesod.Static 26922bc51b1c19298aef8de8063a655a
addDependentFile "routes"
cbacfe22e0662853dca97a7e15906e78
  $fEqKey ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fEqKey_$c==
                  Foundation.$fEqKey_$c/= -}
d819cf7b6367ff8d28cefcd140b736a1
  $fEqKey0 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fEqKey0_$c==
                  Foundation.$fEqKey0_$c/= -}
d819cf7b6367ff8d28cefcd140b736a1
  $fEqKey0_$c/= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.neInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fEqKey0_$c== ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.eqInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fEqKey1 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fEqKey1_$c==
                  Foundation.$fEqKey1_$c/= -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fEqKey1_$c/= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.neInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fEqKey1_$c== ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.eqInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fEqKey2 ::
    GHC.Classes.Eq
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fEqKey2_$c==
                  Foundation.$fEqKey2_$c/= -}
4ab9eee06efaae906f8b44e3731bce42
  $fEqKey2_$c/= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.neInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fEqKey2_$c== ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.eqInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fEqKey_$c/= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.neInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fEqKey_$c== ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.eqInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Yesod.Routes.Class.Route Foundation.App)
                   (b :: Yesod.Routes.Class.Route Foundation.App) ->
                 case Foundation.$fEqRoute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag#
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              wild `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                           (GHC.Prim.dataToTag#
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              ds1))
                   Foundation.FuncionarioR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.FuncionarioR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.FuncionarioR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Foundation.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Foundation.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Foundation.D:R:KeyFuncionario0[0])
                                  (Trans
                                       (Foundation.N:R:KeyFuncionario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.StaticR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.StaticR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.StaticR b1 -> Yesod.Static.$fEqRoute_$c== a1 b1 } }) -}
cbacfe22e0662853dca97a7e15906e78
  $fFromHttpApiDataKey ::
    Web.HttpApiData.Internal.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fFromHttpApiDataKey_$cparseQueryParam
                  Foundation.$fFromHttpApiDataKey_$cparseHeader
                  Foundation.$fFromHttpApiDataKey_$cparseQueryParam -}
d819cf7b6367ff8d28cefcd140b736a1
  $fFromHttpApiDataKey0 ::
    Web.HttpApiData.Internal.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fFromHttpApiDataKey0_$cparseQueryParam
                  Foundation.$fFromHttpApiDataKey0_$cparseHeader
                  Foundation.$fFromHttpApiDataKey0_$cparseQueryParam -}
d819cf7b6367ff8d28cefcd140b736a1
  $fFromHttpApiDataKey0_$cparseHeader ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseHeader
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyFuncionario[0]))
                                        (Sym (Foundation.D:R:KeyFuncionario0[0]))))))_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fFromHttpApiDataKey0_$cparseQueryParam ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseUrlPiece
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyFuncionario[0]))
                                        (Sym (Foundation.D:R:KeyFuncionario0[0]))))))_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fFromHttpApiDataKey1 ::
    Web.HttpApiData.Internal.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fFromHttpApiDataKey1_$cparseQueryParam
                  Foundation.$fFromHttpApiDataKey1_$cparseHeader
                  Foundation.$fFromHttpApiDataKey1_$cparseQueryParam -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fFromHttpApiDataKey1_$cparseHeader ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseHeader
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyCliente[0]))
                                        (Sym (Foundation.D:R:KeyCliente0[0]))))))_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fFromHttpApiDataKey1_$cparseQueryParam ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseUrlPiece
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyCliente[0]))
                                        (Sym (Foundation.D:R:KeyCliente0[0]))))))_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fFromHttpApiDataKey2 ::
    Web.HttpApiData.Internal.FromHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fFromHttpApiDataKey2_$cparseQueryParam
                  Foundation.$fFromHttpApiDataKey2_$cparseHeader
                  Foundation.$fFromHttpApiDataKey2_$cparseQueryParam -}
4ab9eee06efaae906f8b44e3731bce42
  $fFromHttpApiDataKey2_$cparseHeader ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseHeader
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyInventario[0]))
                                        (Sym (Foundation.D:R:KeyInventario0[0]))))))_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fFromHttpApiDataKey2_$cparseQueryParam ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseUrlPiece
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyInventario[0]))
                                        (Sym (Foundation.D:R:KeyInventario0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fFromHttpApiDataKey_$cparseHeader ::
    Data.ByteString.Internal.ByteString
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1, Strictness: <L,U(U,U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseHeader
                  `cast`
                (<Data.ByteString.Internal.ByteString>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyRelatorio[0]))
                                        (Sym (Foundation.D:R:KeyRelatorio0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fFromHttpApiDataKey_$cparseQueryParam ::
    Data.Text.Internal.Text
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fFromHttpApiDataInt64_$cparseUrlPiece
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyRelatorio[0]))
                                        (Sym (Foundation.D:R:KeyRelatorio0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fFromJSONKey ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fFromJSONKey_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Relatorio>_N)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fFromJSONKey0 ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fFromJSONKey0_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Funcionario>_N)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fFromJSONKey0_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fFromJSONInt64_$cparseJSON
                  `cast`
                (<Data.Aeson.Types.Internal.Value>_R
                 ->_R (Data.Aeson.Types.Internal.Parser
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyFuncionario[0]))
                                        (Sym (Foundation.D:R:KeyFuncionario0[0]))))))_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fFromJSONKey1 ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fFromJSONKey1_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Cliente>_N)) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fFromJSONKey1_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fFromJSONInt64_$cparseJSON
                  `cast`
                (<Data.Aeson.Types.Internal.Value>_R
                 ->_R (Data.Aeson.Types.Internal.Parser
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyCliente[0]))
                                        (Sym (Foundation.D:R:KeyCliente0[0]))))))_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fFromJSONKey2 ::
    Data.Aeson.Types.Class.FromJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fFromJSONKey2_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Inventario>_N)) -}
4ab9eee06efaae906f8b44e3731bce42
  $fFromJSONKey2_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fFromJSONInt64_$cparseJSON
                  `cast`
                (<Data.Aeson.Types.Internal.Value>_R
                 ->_R (Data.Aeson.Types.Internal.Parser
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyInventario[0]))
                                        (Sym (Foundation.D:R:KeyInventario0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fFromJSONKey_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fFromJSONInt64_$cparseJSON
                  `cast`
                (<Data.Aeson.Types.Internal.Value>_R
                 ->_R (Data.Aeson.Types.Internal.Parser
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyRelatorio[0]))
                                        (Sym (Foundation.D:R:KeyRelatorio0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fEqKey
                  Foundation.$fOrdKey_$ccompare
                  Foundation.$fOrdKey_$c<
                  Foundation.$fOrdKey_$c<=
                  Foundation.$fOrdKey_$c>
                  Foundation.$fOrdKey_$c>=
                  Foundation.$fOrdKey_$cmax
                  Foundation.$fOrdKey_$cmin -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fEqKey0
                  Foundation.$fOrdKey0_$ccompare
                  Foundation.$fOrdKey0_$c<
                  Foundation.$fOrdKey0_$c<=
                  Foundation.$fOrdKey0_$c>
                  Foundation.$fOrdKey0_$c>=
                  Foundation.$fOrdKey0_$cmax
                  Foundation.$fOrdKey0_$cmin -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$c< ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.ltInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$c<= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.leInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$c> ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.gtInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$c>= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.geInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$ccompare ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$ccompare
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <GHC.Types.Ordering>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$cmax ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmax
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fOrdKey0_$cmin ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmin
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyFuncionario[0]))
                                    (Sym (Foundation.D:R:KeyFuncionario0[0]))))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fEqKey1
                  Foundation.$fOrdKey1_$ccompare
                  Foundation.$fOrdKey1_$c<
                  Foundation.$fOrdKey1_$c<=
                  Foundation.$fOrdKey1_$c>
                  Foundation.$fOrdKey1_$c>=
                  Foundation.$fOrdKey1_$cmax
                  Foundation.$fOrdKey1_$cmin -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$c< ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.ltInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$c<= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.leInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$c> ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.gtInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$c>= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.geInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$ccompare ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$ccompare
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <GHC.Types.Ordering>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$cmax ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmax
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fOrdKey1_$cmin ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmin
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyCliente[0]))
                                    (Sym (Foundation.D:R:KeyCliente0[0]))))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2 ::
    GHC.Classes.Ord
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fEqKey2
                  Foundation.$fOrdKey2_$ccompare
                  Foundation.$fOrdKey2_$c<
                  Foundation.$fOrdKey2_$c<=
                  Foundation.$fOrdKey2_$c>
                  Foundation.$fOrdKey2_$c>=
                  Foundation.$fOrdKey2_$cmax
                  Foundation.$fOrdKey2_$cmin -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$c< ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.ltInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$c<= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.leInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$c> ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.gtInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$c>= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.geInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$ccompare ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$ccompare
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <GHC.Types.Ordering>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$cmax ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmax
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fOrdKey2_$cmin ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmin
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyInventario[0]))
                                    (Sym (Foundation.D:R:KeyInventario0[0]))))) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$c< ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.ltInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$c<= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.leInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$c> ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.gtInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$c>= ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.geInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Bool>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$ccompare ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$ccompare
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <GHC.Types.Ordering>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$cmax ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmax
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))) -}
cbacfe22e0662853dca97a7e15906e78
  $fOrdKey_$cmin ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
  {- Arity: 2, HasNoCafRefs, Strictness: <S(S),1*U(U)><S(S),1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Int.$fOrdInt64_$cmin
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                               (Trans
                                    (Sym (Foundation.N:R:KeyRelatorio[0]))
                                    (Sym (Foundation.D:R:KeyRelatorio0[0]))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 ->
                 Foundation.$w$cparseRoute ww1 ww2 }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPathPieceKey ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fPathPieceKey_$cfromPathPiece
                  Foundation.$fPathPieceKey_$ctoPathPiece -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPathPieceKey0 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fPathPieceKey0_$cfromPathPiece
                  Foundation.$fPathPieceKey0_$ctoPathPiece -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPathPieceKey0_$cfromPathPiece ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (GHC.Base.Maybe
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyFuncionario[0]))
                                        (Sym (Foundation.D:R:KeyFuncionario0[0]))))))_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPathPieceKey0_$ctoPathPiece ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPathPieceKey1 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fPathPieceKey1_$cfromPathPiece
                  Foundation.$fPathPieceKey1_$ctoPathPiece -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPathPieceKey1_$cfromPathPiece ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (GHC.Base.Maybe
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyCliente[0]))
                                        (Sym (Foundation.D:R:KeyCliente0[0]))))))_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPathPieceKey1_$ctoPathPiece ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPathPieceKey2 ::
    Web.PathPieces.PathPiece
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fPathPieceKey2_$cfromPathPiece
                  Foundation.$fPathPieceKey2_$ctoPathPiece -}
4ab9eee06efaae906f8b44e3731bce42
  $fPathPieceKey2_$cfromPathPiece ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (GHC.Base.Maybe
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyInventario[0]))
                                        (Sym (Foundation.D:R:KeyInventario0[0]))))))_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPathPieceKey2_$ctoPathPiece ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPathPieceKey_$cfromPathPiece ::
    Data.Text.Internal.Text
    -> GHC.Base.Maybe
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1, Strictness: <S(SSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$sparseIntegral
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R (GHC.Base.Maybe
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyRelatorio[0]))
                                        (Sym (Foundation.D:R:KeyRelatorio0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPathPieceKey_$ctoPathPiece ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Cliente
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldKey1
                  Foundation.$fToJSONKey1
                  Foundation.$fFromJSONKey1_$cparseJSON
                    `cast`
                  (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                            <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_N))
                  Foundation.$fShowKey1
                  Foundation.$fReadKey1
                  Foundation.$fEqKey1
                  Foundation.$fOrdKey1
                  Foundation.$fPersistEntityCliente_$ckeyToValues
                  Foundation.$fPersistEntityCliente_$ckeyFromValues
                  Foundation.$fPersistEntityCliente_$s$WClienteId
                  Foundation.$fPersistEntityCliente_$centityDef
                  Foundation.$fPersistEntityCliente_$cpersistFieldDef
                  Foundation.$fPersistEntityCliente_$ctoPersistFields
                  Foundation.$fPersistEntityCliente_$cfromPersistValues
                  Foundation.$fPersistEntityCliente_$cpersistUniqueKeys
                  Foundation.$fPersistEntityCliente_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityCliente_$cpersistUniqueToValues
                  Foundation.$fPersistEntityCliente_$cfieldLens -}
5339a627e5e825d6780377a7ef370d98
  $fPersistEntityCliente1 ::
    [Database.Persist.Types.Base.PersistValue]
  {- Strictness: x -}
94e9f2fdaac74e1cb55999ce34c128fd
  $fPersistEntityCliente10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cidade"#) -}
255124ba6c238881cfbb85f87259c11a
  $fPersistEntityCliente11 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente12 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
aa1f801429a31ce8365b909891108d37
  $fPersistEntityCliente12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "endereco"#) -}
499e65185c6112a7edb1a344b8fdee65
  $fPersistEntityCliente13 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente14 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
dbe3f50888b061e7c1dfed239fd46d84
  $fPersistEntityCliente14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cpf"#) -}
8ba31f3aae5f350c7070f7730c853c0d
  $fPersistEntityCliente15 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente16 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
33c4faacd84d051978170b895e69902e
  $fPersistEntityCliente16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "nome"#) -}
ee10bfbe94200f555fbab790c7581fe6
  $fPersistEntityCliente17 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Id"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Cliente"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente22
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } } }) -}
1890a708c3134bbffb25e23b788feb1e
  $fPersistEntityCliente18 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   Foundation.$fPersistEntityCliente20
                   Foundation.$fPersistEntityCliente19) -}
9a95ef8bdd0bbe18c8fe54132dd99296
  $fPersistEntityCliente19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Int64"#) -}
699c4902f07719729e3119d0554fbf2b
  $fPersistEntityCliente2 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Strictness: x -}
0272a1066c5aac5c0a3cca15771208c8
  $fPersistEntityCliente20 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Foundation.$fPersistEntityCliente21) -}
37f347ca6d040a6240582a44fd1f0ea3
  $fPersistEntityCliente21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Data.Int"#) -}
f5031f010d749506984203e794b6cbd8
  $fPersistEntityCliente22 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityCliente23) -}
d383e56e0a87739b759d01876925e2c1
  $fPersistEntityCliente23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "ClienteId"#) -}
c9b89173297da0fe6f11078d6df8ce1a
  $fPersistEntityCliente24 :: Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Cliente"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "cliente"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Id"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityCliente22
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente18))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityCliente25
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
f53423958529da2ca13612f14c6d27c0
  $fPersistEntityCliente25 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente36
                   Foundation.$fPersistEntityCliente26) -}
06f92f33d64b8ae654a73e72c6f33c7d
  $fPersistEntityCliente26 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente35
                   Foundation.$fPersistEntityCliente27) -}
5eb3ab95371e32e504a4e645d19eb605
  $fPersistEntityCliente27 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente34
                   Foundation.$fPersistEntityCliente28) -}
f058d50e1e1b074ac701f69659ea40c5
  $fPersistEntityCliente28 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente33
                   Foundation.$fPersistEntityCliente29) -}
fc27867631e311c4bf120f07ef786e57
  $fPersistEntityCliente29 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente32
                   Foundation.$fPersistEntityCliente30) -}
90e683052e4835d8c1ee36c58b1d18d8
  $fPersistEntityCliente3 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente6 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
b1e2a08e0d7ff57c7c46e55c85050bff
  $fPersistEntityCliente30 :: [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente31
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
3bed4656a92b9e6e4ac3aba10e20a343
  $fPersistEntityCliente31 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "telefone"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
625db69abba3de39bd6e36d6e6d2c5e9
  $fPersistEntityCliente32 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "estado"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
2a47a120654e5964851505d6373a4165
  $fPersistEntityCliente33 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "cidade"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
9dec7d81630f31331212be54c496ebf4
  $fPersistEntityCliente34 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "endereco"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
e2d820ec8dfb412b5f73a75425559a89
  $fPersistEntityCliente35 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "cpf"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
15b5c0ce3fd009902bed21e74f4ab71e
  $fPersistEntityCliente36 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "nome"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente37 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fPersistEntityCliente38
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Class.PersistEntity.Key
                                    Foundation.Cliente>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Cliente>_N) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente38 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Cliente
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Cliente>_N) -}
3bc4a7f0ce21762fc234c5fbb0f7aa34
  $fPersistEntityCliente4 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityCliente5) -}
a7d1d428611bacc81a4b077fd9691b2a
  $fPersistEntityCliente5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Text"#) -}
2af190632827eca4d6a8fbac6152e093
  $fPersistEntityCliente6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "telefone"#) -}
d9d4775fced2008774bc78248b420b37
  $fPersistEntityCliente7 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente8 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
381bcfbfeaf6fb09b8079701c11e894a
  $fPersistEntityCliente8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "estado"#) -}
49aaa757ba6001d1ef9fdb349056c69c
  $fPersistEntityCliente9 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityCliente10 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Cliente -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Cliente) ->
                 Foundation.$fPersistEntityCliente24) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Cliente field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity Foundation.Cliente
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Cliente)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U(U,U,U,U,U,U))> -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Cliente
  {- Arity: 1, Strictness: <S,U> -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                        y `cast`
                        (Trans
                             (Sym (Foundation.N:R:KeyCliente[0]))
                             (Sym (Foundation.D:R:KeyCliente0[0]))) }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (Foundation.D:R:KeyCliente0[0])
                           (Trans
                                (Foundation.N:R:KeyCliente[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Cliente typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Cliente typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldClientetyp0[0] <typ>_N) of wild {
                   Foundation.ClienteId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Cliente>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente17 }
                   Foundation.ClienteNome $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente15 }
                   Foundation.ClienteCpf $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente13 }
                   Foundation.ClienteEndereco $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente11 }
                   Foundation.ClienteCidade $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente9 }
                   Foundation.ClienteEstado $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente7 }
                   Foundation.ClienteTelefone $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente3 } }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cpersistUniqueKeys ::
    Foundation.Cliente
    -> [Database.Persist.Class.PersistEntity.Unique Foundation.Cliente]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente _nome _cpf _endereco _cidade _estado _telefone ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Cliente) }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Cliente) ->
                 Foundation.$fPersistEntityCliente2) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Cliente) ->
                 Foundation.$fPersistEntityCliente1) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$ctoPersistFields ::
    Foundation.Cliente
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SSSSSS),1*U(U,U,U,U,U,U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Cliente) ->
                 case w of ww { Foundation.Cliente ww1 ww2 ww3 ww4 ww6 ww7 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      ww1)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ Data.Text.Internal.Text
                         Database.Persist.Class.PersistField.$fPersistFieldText0
                         ww2)
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ Data.Text.Internal.Text
                            Database.Persist.Class.PersistField.$fPersistFieldText0
                            ww3)
                         (GHC.Types.:
                            @ Database.Persist.Class.PersistField.SomePersistField
                            (Database.Persist.Class.PersistField.SomePersistField
                               @ Data.Text.Internal.Text
                               Database.Persist.Class.PersistField.$fPersistFieldText0
                               ww4)
                            (GHC.Types.:
                               @ Database.Persist.Class.PersistField.SomePersistField
                               (Database.Persist.Class.PersistField.SomePersistField
                                  @ Data.Text.Internal.Text
                                  Database.Persist.Class.PersistField.$fPersistFieldText0
                                  ww6)
                               (GHC.Types.:
                                  @ Database.Persist.Class.PersistField.SomePersistField
                                  (Database.Persist.Class.PersistField.SomePersistField
                                     @ Data.Text.Internal.Text
                                     Database.Persist.Class.PersistField.$fPersistFieldText0
                                     ww7)
                                  (GHC.Types.[]
                                     @ Database.Persist.Class.PersistField.SomePersistField)))))) }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistEntityCliente_$s$WClienteId ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Cliente
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Strictness: m1, Inline: INLINE,
     Unfolding: InlineRule (0, False, False)
                (Foundation.ClienteId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fPersistEntityCliente37)
                  `cast`
                (Sym (Foundation.D:R:EntityFieldClientetyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                   Foundation.Cliente>_N) -}
2e7e6dbb1a4be96cdcf19240a2181119
  $fPersistEntityCliente_$s$wpoly_go10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> GHC.Prim.Int#
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U><L,U> -}
264710d5a7825289414f45fc10717900
  $fPersistEntityCliente_$sfromList ::
    [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Data.Text.Internal.Text, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Data.Text.Internal.Text @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Map.Base.Bin
                             @ Data.Text.Internal.Text
                             @ a
                             1#
                             dt
                             x
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                             (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ky of ww4 { Data.Text.Internal.Text ww7 ww6 ww8 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww7 ww6 ww8 of wild4 {
                             DEFAULT
                             -> Foundation.$fPersistEntityCliente_$spoly_go10
                                  @ a
                                  ww7
                                  ww6
                                  ww8
                                  ds3
                                  ipv1
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                             GHC.Types.LT
                             -> Foundation.$fPersistEntityCliente_$s$wpoly_go10
                                  @ a
                                  ww7
                                  ww6
                                  ww8
                                  ds3
                                  ipv1
                                  (Data.Map.Base.Bin
                                     @ Data.Text.Internal.Text
                                     @ a
                                     1#
                                     ww
                                     x
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a)
                                     (Data.Map.Base.Tip @ Data.Text.Internal.Text @ a))
                                  1# } } } } } } }) -}
91ef4778a27ece5e69d48bc2b0f828ae
  $fPersistEntityCliente_$spoly_go10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> [(Data.Text.Internal.Text, a)]
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> Data.Map.Base.Map Data.Text.Internal.Text a
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U><S,1*U> -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Funcionario
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Funcionario
                  Foundation.$fPersistFieldKey0
                  Foundation.$fToJSONKey0
                  Foundation.$fFromJSONKey0_$cparseJSON
                    `cast`
                  (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                            <Database.Persist.Class.PersistEntity.Key
                               Foundation.Funcionario>_N))
                  Foundation.$fShowKey0
                  Foundation.$fReadKey0
                  Foundation.$fEqKey0
                  Foundation.$fOrdKey0
                  Foundation.$fPersistEntityFuncionario_$ckeyToValues
                  Foundation.$fPersistEntityFuncionario_$ckeyFromValues
                  Foundation.$fPersistEntityFuncionario_$s$WFuncionarioId
                  Foundation.$fPersistEntityFuncionario_$centityDef
                  Foundation.$fPersistEntityFuncionario_$cpersistFieldDef
                  Foundation.$fPersistEntityFuncionario_$ctoPersistFields
                  Foundation.$fPersistEntityFuncionario_$cfromPersistValues
                  Foundation.$fPersistEntityFuncionario_$cpersistUniqueKeys
                  Foundation.$fPersistEntityFuncionario_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityFuncionario_$cpersistUniqueToValues
                  Foundation.$fPersistEntityFuncionario_$cfieldLens -}
b8aeb23bf1be96a1e83fe3bac4302427
  $fPersistEntityFuncionario1 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Types.Base.HaskellName,
                      Database.Persist.Types.Base.DBName)
                   Foundation.$fPersistEntityFuncionario2
                   (GHC.Types.[]
                      @ (Database.Persist.Types.Base.HaskellName,
                         Database.Persist.Types.Base.DBName))) -}
8f7f580e3e27f68cdf8008e81710aa67
  $fPersistEntityFuncionario10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Maybe"#) -}
fa8bc788ae9ed090eedd37a9bcc78e4b
  $fPersistEntityFuncionario11 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "posicao"#) -}
793b7e299718ad44034a75e18b3325b8
  $fPersistEntityFuncionario12 ::
    Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Id"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Funcionario"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityFuncionario13
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } } }) -}
5ce88f506c0997a2a1fa046b659791d0
  $fPersistEntityFuncionario13 ::
    Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityFuncionario14) -}
b45f4a9d111a616b4afad4c0d236947d
  $fPersistEntityFuncionario14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "FuncionarioId"#) -}
33c8910a0e9c2a52e46a76764bf966f3
  $fPersistEntityFuncionario15 ::
    Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Funcionario"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "funcionario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Id"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityFuncionario13
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente18))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityFuncionario18
                   Foundation.$fPersistEntityFuncionario16
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
6590f9e1f538113067f3675fa78b6bcd
  $fPersistEntityFuncionario16 ::
    [Database.Persist.Types.Base.UniqueDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.UniqueDef
                   Foundation.$fPersistEntityFuncionario17
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)) -}
7788eab906dbf3ada9103e4651e8e2d1
  $fPersistEntityFuncionario17 ::
    Database.Persist.Types.Base.UniqueDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "UniqueEmail"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "unique_email"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.UniqueDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityFuncionario1
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr) } }) -}
061a380518951907eec2fc51edbb40c6
  $fPersistEntityFuncionario18 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente36
                   Foundation.$fPersistEntityFuncionario19) -}
f61bbbc59ec373ac551dc36194c0b7ee
  $fPersistEntityFuncionario19 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityFuncionario24
                   Foundation.$fPersistEntityFuncionario20) -}
3b5e20c2f371d31f113a3d450aecd069
  $fPersistEntityFuncionario2 ::
    (Database.Persist.Types.Base.HaskellName,
     Database.Persist.Types.Base.DBName)
  {- Unfolding: ((Foundation.$fPersistEntityFuncionario3
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:HaskellName[0])),
                  Foundation.$fPersistEntityFuncionario3
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:DBName[0])))) -}
27308dbcc7e0a95c3ccdd1a634b53cf9
  $fPersistEntityFuncionario20 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityFuncionario23
                   Foundation.$fPersistEntityFuncionario21) -}
1df7bb744b5d7ccf4514e392aa3ef123
  $fPersistEntityFuncionario21 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityFuncionario22
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
7e42b7beeeec6387b7ba2a8c48e2db33
  $fPersistEntityFuncionario22 ::
    Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "senha"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
7fb0bd2384421907859a3d51e2bcd138
  $fPersistEntityFuncionario23 ::
    Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "email"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
ccf5f474dc15e18545be57d1078e91f6
  $fPersistEntityFuncionario24 ::
    Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "posicao"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   Foundation.$fPersistEntityFuncionario9
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario25 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                           Foundation.Funcionario
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fPersistEntityFuncionario26
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Class.PersistEntity.Key
                                    Foundation.Funcionario>_N <Database.Persist.Class.PersistEntity.Key
                                                                 Foundation.Funcionario>_N) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario26 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Funcionario
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Funcionario>_N) -}
79a463355f5821871a40d5f643d12c39
  $fPersistEntityFuncionario3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "email"#) -}
f8aefa9d65f531f7574334d61dc380e2
  $fPersistEntityFuncionario4 ::
    GHC.Base.Maybe Data.Text.Internal.Text
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GHC.Base.Maybe Data.Text.Internal.Text) ->
                 case ds of wild {
                   GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                   GHC.Base.Just a1
                   -> Database.Persist.Types.Base.PersistText a1 }) -}
d44ef32b0c6ef2233ca262279726f78d
  $fPersistEntityFuncionario5 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityFuncionario6 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
889423a80e483f9d4d124a731abf6f76
  $fPersistEntityFuncionario6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "senha"#) -}
dc888993162818c75dc7a9b105da5f6d
  $fPersistEntityFuncionario7 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityFuncionario3 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
ee8b646f47323116a238163a55287450
  $fPersistEntityFuncionario8 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityFuncionario11 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   Foundation.$fPersistEntityFuncionario9
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
de707317ff8afa3b4ecef159657f1ec4
  $fPersistEntityFuncionario9 :: [Database.Persist.Types.Base.Attr]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.Attr
                   Foundation.$fPersistEntityFuncionario10
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Funcionario -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Funcionario) ->
                 Foundation.$fPersistEntityFuncionario15) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Funcionario field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity
            Foundation.Funcionario
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Funcionario)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U(U,U,U,U))> -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text Foundation.Funcionario
  {- Arity: 1, Strictness: <S,U> -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                        y `cast`
                        (Trans
                             (Sym (Foundation.N:R:KeyFuncionario[0]))
                             (Sym (Foundation.D:R:KeyFuncionario0[0]))) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Funcionario) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (Foundation.D:R:KeyFuncionario0[0])
                           (Trans
                                (Foundation.N:R:KeyFuncionario[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Funcionario typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Funcionario typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldFuncionariotyp0[0] <typ>_N) of wild {
                   Foundation.FuncionarioId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Funcionario>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityFuncionario12 }
                   Foundation.FuncionarioNome $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente15 }
                   Foundation.FuncionarioPosicao $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (GHC.Base.Maybe Data.Text.Internal.Text)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0] <GHC.Types.*>_N <typ>_N <GHC.Base.Maybe
                                                                                   Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityFuncionario8 }
                   Foundation.FuncionarioEmail $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityFuncionario7 }
                   Foundation.FuncionarioSenha $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityFuncionario5 } }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cpersistUniqueKeys ::
    Foundation.Funcionario
    -> [Database.Persist.Class.PersistEntity.Unique
          Foundation.Funcionario]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,U,A)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Funcionario) ->
                 case ds of wild { Foundation.Funcionario _nome _posicao _email _senha ->
                 GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Funcionario)
                   (Foundation.UniqueEmail _email)
                     `cast`
                   (Sym (Foundation.D:R:UniqueFuncionario0[0]))
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Unique
                           Foundation.Funcionario)) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Funcionario
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <S,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Funcionario) ->
                 case ds of tpl { DEFAULT ->
                 Foundation.$fPersistEntityFuncionario1 }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Funcionario
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Funcionario) ->
                 case ds
                        `cast`
                      (Foundation.D:R:UniqueFuncionario0[0]) of wild { Foundation.UniqueEmail x ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistText x)
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$ctoPersistFields ::
    Foundation.Funcionario
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SSSS),1*U(U,U,U,U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Funcionario) ->
                 case w of ww { Foundation.Funcionario ww1 ww2 ww3 ww4 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      ww1)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                         Foundation.$fPersistEntityFuncionario_$s$fPersistFieldMaybe
                         ww2)
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ Data.Text.Internal.Text
                            Database.Persist.Class.PersistField.$fPersistFieldText0
                            ww3)
                         (GHC.Types.:
                            @ Database.Persist.Class.PersistField.SomePersistField
                            (Database.Persist.Class.PersistField.SomePersistField
                               @ Data.Text.Internal.Text
                               Database.Persist.Class.PersistField.$fPersistFieldText0
                               ww4)
                            (GHC.Types.[]
                               @ Database.Persist.Class.PersistField.SomePersistField)))) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistEntityFuncionario_$s$WFuncionarioId ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Funcionario
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Strictness: m1, Inline: INLINE,
     Unfolding: InlineRule (0, False, False)
                (Foundation.FuncionarioId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fPersistEntityFuncionario25)
                  `cast`
                (Sym (Foundation.D:R:EntityFieldFuncionariotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                       Foundation.Funcionario>_N) -}
e2b0584ece1d7486a6fedda9beb37b56
  $fPersistEntityFuncionario_$s$fPersistFieldMaybe ::
    Database.Persist.Class.PersistField.PersistField
      (GHC.Base.Maybe Data.Text.Internal.Text)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe Data.Text.Internal.Text)
                  Foundation.$fPersistEntityFuncionario4
                  (Database.Persist.Class.PersistField.$fPersistFieldMaybe_$cfromPersistValue
                     @ Data.Text.Internal.Text
                     Database.Persist.Class.PersistField.$fPersistFieldText0) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Inventario
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Inventario
                  Foundation.$fPersistFieldKey2
                  Foundation.$fToJSONKey2
                  Foundation.$fFromJSONKey2_$cparseJSON
                    `cast`
                  (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                            <Database.Persist.Class.PersistEntity.Key
                               Foundation.Inventario>_N))
                  Foundation.$fShowKey2
                  Foundation.$fReadKey2
                  Foundation.$fEqKey2
                  Foundation.$fOrdKey2
                  Foundation.$fPersistEntityInventario_$ckeyToValues
                  Foundation.$fPersistEntityInventario_$ckeyFromValues
                  Foundation.$fPersistEntityInventario_$s$WInventarioId
                  Foundation.$fPersistEntityInventario_$centityDef
                  Foundation.$fPersistEntityInventario_$cpersistFieldDef
                  Foundation.$fPersistEntityInventario_$ctoPersistFields
                  Foundation.$fPersistEntityInventario_$cfromPersistValues
                  Foundation.$fPersistEntityInventario_$cpersistUniqueKeys
                  Foundation.$fPersistEntityInventario_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityInventario_$cpersistUniqueToValues
                  Foundation.$fPersistEntityInventario_$cfieldLens -}
11433927d9ee9f84ce0e963492500d8d
  $fPersistEntityInventario1 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityInventario4 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario2
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
5eb3f64473e7695b35a62c48b84db49f
  $fPersistEntityInventario10 ::
    Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Inventario"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "inventario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Id"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityInventario8
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente18))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityInventario11
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   (GHC.Types.[] @ Data.Text.Internal.Text)
                   dt
                   GHC.Types.False } } } } }) -}
20fc7534ce163ec15c3f8239fbba19f6
  $fPersistEntityInventario11 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityCliente36
                   Foundation.$fPersistEntityInventario12) -}
41df2205b688832f8e5e70c8a5b98c00
  $fPersistEntityInventario12 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityInventario15
                   Foundation.$fPersistEntityInventario13) -}
1178d04fb1df37ead3293f1c302c6815
  $fPersistEntityInventario13 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityInventario14
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
889b587c4ab4afe38c171349b8556521
  $fPersistEntityInventario14 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "disponibilidade"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario2
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
832114ba6ff6bd41ac52ab197c2a9448
  $fPersistEntityInventario15 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "tipo"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario16 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                           Foundation.Inventario
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fPersistEntityInventario17
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Class.PersistEntity.Key
                                    Foundation.Inventario>_N <Database.Persist.Class.PersistEntity.Key
                                                                Foundation.Inventario>_N) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario17 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Inventario
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Inventario>_N) -}
f66c29027f47821a541079363f6e7df5
  $fPersistEntityInventario2 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityInventario3) -}
c8e7a53f05b8f18af912a386b8566e0a
  $fPersistEntityInventario3 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Int"#) -}
6be1532912321748ebca73037b058e04
  $fPersistEntityInventario4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "disponibilidade"#) -}
e6b43f22af08c38d070b1c24f3b7cc79
  $fPersistEntityInventario5 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityInventario6 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente4
                   Database.Persist.Types.Base.SqlString
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
3a4ddd7cf17d06c2b4b0a1097c9e385e
  $fPersistEntityInventario6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "tipo"#) -}
545f2f77cd883b3f777e1749bda6fdaf
  $fPersistEntityInventario7 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Id"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Inventario"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario8
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } } }) -}
7e38ce67d89af371cefad18d83efe3f5
  $fPersistEntityInventario8 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityInventario9) -}
6ab74a62578bf0dfb0226bba1d100976
  $fPersistEntityInventario9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "InventarioId"#) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Inventario -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Inventario) ->
                 Foundation.$fPersistEntityInventario10) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Inventario field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity
            Foundation.Inventario
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Inventario)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U(U,U,U))>,
     Unfolding: (\ @ field
                   (dk :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Inventario field)
                   @ (f :: * -> *)
                   ($dFunctor :: GHC.Base.Functor f)
                   (eta :: field -> f field)
                   (eta1 :: Database.Persist.Class.PersistEntity.Entity
                              Foundation.Inventario) ->
                 case dk
                        `cast`
                      (Foundation.D:R:EntityFieldInventariotyp0[0] <field>_N) of wild {
                   Foundation.InventarioId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <Database.Persist.Class.PersistEntity.Key
                                                               Foundation.Inventario>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Inventario)
                        (\ (key :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Inventario
                           $dPersistEntity
                           key `cast` (Sub cobox0)
                           value })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            ds1 `cast` (Sub (Sym cobox0)) })) }
                   Foundation.InventarioNome $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Inventario)
                        (\ (x :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Inventario
                           $dPersistEntity
                           key
                           (case value of wild2 { Foundation.Inventario ds ds1 dt ->
                            case x `cast`
                                 (Sub cobox0) of dt1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                            Foundation.Inventario dt1 ds1 dt } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            case ds2 of wild2 { Foundation.Inventario ds ds4 dt ->
                            ds `cast` (Sub (Sym cobox0)) } })) }
                   Foundation.InventarioTipo $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Inventario)
                        (\ (x :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Inventario
                           $dPersistEntity
                           key
                           (case value of wild2 { Foundation.Inventario ds ds1 dt ->
                            case x `cast`
                                 (Sub cobox0) of dt1 { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                            Foundation.Inventario ds dt1 dt } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            case ds2 of wild2 { Foundation.Inventario ds ds4 dt ->
                            ds4 `cast` (Sub (Sym cobox0)) } })) }
                   Foundation.InventarioDisponibilidade $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ field
                             @ GHC.Types.Int
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <field>_N <GHC.Types.Int>_N) of cobox0 { DEFAULT ->
                      GHC.Base.fmap
                        @ f
                        $dFunctor
                        @ field
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Inventario)
                        (\ (x :: field) ->
                         case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity key value ->
                         Database.Persist.Class.PersistEntity.Entity
                           @ Foundation.Inventario
                           $dPersistEntity
                           key
                           (case value of wild2 { Foundation.Inventario ds ds1 dt ->
                            case x `cast` (Sub cobox0) of dt1 { GHC.Types.I# dt2 ->
                            Foundation.Inventario ds ds1 dt2 } }) })
                        (eta
                           (case eta1 of wild1 { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                            case ds2 of wild2 { Foundation.Inventario ds ds4 dt ->
                            (GHC.Types.I# dt) `cast` (Sub (Sym cobox0)) } })) } }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Inventario
  {- Arity: 1, Strictness: <S,U> -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                        y `cast`
                        (Trans
                             (Sym (Foundation.N:R:KeyInventario[0]))
                             (Sym (Foundation.D:R:KeyInventario0[0]))) }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Inventario) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (Foundation.D:R:KeyInventario0[0])
                           (Trans
                                (Foundation.N:R:KeyInventario[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Inventario typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Inventario typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldInventariotyp0[0] <typ>_N) of wild {
                   Foundation.InventarioId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Inventario>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityInventario7 }
                   Foundation.InventarioNome $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityCliente15 }
                   Foundation.InventarioTipo $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ Data.Text.Internal.Text
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Data.Text.Internal.Text>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityInventario5 }
                   Foundation.InventarioDisponibilidade $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ GHC.Types.Int
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <GHC.Types.Int>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityInventario1 } }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cpersistUniqueKeys ::
    Foundation.Inventario
    -> [Database.Persist.Class.PersistEntity.Unique
          Foundation.Inventario]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*H>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Inventario) ->
                 case ds of wild { Foundation.Inventario _nome _tipo dt ->
                 GHC.Types.[]
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Inventario) }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Inventario
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Inventario) ->
                 Foundation.$fPersistEntityCliente2) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Inventario
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Inventario) ->
                 Foundation.$fPersistEntityCliente1) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$ctoPersistFields ::
    Foundation.Inventario
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SSL),1*U(U,U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Inventario) ->
                 case ds of wild { Foundation.Inventario x x1 dt ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ Data.Text.Internal.Text
                      Database.Persist.Class.PersistField.$fPersistFieldText0
                      x)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ Data.Text.Internal.Text
                         Database.Persist.Class.PersistField.$fPersistFieldText0
                         x1)
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ GHC.Types.Int
                            Database.Persist.Class.PersistField.$fPersistFieldInt
                            (GHC.Types.I# dt))
                         (GHC.Types.[]
                            @ Database.Persist.Class.PersistField.SomePersistField))) }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistEntityInventario_$s$WInventarioId ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Inventario
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Strictness: m1, Inline: INLINE,
     Unfolding: InlineRule (0, False, False)
                (Foundation.InventarioId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   Foundation.$fPersistEntityInventario16)
                  `cast`
                (Sym (Foundation.D:R:EntityFieldInventariotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                      Foundation.Inventario>_N) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio ::
    Database.Persist.Class.PersistEntity.PersistEntity
      Foundation.Relatorio
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Relatorio
                  Foundation.$fPersistFieldKey
                  Foundation.$fToJSONKey
                  Foundation.$fFromJSONKey_$cparseJSON
                    `cast`
                  (Sym (Data.Aeson.Types.Class.N:FromJSON[0]
                            <Database.Persist.Class.PersistEntity.Key Foundation.Relatorio>_N))
                  Foundation.$fShowKey
                  Foundation.$fReadKey
                  Foundation.$fEqKey
                  Foundation.$fOrdKey
                  Foundation.$fPersistEntityRelatorio_$ckeyToValues
                  Foundation.$fPersistEntityRelatorio_$ckeyFromValues
                  Foundation.$fPersistEntityRelatorio_$s$WRelatorioId
                  Foundation.$fPersistEntityRelatorio_$centityDef
                  Foundation.$fPersistEntityRelatorio_$cpersistFieldDef
                  Foundation.$fPersistEntityRelatorio_$ctoPersistFields
                  Foundation.$fPersistEntityRelatorio_$cfromPersistValues
                  Foundation.$fPersistEntityRelatorio_$cpersistUniqueKeys
                  Foundation.$fPersistEntityRelatorio_$cpersistUniqueToFieldNames
                  Foundation.$fPersistEntityRelatorio_$cpersistUniqueToValues
                  Foundation.$fPersistEntityRelatorio_$cfieldLens -}
1a0e5240bdc7ef33099ad15182194e6c
  $fPersistEntityRelatorio1 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Types.Base.HaskellName,
                      Database.Persist.Types.Base.DBName)
                   Foundation.$fPersistEntityRelatorio8
                   Foundation.$fPersistEntityRelatorio2) -}
7257c3fb26c905b8b3bcebe3fc2f71ee
  $fPersistEntityRelatorio10 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "concluido"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario2
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   Database.Persist.Types.Base.NoReference }) -}
915e2aae507de3e2c30d7c96c805211e
  $fPersistEntityRelatorio11 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityRelatorio5 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Funcionario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityFuncionario13
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
bc9aa03cd5b2cd7a504b80cc537a075b
  $fPersistEntityRelatorio12 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityRelatorio7 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Inventario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario8
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
98b4ad249a6b04042d7724910f56539f
  $fPersistEntityRelatorio13 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Foundation.$fPersistEntityRelatorio9 of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Cliente"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente22
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
1d373b0efe83ebc24d7f6d52f19871c0
  $fPersistEntityRelatorio14 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Id"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Relatorio"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityRelatorio15
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } } }) -}
8276cbd7eddb102867427aae757a43d3
  $fPersistEntityRelatorio15 :: Database.Persist.Types.Base.FieldType
  {- Unfolding: (Database.Persist.Types.Base.FTTypeCon
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Foundation.$fPersistEntityRelatorio16) -}
687f17ecb86dfd5e8cb48436e989daa3
  $fPersistEntityRelatorio16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "RelatorioId"#) -}
744e6fc30846995eaf89d76a2d83fb39
  $fPersistEntityRelatorio17 :: Database.Persist.Types.Base.EntityDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "Relatorio"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "relatorio"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 case Data.Text.Show.unpackCString#
                        "Id"# of nt2 { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                 case Data.Text.Show.unpackCString#
                        "id"# of nt3 { Data.Text.Internal.Text ipv9 ipv10 ipv11 ->
                 case Foundation.$fPersistEntityCliente_$sfromList
                        @ [Database.Persist.Types.Base.ExtraLine]
                        (GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              [Database.Persist.Types.Base.ExtraLine])) of dt { DEFAULT ->
                 Database.Persist.Types.Base.EntityDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   (Database.Persist.Types.Base.FieldDef
                      nt2 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      nt3 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                      Foundation.$fPersistEntityRelatorio15
                      Database.Persist.Types.Base.SqlInt64
                      (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                      GHC.Types.True
                      (Database.Persist.Types.Base.ForeignRef
                         nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                         Foundation.$fPersistEntityCliente18))
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   Foundation.$fPersistEntityRelatorio22
                   Foundation.$fPersistEntityRelatorio20
                   (GHC.Types.[] @ Database.Persist.Types.Base.ForeignDef)
                   Foundation.$fPersistEntityRelatorio18
                   dt
                   GHC.Types.False } } } } }) -}
0e81f0b6bb8f35fa987c8d6417f17164
  $fPersistEntityRelatorio18 :: [Data.Text.Internal.Text]
  {- Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fPersistEntityRelatorio19
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
5bf4c8990ad3d69a4ab5c6f0db00530e
  $fPersistEntityRelatorio19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Show"#) -}
c29faddce568cd4ecbfaadee8db97587
  $fPersistEntityRelatorio2 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Types.Base.HaskellName,
                      Database.Persist.Types.Base.DBName)
                   Foundation.$fPersistEntityRelatorio6
                   Foundation.$fPersistEntityRelatorio3) -}
d2f874a4dba25b1be5dbb3f8125ceecc
  $fPersistEntityRelatorio20 ::
    [Database.Persist.Types.Base.UniqueDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.UniqueDef
                   Foundation.$fPersistEntityRelatorio21
                   (GHC.Types.[] @ Database.Persist.Types.Base.UniqueDef)) -}
7867d299402b20df477f2f19198c9635
  $fPersistEntityRelatorio21 :: Database.Persist.Types.Base.UniqueDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "UniqueRelato"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "unique_relato"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.UniqueDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt1 `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityRelatorio1
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr) } }) -}
5d1d315fc7fd533116279f8e6f8823d4
  $fPersistEntityRelatorio22 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityRelatorio28
                   Foundation.$fPersistEntityRelatorio23) -}
5a40ac250db77f739a790262dc5fa3bc
  $fPersistEntityRelatorio23 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityRelatorio27
                   Foundation.$fPersistEntityRelatorio24) -}
cf3d777a1565374246a7df4f6e227c1a
  $fPersistEntityRelatorio24 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityRelatorio26
                   Foundation.$fPersistEntityRelatorio25) -}
e5603d3858ca98bb0663b1de9c821d0a
  $fPersistEntityRelatorio25 ::
    [Database.Persist.Types.Base.FieldDef]
  {- Unfolding: (GHC.Types.:
                   @ Database.Persist.Types.Base.FieldDef
                   Foundation.$fPersistEntityRelatorio10
                   (GHC.Types.[] @ Database.Persist.Types.Base.FieldDef)) -}
a7f81bef946abd99273c539f6f9fcd04
  $fPersistEntityRelatorio26 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "funcionarioid"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Funcionario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityFuncionario13
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
cfe2a15e17e7d3e80a472ee300d2722b
  $fPersistEntityRelatorio27 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "itemid"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Inventario"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityInventario8
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
238fec1694e4a67dc85d65a77d9a4839
  $fPersistEntityRelatorio28 :: Database.Persist.Types.Base.FieldDef
  {- Unfolding: (case Data.Text.Show.unpackCString#
                        "clienteid"# of nt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                 case Data.Text.Show.unpackCString#
                        "Cliente"# of nt1 { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                 Database.Persist.Types.Base.FieldDef
                   nt `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                   nt `cast` (Sym (Database.Persist.Types.Base.N:DBName[0]))
                   Foundation.$fPersistEntityCliente22
                   Database.Persist.Types.Base.SqlInt64
                   (GHC.Types.[] @ Database.Persist.Types.Base.Attr)
                   GHC.Types.True
                   (Database.Persist.Types.Base.ForeignRef
                      nt1 `cast` (Sym (Database.Persist.Types.Base.N:HaskellName[0]))
                      Foundation.$fPersistEntityCliente18) } }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio29 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                           Foundation.Relatorio
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fPersistEntityRelatorio30
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) <Database.Persist.Class.PersistEntity.Key
                                    Foundation.Relatorio>_N <Database.Persist.Class.PersistEntity.Key
                                                               Foundation.Relatorio>_N) -}
fa8a21e39f54d9dd8fa5939e929eb9bf
  $fPersistEntityRelatorio3 ::
    [(Database.Persist.Types.Base.HaskellName,
      Database.Persist.Types.Base.DBName)]
  {- Unfolding: (GHC.Types.:
                   @ (Database.Persist.Types.Base.HaskellName,
                      Database.Persist.Types.Base.DBName)
                   Foundation.$fPersistEntityRelatorio4
                   (GHC.Types.[]
                      @ (Database.Persist.Types.Base.HaskellName,
                         Database.Persist.Types.Base.DBName))) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio30 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    GHC.Types.~~ Database.Persist.Class.PersistEntity.Key
                   Foundation.Relatorio
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   @~ <Database.Persist.Class.PersistEntity.Key
                         Foundation.Relatorio>_N) -}
fb534c1f98ed4e667339257c90fd8bd0
  $fPersistEntityRelatorio4 ::
    (Database.Persist.Types.Base.HaskellName,
     Database.Persist.Types.Base.DBName)
  {- Unfolding: ((Foundation.$fPersistEntityRelatorio5
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:HaskellName[0])),
                  Foundation.$fPersistEntityRelatorio5
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:DBName[0])))) -}
e481970c55ce32def15d716d87ac89f1
  $fPersistEntityRelatorio5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "funcionarioid"#) -}
ec43447521adf4336ac6b60a867a5924
  $fPersistEntityRelatorio6 ::
    (Database.Persist.Types.Base.HaskellName,
     Database.Persist.Types.Base.DBName)
  {- Unfolding: ((Foundation.$fPersistEntityRelatorio7
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:HaskellName[0])),
                  Foundation.$fPersistEntityRelatorio7
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:DBName[0])))) -}
6f6d4d912b0b95a30204a4d7cc8aedad
  $fPersistEntityRelatorio7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "itemid"#) -}
f281452a41d65902abe81bc5f2ab052d
  $fPersistEntityRelatorio8 ::
    (Database.Persist.Types.Base.HaskellName,
     Database.Persist.Types.Base.DBName)
  {- Unfolding: ((Foundation.$fPersistEntityRelatorio9
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:HaskellName[0])),
                  Foundation.$fPersistEntityRelatorio9
                    `cast`
                  (Sym (Database.Persist.Types.Base.N:DBName[0])))) -}
0b693ee483acd3cd7b7d3d3a1cc8ff9f
  $fPersistEntityRelatorio9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "clienteid"#) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$centityDef ::
    GHC.Base.Monad m =>
    m Foundation.Relatorio -> Database.Persist.Types.Base.EntityDef
  {- Arity: 2, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   (ds :: m Foundation.Relatorio) ->
                 Foundation.$fPersistEntityRelatorio17) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cfieldLens ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Relatorio field
    -> forall (f :: * -> *).
       GHC.Base.Functor f =>
       (field -> f field)
       -> Database.Persist.Class.PersistEntity.Entity Foundation.Relatorio
       -> f (Database.Persist.Class.PersistEntity.Entity
               Foundation.Relatorio)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><L,U(U,U,U(U,U,U,U))> -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cfromPersistValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Relatorio
  {- Arity: 1, Strictness: <S,U> -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$ckeyFromValues ::
    [Database.Persist.Types.Base.PersistValue]
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: [Database.Persist.Types.Base.PersistValue]) ->
                 case (Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                         (Database.Persist.TH.headNote x))
                        `cast`
                      (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))))_R of wild {
                   Data.Either.Left x1
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                        x1
                   Data.Either.Right y
                   -> Data.Either.Right
                        @ Data.Text.Internal.Text
                        @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                        y `cast`
                        (Trans
                             (Sym (Foundation.N:R:KeyRelatorio[0]))
                             (Sym (Foundation.D:R:KeyRelatorio0[0]))) }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$ckeyToValues ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Relatorio) ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (Foundation.D:R:KeyRelatorio0[0])
                           (Trans
                                (Foundation.N:R:KeyRelatorio[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue)) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cpersistFieldDef ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Relatorio typ
    -> Database.Persist.Types.Base.FieldDef
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ typ
                   (ds :: Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Relatorio typ) ->
                 case ds
                        `cast`
                      (Foundation.D:R:EntityFieldRelatoriotyp0[0] <typ>_N) of wild {
                   Foundation.RelatorioId $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Relatorio>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityRelatorio14 }
                   Foundation.RelatorioClienteid $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Cliente>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityRelatorio13 }
                   Foundation.RelatorioItemid $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Inventario>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityRelatorio12 }
                   Foundation.RelatorioFuncionarioid $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <Database.Persist.Class.PersistEntity.Key
                                                             Foundation.Funcionario>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityRelatorio11 }
                   Foundation.RelatorioConcluido $d~
                   -> case GHC.Types.HEq_sc
                             @ GHC.Types.*
                             @ GHC.Types.*
                             @ typ
                             @ GHC.Types.Int
                             $d~
                               `cast`
                             (Data.Type.Equality.N:~[0]
                                  <GHC.Types.*>_N <typ>_N <GHC.Types.Int>_N) of cobox0 { DEFAULT ->
                      Foundation.$fPersistEntityRelatorio10 } }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cpersistUniqueKeys ::
    Foundation.Relatorio
    -> [Database.Persist.Class.PersistEntity.Unique
          Foundation.Relatorio]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSSL),1*U(U,U,U,A)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Relatorio) ->
                 case ds of wild { Foundation.Relatorio _clienteid _itemid _funcionarioid dt ->
                 GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.Unique
                        Foundation.Relatorio)
                   (Foundation.UniqueRelato _clienteid _itemid _funcionarioid)
                     `cast`
                   (Sym (Foundation.D:R:UniqueRelatorio0[0]))
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Unique
                           Foundation.Relatorio)) }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cpersistUniqueToFieldNames ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Relatorio
    -> [(Database.Persist.Types.Base.HaskellName,
         Database.Persist.Types.Base.DBName)]
  {- Arity: 1, Strictness: <S,1*U>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Relatorio) ->
                 case ds of tpl { DEFAULT ->
                 Foundation.$fPersistEntityRelatorio1 }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$cpersistUniqueToValues ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Relatorio
    -> [Database.Persist.Types.Base.PersistValue]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Database.Persist.Class.PersistEntity.Unique
                            Foundation.Relatorio) ->
                 case ds
                        `cast`
                      (Foundation.D:R:UniqueRelatorio0[0]) of wild { Foundation.UniqueRelato x x1 x2 ->
                 GHC.Types.:
                   @ Database.Persist.Types.Base.PersistValue
                   (Database.Persist.Types.Base.PersistInt64
                      x `cast`
                      (Trans
                           (Foundation.D:R:KeyCliente0[0])
                           (Trans
                                (Foundation.N:R:KeyCliente[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                   (GHC.Types.:
                      @ Database.Persist.Types.Base.PersistValue
                      (Database.Persist.Types.Base.PersistInt64
                         x1
                           `cast`
                         (Trans
                              (Foundation.D:R:KeyInventario0[0])
                              (Trans
                                   (Foundation.N:R:KeyInventario[0])
                                   (Trans
                                        (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                        (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                      (GHC.Types.:
                         @ Database.Persist.Types.Base.PersistValue
                         (Database.Persist.Types.Base.PersistInt64
                            x2
                              `cast`
                            (Trans
                                 (Foundation.D:R:KeyFuncionario0[0])
                                 (Trans
                                      (Foundation.N:R:KeyFuncionario[0])
                                      (Trans
                                           (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                           (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                         (GHC.Types.[] @ Database.Persist.Types.Base.PersistValue))) }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$ctoPersistFields ::
    Foundation.Relatorio
    -> [Database.Persist.Class.PersistField.SomePersistField]
  {- Arity: 1, Strictness: <S(SSSL),1*U(U,U,U,U)>m2,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Relatorio) ->
                 case w of ww { Foundation.Relatorio ww1 ww2 ww3 ww4 ->
                 GHC.Types.:
                   @ Database.Persist.Class.PersistField.SomePersistField
                   (Database.Persist.Class.PersistField.SomePersistField
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                      Foundation.$fPersistFieldKey1
                      ww1)
                   (GHC.Types.:
                      @ Database.Persist.Class.PersistField.SomePersistField
                      (Database.Persist.Class.PersistField.SomePersistField
                         @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                         Foundation.$fPersistFieldKey2
                         ww2)
                      (GHC.Types.:
                         @ Database.Persist.Class.PersistField.SomePersistField
                         (Database.Persist.Class.PersistField.SomePersistField
                            @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                            Foundation.$fPersistFieldKey0
                            ww3)
                         (GHC.Types.:
                            @ Database.Persist.Class.PersistField.SomePersistField
                            (Database.Persist.Class.PersistField.SomePersistField
                               @ GHC.Types.Int
                               Database.Persist.Class.PersistField.$fPersistFieldInt
                               (GHC.Types.I# ww4))
                            (GHC.Types.[]
                               @ Database.Persist.Class.PersistField.SomePersistField)))) }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistEntityRelatorio_$s$WRelatorioId ::
    Database.Persist.Class.PersistEntity.EntityField
      Foundation.Relatorio
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Strictness: m1, Inline: INLINE,
     Unfolding: InlineRule (0, False, False)
                (Foundation.RelatorioId
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   Foundation.$fPersistEntityRelatorio29)
                  `cast`
                (Sym (Foundation.D:R:EntityFieldRelatoriotyp0[0]) <Database.Persist.Class.PersistEntity.Key
                                                                     Foundation.Relatorio>_N) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldCliente ::
    Database.Persist.Class.PersistField.PersistField Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldCliente_$ctoPersistValue
                  Foundation.$fPersistFieldCliente_$cfromPersistValue -}
462ecd2371ebffb57595b4debaa18134
  $fPersistFieldCliente1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente12
                   Foundation.$fPersistFieldCliente2) -}
d22fb853101681e0703a92c347f4dec7
  $fPersistFieldCliente10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "endereco"#) -}
16b3e0379534108076d50ac1b8e29d94
  $fPersistFieldCliente11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cpf"#) -}
8ba07d235e5949a272456a08a9e5aba4
  $fPersistFieldCliente12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nome"#) -}
27bd83516c45f256deb598f0dbb7e06f
  $fPersistFieldCliente13 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
560f348cb4e74135f3e5215734a39680
  $fPersistFieldCliente14 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente15 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
cd4bc14dd31bf4eb4376579582bffff9
  $fPersistFieldCliente15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter1
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente7
                   0#
                   ipv }) -}
170bfebc7b7ce3c3d4701f198258a519
  $fPersistFieldCliente16 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente17 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
c1116ea5686f0cdf1b9020b12dc147fa
  $fPersistFieldCliente17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente8
                   0#
                   ipv }) -}
e44ac141e22c4b8c2d3b6bb97a4d0e97
  $fPersistFieldCliente18 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente19 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
7939e0b27119c2467c82e808a8bbc335
  $fPersistFieldCliente19 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter3
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente9
                   0#
                   ipv }) -}
053a7d49e894ff8b735b6f6b976fc9e5
  $fPersistFieldCliente2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente11
                   Foundation.$fPersistFieldCliente3) -}
0941407b7a7e3870de45bdf25b0c6eaa
  $fPersistFieldCliente20 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente21 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
5210776772d59d6c803e55db875af93d
  $fPersistFieldCliente21 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter4
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente10
                   0#
                   ipv }) -}
d05507eba6cecf71c2c47a19127831d0
  $fPersistFieldCliente22 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente23 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
75803c2ba50876d34419b3a344fe6880
  $fPersistFieldCliente23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter5
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente11
                   0#
                   ipv }) -}
4042b9fb33085b8db5205df760a591e7
  $fPersistFieldCliente24 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldCliente25 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
3634c2ebbebc32f5dfb3060c9b1161d1
  $fPersistFieldCliente25 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter6
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente12
                   0#
                   ipv }) -}
c5e4c6bc0f4e7949b29705167d57a715
  $fPersistFieldCliente3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente10
                   Foundation.$fPersistFieldCliente4) -}
fe985d244e62062fa43aff5589826343
  $fPersistFieldCliente4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente9
                   Foundation.$fPersistFieldCliente5) -}
2a5ddb0a139c429a0d08602a7e019c87
  $fPersistFieldCliente5 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente8
                   Foundation.$fPersistFieldCliente6) -}
6a75fc603b768abe9b5e05be50e61ba6
  $fPersistFieldCliente6 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente7
                   (GHC.Types.[] @ GHC.Base.String)) -}
5142c597bd083475b246c15652e6cf49
  $fPersistFieldCliente7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "telefone"#) -}
47a5eba87125ac7bf9341967d5387c74
  $fPersistFieldCliente8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "estado"#) -}
53b036daff29fa547680d8a3f91e04dd
  $fPersistFieldCliente9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cidade"#) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldCliente_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Cliente
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta2 :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta2 of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Cliente
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldCliente_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      Foundation.$fPersistEntityCliente_$cfromPersistValues
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ Database.Persist.Types.Base.PersistValue
                           (\ (name :: GHC.Base.String) ->
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Foundation.$wouter
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Foundation.$fPersistFieldCliente13
                                      name
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case Data.Aeson.Types.Instances.$w$slookup
                                   @ Database.Persist.Types.Base.PersistValue
                                   ww1
                                   ww2
                                   ww3
                                   columns of wild1 {
                              GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                              GHC.Base.Just v -> v } } })
                           Foundation.$fPersistFieldCliente1) }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldCliente_$ctoPersistValue ::
    Foundation.Cliente -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U,U,U)>m12,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Cliente) ->
                 case Foundation.$w$ctoPersistValue w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
41f664f5d9a45dfffadd053c1dbc551c
  $fPersistFieldCliente_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldFuncionario ::
    Database.Persist.Class.PersistField.PersistField
      Foundation.Funcionario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Funcionario
                  Foundation.$fPersistFieldFuncionario_$ctoPersistValue
                  Foundation.$fPersistFieldFuncionario_$cfromPersistValue -}
b28637c9cda28e4fce668c2e149a49e7
  $fPersistFieldFuncionario1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente12
                   Foundation.$fPersistFieldFuncionario2) -}
5efec7d165e715e5b123a5abe5bffc96
  $fPersistFieldFuncionario10 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldFuncionario11 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
685f69b421b28bbb7bb50f1a733a45ec
  $fPersistFieldFuncionario11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter9
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldFuncionario6
                   0#
                   ipv }) -}
05d71cb6cc6706cb16e418cedc6cf229
  $fPersistFieldFuncionario12 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldFuncionario13 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
b2c7f4c11bbaca2944f68335efe32ac6
  $fPersistFieldFuncionario13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter10
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldFuncionario7
                   0#
                   ipv }) -}
2889698537ea07ea4e57a74455ffba88
  $fPersistFieldFuncionario14 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldFuncionario15 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
a66b9cb5ba329e7b8f4166a52fc29f15
  $fPersistFieldFuncionario15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter11
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente12
                   0#
                   ipv }) -}
8bc246e0cd92a9b9040d298c10c660a3
  $fPersistFieldFuncionario2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldFuncionario7
                   Foundation.$fPersistFieldFuncionario3) -}
20f4e8fc891a86017f365bb09b333567
  $fPersistFieldFuncionario3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldFuncionario6
                   Foundation.$fPersistFieldFuncionario4) -}
c60f5701db8b1a8a9e11d7bd53d5f971
  $fPersistFieldFuncionario4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldFuncionario5
                   (GHC.Types.[] @ GHC.Base.String)) -}
4bff1d54e4d237af10f13c82bd3ba293
  $fPersistFieldFuncionario5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "senha"#) -}
cb5e6068ffac3d74a00260864efed535
  $fPersistFieldFuncionario6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "email"#) -}
734f511284a6211383683ed97d7edc12
  $fPersistFieldFuncionario7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "posicao"#) -}
d2746e00dd8af8bc13deb328942639f2
  $fPersistFieldFuncionario8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldFuncionario9 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
59a419450c74e92aed1894e643a9d19d
  $fPersistFieldFuncionario9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter8
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldFuncionario5
                   0#
                   ipv }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldFuncionario_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text Foundation.Funcionario
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta2 :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta2 of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Funcionario
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldFuncionario_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      Foundation.$fPersistEntityFuncionario_$cfromPersistValues
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ Database.Persist.Types.Base.PersistValue
                           (\ (name :: GHC.Base.String) ->
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Foundation.$wouter7
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Foundation.$fPersistFieldCliente13
                                      name
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case Data.Aeson.Types.Instances.$w$slookup
                                   @ Database.Persist.Types.Base.PersistValue
                                   ww1
                                   ww2
                                   ww3
                                   columns of wild1 {
                              GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                              GHC.Base.Just v -> v } } })
                           Foundation.$fPersistFieldFuncionario1) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldFuncionario_$ctoPersistValue ::
    Foundation.Funcionario -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Funcionario) ->
                 case Foundation.$w$ctoPersistValue1 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
4b2bdf9a1c8ee2dc871577e37c1fb039
  $fPersistFieldFuncionario_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldInventario ::
    Database.Persist.Class.PersistField.PersistField
      Foundation.Inventario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Inventario
                  Foundation.$fPersistFieldInventario_$ctoPersistValue
                  Foundation.$fPersistFieldInventario_$cfromPersistValue -}
d1ee9f6b7ac81a98cbf6b7c3b045752d
  $fPersistFieldInventario1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldCliente12
                   Foundation.$fPersistFieldInventario2) -}
55184cf101a417bb1fed41d1d7920c19
  $fPersistFieldInventario10 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldInventario11 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
26478e23d4d73ca01e4270e0614a067f
  $fPersistFieldInventario11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter15
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldCliente12
                   0#
                   ipv }) -}
090a11bfe2c8a5f5e281928e6cbc08b1
  $fPersistFieldInventario2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldInventario5
                   Foundation.$fPersistFieldInventario3) -}
de76544cb375ce589f9ae5ef99482ba8
  $fPersistFieldInventario3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldInventario4
                   (GHC.Types.[] @ GHC.Base.String)) -}
aa5f6439674cb3e8bd5db7827a2d10f0
  $fPersistFieldInventario4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "disponibilidade"#) -}
2e7f5093e001bdf0c6c4490aaa7826b0
  $fPersistFieldInventario5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tipo"#) -}
d6a480adf035a51c187e2cff2fbc6d4d
  $fPersistFieldInventario6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldInventario7 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
78eb8c567e11939d74fc80b135793efe
  $fPersistFieldInventario7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter13
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldInventario4
                   0#
                   ipv }) -}
d7b3e877e33eb72d32e3af9dd4c54beb
  $fPersistFieldInventario8 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldInventario9 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
a978e0e505042c499d95e8056675360d
  $fPersistFieldInventario9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter14
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldInventario5
                   0#
                   ipv }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldInventario_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Inventario
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta2 :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta2 of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Inventario
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldInventario_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      Foundation.$fPersistEntityInventario_$cfromPersistValues
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ Database.Persist.Types.Base.PersistValue
                           (\ (name :: GHC.Base.String) ->
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Foundation.$wouter12
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Foundation.$fPersistFieldCliente13
                                      name
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case Data.Aeson.Types.Instances.$w$slookup
                                   @ Database.Persist.Types.Base.PersistValue
                                   ww1
                                   ww2
                                   ww3
                                   columns of wild1 {
                              GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                              GHC.Base.Just v -> v } } })
                           Foundation.$fPersistFieldInventario1) }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldInventario_$ctoPersistValue ::
    Foundation.Inventario -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Inventario) ->
                 case Foundation.$w$ctoPersistValue2 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
9330cb149babd9307285927b475eac5e
  $fPersistFieldInventario_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldKey ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fPersistFieldKey_$ctoPersistValue
                  Foundation.$fPersistFieldKey_$cfromPersistValue -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldKey0 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fPersistFieldKey0_$ctoPersistValue
                  Foundation.$fPersistFieldKey0_$cfromPersistValue -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldKey0_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                  `cast`
                (<Database.Persist.Types.Base.PersistValue>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyFuncionario[0]))
                                        (Sym (Foundation.D:R:KeyFuncionario0[0]))))))_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldKey0_$ctoPersistValue ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Types.Base.PersistInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Database.Persist.Types.Base.PersistValue>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldKey1 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fPersistFieldKey1_$ctoPersistValue
                  Foundation.$fPersistFieldKey1_$cfromPersistValue -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldKey1_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                  `cast`
                (<Database.Persist.Types.Base.PersistValue>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyCliente[0]))
                                        (Sym (Foundation.D:R:KeyCliente0[0]))))))_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldKey1_$ctoPersistValue ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Types.Base.PersistInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Database.Persist.Types.Base.PersistValue>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldKey2 ::
    Database.Persist.Class.PersistField.PersistField
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fPersistFieldKey2_$ctoPersistValue
                  Foundation.$fPersistFieldKey2_$cfromPersistValue -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldKey2_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                  `cast`
                (<Database.Persist.Types.Base.PersistValue>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyInventario[0]))
                                        (Sym (Foundation.D:R:KeyInventario0[0]))))))_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldKey2_$ctoPersistValue ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Types.Base.PersistInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Database.Persist.Types.Base.PersistValue>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldKey_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either
         Data.Text.Internal.Text
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Class.PersistField.$fPersistFieldInt64_$cfromPersistValue
                  `cast`
                (<Database.Persist.Types.Base.PersistValue>_R
                 ->_R (Data.Either.Either
                         <Data.Text.Internal.Text>_R
                         (Trans
                              (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                              (Trans
                                   (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                   (Trans
                                        (Sym (Foundation.N:R:KeyRelatorio[0]))
                                        (Sym (Foundation.D:R:KeyRelatorio0[0]))))))_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldKey_$ctoPersistValue ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m3,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Types.Base.PersistInt64
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Database.Persist.Types.Base.PersistValue>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldRelatorio ::
    Database.Persist.Class.PersistField.PersistField
      Foundation.Relatorio
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Relatorio
                  Foundation.$fPersistFieldRelatorio_$ctoPersistValue
                  Foundation.$fPersistFieldRelatorio_$cfromPersistValue -}
ec622b4dd75761602883f14d2391a9a8
  $fPersistFieldRelatorio1 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldRelatorio8
                   Foundation.$fPersistFieldRelatorio2) -}
3b7d60c060169c955212c8384182489a
  $fPersistFieldRelatorio10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter17
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldRelatorio5
                   0#
                   ipv }) -}
b4ac78d4aabd2bd6d14ac7c761e79df4
  $fPersistFieldRelatorio11 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldRelatorio12 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
fd6bf15d46a7f0905c7041a59e889964
  $fPersistFieldRelatorio12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter18
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldRelatorio6
                   0#
                   ipv }) -}
66351f9129c5b051554a88dc794c899c
  $fPersistFieldRelatorio13 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldRelatorio14 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
7b713a92c2d8e0e54d8ac32459b027fd
  $fPersistFieldRelatorio14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter19
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldRelatorio7
                   0#
                   ipv }) -}
4d5be9fa1c2e448e393ce4b18b0d943c
  $fPersistFieldRelatorio15 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldRelatorio16 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
b61febf3c20f32e3cbac23c1192df9cd
  $fPersistFieldRelatorio16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Foundation.$wouter20
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Foundation.$fPersistFieldCliente13
                   Foundation.$fPersistFieldRelatorio8
                   0#
                   ipv }) -}
8faddc8f2d3f1cf3e57a23e2bb70f95c
  $fPersistFieldRelatorio2 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldRelatorio7
                   Foundation.$fPersistFieldRelatorio3) -}
dc2d8093559d624dc54d796e1c30b486
  $fPersistFieldRelatorio3 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldRelatorio6
                   Foundation.$fPersistFieldRelatorio4) -}
d3c15b4ab37388ec6ea54562a66daa89
  $fPersistFieldRelatorio4 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.$fPersistFieldRelatorio5
                   (GHC.Types.[] @ GHC.Base.String)) -}
139321ee7497dd7b0c1d06f234466399
  $fPersistFieldRelatorio5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "concluido"#) -}
ddf5f0ea7e532c83e1ee5a34772b022d
  $fPersistFieldRelatorio6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "funcionarioid"#) -}
2f90e3905110cba1632b4e1b9a186d88
  $fPersistFieldRelatorio7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "itemid"#) -}
6067bd748a5834ed166b69944cb14be1
  $fPersistFieldRelatorio8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clienteid"#) -}
f70523c29d76a9c876dae785370bfb75
  $fPersistFieldRelatorio9 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Foundation.$fPersistFieldRelatorio10 of ds1 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldRelatorio_$cfromPersistValue ::
    Database.Persist.Types.Base.PersistValue
    -> Data.Either.Either Data.Text.Internal.Text Foundation.Relatorio
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta2 :: Database.Persist.Types.Base.PersistValue) ->
                 case Database.Persist.Class.PersistField.getPersistMap
                        eta2 of wild {
                   Data.Either.Left l
                   -> Data.Either.Left
                        @ Data.Text.Internal.Text
                        @ Foundation.Relatorio
                        l
                   Data.Either.Right r
                   -> let {
                        columns :: Data.HashMap.Base.HashMap
                                     Data.Text.Internal.Text
                                     Database.Persist.Types.Base.PersistValue
                        = Foundation.$fPersistFieldRelatorio_go
                            r
                            (Data.HashMap.Base.Empty
                               @ Data.Text.Internal.Text
                               @ Database.Persist.Types.Base.PersistValue)
                      } in
                      Foundation.$fPersistEntityRelatorio_$cfromPersistValues
                        (GHC.Base.map
                           @ [GHC.Types.Char]
                           @ Database.Persist.Types.Base.PersistValue
                           (\ (name :: GHC.Base.String) ->
                            case GHC.Magic.runRW#
                                   @ 'GHC.Types.PtrRepLifted
                                   @ Data.Text.Internal.Text
                                   (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                    case GHC.Prim.newByteArray#
                                           @ GHC.Prim.RealWorld
                                           8#
                                           s1 of ds1 { (#,#) ipv ipv1 ->
                                    Foundation.$wouter16
                                      (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                                      Foundation.$fPersistFieldCliente13
                                      name
                                      0#
                                      ipv }) of ds1 { (#,#) ipv ipv1 ->
                            case ipv1 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                            case Data.Aeson.Types.Instances.$w$slookup
                                   @ Database.Persist.Types.Base.PersistValue
                                   ww1
                                   ww2
                                   ww3
                                   columns of wild1 {
                              GHC.Base.Nothing -> Database.Persist.Types.Base.PersistNull
                              GHC.Base.Just v -> v } } })
                           Foundation.$fPersistFieldRelatorio1) }) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldRelatorio_$ctoPersistValue ::
    Foundation.Relatorio -> Database.Persist.Types.Base.PersistValue
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>m12, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Foundation.Relatorio) ->
                 case Foundation.$w$ctoPersistValue3 w of ww { Unit# ww1 ->
                 Database.Persist.Types.Base.PersistMap ww1 }) -}
735af24b84e69a0ec2f3561d1999430e
  $fPersistFieldRelatorio_go ::
    [(Data.Text.Internal.Text,
      Database.Persist.Types.Base.PersistValue)]
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
    -> Data.HashMap.Base.HashMap
         Data.Text.Internal.Text Database.Persist.Types.Base.PersistValue
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldSqlCliente ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Cliente
                  Foundation.$fPersistFieldCliente
                  Foundation.$fPersistFieldSqlCliente_$csqlType -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldSqlCliente_$csqlType ::
    Data.Proxy.Proxy Foundation.Cliente
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Cliente) ->
                 Database.Persist.Types.Base.SqlString) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldSqlFuncionario ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Funcionario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Funcionario
                  Foundation.$fPersistFieldFuncionario
                  Foundation.$fPersistFieldSqlFuncionario_$csqlType -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldSqlFuncionario_$csqlType ::
    Data.Proxy.Proxy Foundation.Funcionario
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Funcionario) ->
                 Database.Persist.Types.Base.SqlString) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldSqlInventario ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Inventario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Inventario
                  Foundation.$fPersistFieldInventario
                  Foundation.$fPersistFieldSqlInventario_$csqlType -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldSqlInventario_$csqlType ::
    Data.Proxy.Proxy Foundation.Inventario
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Inventario) ->
                 Database.Persist.Types.Base.SqlString) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldSqlKey ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fPersistFieldKey
                  Foundation.$fPersistFieldSqlKey_$csqlType -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldSqlKey0 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fPersistFieldKey0
                  Foundation.$fPersistFieldSqlKey0_$csqlType -}
d819cf7b6367ff8d28cefcd140b736a1
  $fPersistFieldSqlKey0_$csqlType ::
    Data.Proxy.Proxy
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                  `cast`
                ((Data.Proxy.Proxy
                    <*>_N
                    <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                      Foundation.Funcionario>)_R
                 ->_R <Database.Persist.Types.Base.SqlType>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldSqlKey1 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fPersistFieldKey1
                  Foundation.$fPersistFieldSqlKey1_$csqlType -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fPersistFieldSqlKey1_$csqlType ::
    Data.Proxy.Proxy
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                  `cast`
                ((Data.Proxy.Proxy
                    <*>_N
                    <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                      Foundation.Cliente>)_R
                 ->_R <Database.Persist.Types.Base.SqlType>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldSqlKey2 ::
    Database.Persist.Sql.Class.PersistFieldSql
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fPersistFieldKey2
                  Foundation.$fPersistFieldSqlKey2_$csqlType -}
4ab9eee06efaae906f8b44e3731bce42
  $fPersistFieldSqlKey2_$csqlType ::
    Data.Proxy.Proxy
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                  `cast`
                ((Data.Proxy.Proxy
                    <*>_N
                    <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                      Foundation.Inventario>)_R
                 ->_R <Database.Persist.Types.Base.SqlType>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldSqlKey_$csqlType ::
    Data.Proxy.Proxy
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Database.Persist.Sql.Class.$fPersistFieldSqlInt64_$csqlType
                  `cast`
                ((Data.Proxy.Proxy
                    <*>_N
                    <GHC.Int.Int64, Database.Persist.Class.PersistEntity.Key
                                      Foundation.Relatorio>)_R
                 ->_R <Database.Persist.Types.Base.SqlType>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldSqlRelatorio ::
    Database.Persist.Sql.Class.PersistFieldSql Foundation.Relatorio
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Relatorio
                  Foundation.$fPersistFieldRelatorio
                  Foundation.$fPersistFieldSqlRelatorio_$csqlType -}
cbacfe22e0662853dca97a7e15906e78
  $fPersistFieldSqlRelatorio_$csqlType ::
    Data.Proxy.Proxy Foundation.Relatorio
    -> Database.Persist.Types.Base.SqlType
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Foundation.Relatorio) ->
                 Database.Persist.Types.Base.SqlString) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fReadKey_$creadsPrec
                  Foundation.$fReadKey_$creadList
                  Foundation.$fReadKey_$creadPrec
                  Foundation.$fReadKey_$creadListPrec -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey0 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fReadKey0_$creadsPrec
                  Foundation.$fReadKey0_$creadList
                  Foundation.$fReadKey0_$creadPrec
                  Foundation.$fReadKey0_$creadListPrec -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey0_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
                   Foundation.$fReadKey11) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey0_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey8
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Database.Persist.Class.PersistEntity.Key
                                        Foundation.Funcionario]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Database.Persist.Class.PersistEntity.Key
                                   Foundation.Funcionario]>_R))) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey0_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey9
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Funcionario>_R)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey0_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   ((GHC.Read.$fReadDouble10
                       @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                       Foundation.$fReadKey10
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Database.Persist.Class.PersistEntity.Key
                                              Foundation.Funcionario>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Funcionario>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Database.Persist.Class.PersistEntity.Key
                            Foundation.Funcionario>_R)
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Funcionario)))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey1 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fReadKey1_$creadsPrec
                  Foundation.$fReadKey1_$creadList
                  Foundation.$fReadKey1_$creadPrec
                  Foundation.$fReadKey1_$creadListPrec -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Funcionario
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec1 ww1 @ b w1 }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey11 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fReadKey9
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Funcionario>_R))
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Funcionario])) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey12 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Database.Persist.Class.PersistEntity.Key
                               Foundation.Inventario]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   Foundation.$fReadKey13
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Inventario>_R))
                   @ b
                   eta1) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey13 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   Foundation.$fReadKey14
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistEntity.Key
                                          Foundation.Inventario>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Inventario>_R)))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey14 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Inventario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Inventario
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec2 ww1 @ b w1 }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey15 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   Foundation.$fReadKey13
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Inventario>_R))
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Inventario])) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey16 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Database.Persist.Class.PersistEntity.Key
                               Foundation.Relatorio]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   Foundation.$fReadKey17
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key Foundation.Relatorio>_R))
                   @ b
                   eta1) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey17 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   Foundation.$fReadKey18
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistEntity.Key
                                          Foundation.Relatorio>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Relatorio>_R)))) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey18 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Relatorio
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec3 ww1 @ b w1 }) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey19 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   Foundation.$fReadKey17
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key Foundation.Relatorio>_R))
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Relatorio])) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey1_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
                   Foundation.$fReadKey7) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey1_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey4
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Database.Persist.Class.PersistEntity.Key
                                        Foundation.Cliente]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Database.Persist.Class.PersistEntity.Key
                                   Foundation.Cliente]>_R))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey1_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey5
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Cliente>_R)) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey1_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   ((GHC.Read.$fReadDouble10
                       @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                       Foundation.$fReadKey6
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Database.Persist.Class.PersistEntity.Key
                                              Foundation.Cliente>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Cliente>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R)
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Cliente)))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey2 ::
    GHC.Read.Read
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fReadKey2_$creadsPrec
                  Foundation.$fReadKey2_$creadList
                  Foundation.$fReadKey2_$creadPrec
                  Foundation.$fReadKey2_$creadListPrec -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey2_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
                   Foundation.$fReadKey15) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey2_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey12
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Database.Persist.Class.PersistEntity.Key
                                        Foundation.Inventario]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Database.Persist.Class.PersistEntity.Key
                                   Foundation.Inventario]>_R))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey2_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey13
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Inventario>_R)) -}
4ab9eee06efaae906f8b44e3731bce42
  $fReadKey2_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   ((GHC.Read.$fReadDouble10
                       @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                       Foundation.$fReadKey14
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Database.Persist.Class.PersistEntity.Key
                                              Foundation.Inventario>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Inventario>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Database.Persist.Class.PersistEntity.Key Foundation.Inventario>_R)
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Inventario)))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey4 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Database.Persist.Class.PersistEntity.Key
                               Foundation.Cliente]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fReadKey5
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R))
                   @ b
                   eta1) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey5 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fReadKey6
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistEntity.Key
                                          Foundation.Cliente>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Cliente>_R)))) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey6 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente
                          -> Text.ParserCombinators.ReadP.P b) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$creadPrec ww1 @ b w1 }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fReadKey7 ::
    Text.ParserCombinators.ReadP.P
      [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fReadKey5
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R))
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente])) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey8 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Database.Persist.Class.PersistEntity.Key
                               Foundation.Funcionario]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fReadKey9
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Database.Persist.Class.PersistEntity.Key
                                Foundation.Funcionario>_R))
                   @ b
                   eta1) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fReadKey9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fReadKey10
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Database.Persist.Class.PersistEntity.Key
                                          Foundation.Funcionario>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Database.Persist.Class.PersistEntity.Key
                                     Foundation.Funcionario>_R)))) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
                   Foundation.$fReadKey19) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey16
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Database.Persist.Class.PersistEntity.Key
                                        Foundation.Relatorio]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Database.Persist.Class.PersistEntity.Key
                                   Foundation.Relatorio]>_R))) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadKey17
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Database.Persist.Class.PersistEntity.Key
                             Foundation.Relatorio>_R)) -}
cbacfe22e0662853dca97a7e15906e78
  $fReadKey_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   ((GHC.Read.$fReadDouble10
                       @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                       Foundation.$fReadKey18
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Database.Persist.Class.PersistEntity.Key
                                              Foundation.Relatorio>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Relatorio>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Database.Persist.Class.PersistEntity.Key Foundation.Relatorio>_R)
                      @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Relatorio)))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute_$creadPrec
                  Foundation.$fReadRoute_$creadListPrec -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Yesod.Routes.Class.Route Foundation.App]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Yesod.Routes.Class.Route Foundation.App]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   @ b
                   eta1) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute10 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute39
                   Foundation.$fReadRoute11) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute11 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute36
                   Foundation.$fReadRoute12) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute33
                   Foundation.$fReadRoute13) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute13 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute30
                   Foundation.$fReadRoute14) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute14 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute27
                   Foundation.$fReadRoute15) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute15 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute24
                   Foundation.$fReadRoute16) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute21
                   Foundation.$fReadRoute17) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute18
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           (Yesod.Routes.Class.Route Foundation.App)))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute18 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute20,
                  Foundation.$fReadRoute19
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute19 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListRelatorioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <Yesod.Routes.Class.Route Foundation.App>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))) -}
7a86a2abddea86ad6baba685f87f5c62
  $fReadRoute20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListRelatorioR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute21 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute23,
                  Foundation.$fReadRoute22
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute22 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.RelatorioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
7da16ae3ae953184c12182f0ba89ef14
  $fReadRoute23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RelatorioR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute24 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute26,
                  Foundation.$fReadRoute25
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute25 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListClienteR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
a676a7f26cc9c4bf1b9aed1eadbef2af
  $fReadRoute26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListClienteR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute27 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute29,
                  Foundation.$fReadRoute28
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute28 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ClienteR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
5770946c70280b6186336a204fc36013
  $fReadRoute29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ClienteR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U(U)><L,U>,
     Unfolding: (\ (n :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (GHC.Read.choose2
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      Foundation.$fReadRoute7
                      n
                      @ b
                      eta)
                   (case n of wild { GHC.Types.I# x ->
                    let {
                      karg :: Text.ParserCombinators.ReadP.P b
                      = case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<=# x 10#) of wild2 {
                          GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                          GHC.Types.True
                          -> let {
                               lvl121 :: Text.ParserCombinators.ReadP.P b
                               = let {
                                   lvl122 :: Text.ParserCombinators.ReadP.P b
                                   = (GHC.Read.$fReadDouble10
                                        @ (Yesod.Routes.Class.Route Yesod.Static.Static)
                                        Yesod.Static.$fReadRoute3
                                          `cast`
                                        (Trans
                                             (<Text.ParserCombinators.ReadPrec.Prec>_R
                                              ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                            <Yesod.Routes.Class.Route
                                                               Yesod.Static.Static>_R))
                                             (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                       <Yesod.Routes.Class.Route
                                                          Yesod.Static.Static>_R)))
                                        Foundation.$fReadRoute6)
                                       `cast`
                                     (Text.ParserCombinators.ReadP.N:ReadP[0]
                                          <Yesod.Routes.Class.Route Yesod.Static.Static>_R)
                                       @ b
                                       (\ (a1 :: Yesod.Routes.Class.Route Yesod.Static.Static) ->
                                        eta
                                          (Foundation.StaticR a1)
                                            `cast`
                                          (Sym (Foundation.D:R:RouteApp0[0])))
                                 } in
                                 Text.Read.Lex.expect2
                                   @ b
                                   (\ (a1 :: Text.Read.Lex.Lexeme) ->
                                    case a1 of wild1 {
                                      DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                      Text.Read.Lex.Ident a2
                                      -> case GHC.Base.eqString
                                                a2
                                                Foundation.$fReadRoute5 of wild3 {
                                           GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                           GHC.Types.True -> lvl122 } })
                             } in
                             let {
                               k :: () -> Text.ParserCombinators.ReadP.P b
                                 {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                    Unfolding: InlineRule (1, True, True)
                                               (\ (w4 :: ()) -> lvl121) -}
                               = \ (w4 :: ()) -> lvl121
                             } in
                             Text.ParserCombinators.ReadP.Look
                               @ b
                               (\ (a :: GHC.Base.String) ->
                                (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                                  `cast`
                                (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                                  @ b
                                  k) }
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10#) of wild2 {
                      GHC.Types.False
                      -> Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                           @ b
                           (Text.ParserCombinators.ReadP.Fail @ b)
                           karg
                      GHC.Types.True
                      -> let {
                           lvl121 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl122 :: Text.ParserCombinators.ReadP.P b
                               = (GHC.Read.$fReadDouble10
                                    @ (Database.Persist.Class.PersistEntity.Key
                                         Foundation.Funcionario)
                                    Foundation.$fReadKey10
                                      `cast`
                                    (Trans
                                         (<Text.ParserCombinators.ReadPrec.Prec>_R
                                          ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                                        <Database.Persist.Class.PersistEntity.Key
                                                           Foundation.Funcionario>_R))
                                         (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                                   <Database.Persist.Class.PersistEntity.Key
                                                      Foundation.Funcionario>_R)))
                                    Foundation.$fReadRoute6)
                                   `cast`
                                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Foundation.FuncionarioId>_R)
                                   @ b
                                   (\ (a1 :: Foundation.FuncionarioId) ->
                                    eta
                                      (Foundation.FuncionarioR a1)
                                        `cast`
                                      (Sym (Foundation.D:R:RouteApp0[0])))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ (a1 :: Text.Read.Lex.Lexeme) ->
                                case a1 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a2
                                  -> case GHC.Base.eqString a2 Foundation.$fReadRoute4 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl122 } })
                         } in
                         let {
                           k :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl121) -}
                           = \ (w4 :: ()) -> lvl121
                         } in
                         Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                           @ b
                           (Text.ParserCombinators.ReadP.Look
                              @ b
                              (\ (a :: GHC.Base.String) ->
                               (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                                 `cast`
                               (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                                 @ b
                                 k))
                           karg } })) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute30 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute32,
                  Foundation.$fReadRoute31
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute31 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListInvR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
e047b73ff83703ca949845d5932e2f90
  $fReadRoute32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListInvR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute33 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute35,
                  Foundation.$fReadRoute34
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute34 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta Foundation.InvR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
03ccc67856667397aa16afba1fe6234a
  $fReadRoute35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InvR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute36 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute38,
                  Foundation.$fReadRoute37
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute37 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LogoutR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
7d7f9e7aa7aa17c939a3e0141fa0b9fd
  $fReadRoute38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LogoutR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute39 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute41,
                  Foundation.$fReadRoute40
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
7f1f709d374759358ddc4d644d16166d
  $fReadRoute4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute40 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListAdminR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
78182faeed3aa3cfee7f367502edf3d4
  $fReadRoute41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListAdminR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute42 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute44,
                  Foundation.$fReadRoute43
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute43 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.AdminR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
0b7cae3592be27d86fe77535fdd74f1f
  $fReadRoute44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AdminR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute45 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute47,
                  Foundation.$fReadRoute46
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute46 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
a4fa8d8be0e5f60a485da78acf2b7064
  $fReadRoute47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LoginR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute48 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute50,
                  Foundation.$fReadRoute49
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute49 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
717831561591b26e06052db2f22e23f7
  $fReadRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR"#) -}
4b989758bd5775808da85091f8ebc002
  $fReadRoute50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HomeR"#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute51 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.$wlist
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
03f0fedf321591240f8268fa114c3d7c
  $fReadRoute6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 11#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute48
                   Foundation.$fReadRoute8) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute45
                   Foundation.$fReadRoute9) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute9 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute42
                   Foundation.$fReadRoute10) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute51) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Yesod.Routes.Class.Route Foundation.App]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Yesod.Routes.Class.Route Foundation.App]>_R))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   ((GHC.Read.$fReadDouble10
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <Yesod.Routes.Class.Route Foundation.App>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Yesod.Routes.Class.Route Foundation.App>_R)
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: [Text.Shakespeare.I18N.Lang])
                   (eta :: Yesod.Form.Types.FormMessage) ->
                 Yesod.Form.I18n.English.englishFormMessage eta) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
fd4ffb5c80827b935007e34a0cc05005
  $fRenderRouteApp1 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "static"#) -}
8dca445dbe5dd78548db104d372a7fba
  $fRenderRouteApp10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cliente"#) -}
32800a4dde5de59c99c7a0f2109e2d08
  $fRenderRouteApp11 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp10
                   Foundation.$fRenderRouteApp7) -}
d2b11d8cca1b74af324aed46c747d9cf
  $fRenderRouteApp12 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp13
                   Foundation.$fRenderRouteApp3) -}
40e35a99951c2c456b72150409e3c900
  $fRenderRouteApp13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "inventario"#) -}
61cdcdd2518d13973a5d3545bde71df2
  $fRenderRouteApp14 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp13
                   Foundation.$fRenderRouteApp7) -}
d326be4123cad809a83302e4b32bee91
  $fRenderRouteApp15 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
9f62eae2452a6551549a880004294b91
  $fRenderRouteApp16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "logout"#) -}
1ee5ac9779fcf1fe4abb2ad6a9127056
  $fRenderRouteApp17 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp20
                   Foundation.$fRenderRouteApp18) -}
b194209281cbcea51bc98dfbbd70f7ec
  $fRenderRouteApp18 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp19
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
b3d1175ecaa7edc48e6152fb664e22dc
  $fRenderRouteApp19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "subordinados"#) -}
f9082cfd0126e3fcff1280d99c2455ed
  $fRenderRouteApp2 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp5
                   Foundation.$fRenderRouteApp3) -}
219a8c84d3cd3396c4fc3b319e7cb5a8
  $fRenderRouteApp20 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "admin"#) -}
3f275a84e6f9300139db1cac16f16cd4
  $fRenderRouteApp21 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp20
                   Foundation.$fRenderRouteApp7) -}
2b910a46883ec8eb64098cf5376ac80a
  $fRenderRouteApp22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "perfil"#) -}
124b7ab7ee62d3c619afe5c6e1d5092d
  $fRenderRouteApp23 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp24
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
423b445a71e5e8a088425b1f326620b4
  $fRenderRouteApp24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "login"#) -}
e8f1bd70777c124014c86eade001257b
  $fRenderRouteApp3 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp4
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
1e3c4e41ac9d1f5b070f10d7002f3a92
  $fRenderRouteApp4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "listar"#) -}
eacee7a8d02823164066a8ea0c712bf0
  $fRenderRouteApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "relatorio"#) -}
c941f196a584d5cecf2d8b3920fe4e61
  $fRenderRouteApp6 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp5
                   Foundation.$fRenderRouteApp7) -}
3005b7a87abf0edacde41d969d36e16a
  $fRenderRouteApp7 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp8
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
75fee7066d59cec50df215eabcec1d01
  $fRenderRouteApp8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cadastro"#) -}
b05f7cb3edd016face4332dc451ccd65
  $fRenderRouteApp9 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp10
                   Foundation.$fRenderRouteApp3) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR
                   -> (GHC.Types.[] @ Data.Text.Internal.Text,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LoginR
                   -> (Foundation.$fRenderRouteApp23,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FuncionarioR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp22
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Foundation.D:R:KeyFuncionario0[0])
                                    (Trans
                                         (Foundation.N:R:KeyFuncionario[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.AdminR
                   -> (Foundation.$fRenderRouteApp21,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListAdminR
                   -> (Foundation.$fRenderRouteApp17,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LogoutR
                   -> (Foundation.$fRenderRouteApp15,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.InvR
                   -> (Foundation.$fRenderRouteApp14,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListInvR
                   -> (Foundation.$fRenderRouteApp12,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ClienteR
                   -> (Foundation.$fRenderRouteApp11,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListClienteR
                   -> (Foundation.$fRenderRouteApp9,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.RelatorioR
                   -> (Foundation.$fRenderRouteApp6,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListRelatorioR
                   -> (Foundation.$fRenderRouteApp2,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.StaticR sub
                   -> case sub
                             `cast`
                           (Yesod.Static.D:R:RouteStatic0[0]) of wild1 { Yesod.Static.StaticRoute x2 y ->
                      (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp1
                         x2,
                       y) } }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
ead2343c37c85832aad01cc74085f826
  $fRouteAttrsApp1 :: Data.Set.Base.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds of tpl { DEFAULT -> Foundation.$fRouteAttrsApp1 }) -}
87466f3afbd032cb4624b798a08ab607
  $fRouteAttrsApp_$s$wgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U> -}
8a705713315f0a352a034f59ef5841b7
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Base.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww7 ww6 ww8 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww7 ww6 ww8 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
3dd8f8575e5eb770cd91e20a7697daf2
  $fRouteAttrsApp_$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U> -}
cbacfe22e0662853dca97a7e15906e78
  $fShowKey ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fShowKey_$cshowsPrec
                  Foundation.$fShowKey_$cshow
                  Foundation.$fShowKey_$cshowList -}
d819cf7b6367ff8d28cefcd140b736a1
  $fShowKey0 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fShowKey0_$cshowsPrec
                  Foundation.$fShowKey0_$cshow
                  Foundation.$fShowKey0_$cshowList -}
d819cf7b6367ff8d28cefcd140b736a1
  $fShowKey0_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Funcionario) ->
                 Foundation.$fShowKey0_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fShowKey0_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Funcionario]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                   Foundation.$fShowKey0_$sshows) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fShowKey0_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Funcionario)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec1 ww1 w1 w2 }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fShowKey0_$sshows ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: InlineRule (0, True, False)
                (Foundation.$fShowKey0_$cshowsPrec GHC.Show.shows22) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fShowKey1 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fShowKey1_$cshowsPrec
                  Foundation.$fShowKey1_$cshow
                  Foundation.$fShowKey1_$cshowList -}
8d93e28df47555a8c577ab7db651e5bd
  $fShowKey10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "InventarioKey {"#) -}
daf6c9581e66e285f57774d661376dbf
  $fShowKey11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unRelatorioKey = "#) -}
99277cc56d5ce00e86166965c7fc58eb
  $fShowKey12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RelatorioKey {"#) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fShowKey1_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Cliente) ->
                 Foundation.$fShowKey1_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fShowKey1_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Cliente]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   Foundation.$fShowKey1_$sshows) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fShowKey1_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec ww1 w1 w2 }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fShowKey1_$sshows ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: InlineRule (0, True, False)
                (Foundation.$fShowKey1_$cshowsPrec GHC.Show.shows22) -}
4ab9eee06efaae906f8b44e3731bce42
  $fShowKey2 ::
    GHC.Show.Show
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fShowKey2_$cshowsPrec
                  Foundation.$fShowKey2_$cshow
                  Foundation.$fShowKey2_$cshowList -}
4ab9eee06efaae906f8b44e3731bce42
  $fShowKey2_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Inventario) ->
                 Foundation.$fShowKey2_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4ab9eee06efaae906f8b44e3731bce42
  $fShowKey2_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Inventario]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   Foundation.$fShowKey2_$sshows) -}
4ab9eee06efaae906f8b44e3731bce42
  $fShowKey2_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Inventario)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec2 ww1 w1 w2 }) -}
4ab9eee06efaae906f8b44e3731bce42
  $fShowKey2_$sshows ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: InlineRule (0, True, False)
                (Foundation.$fShowKey2_$cshowsPrec GHC.Show.shows22) -}
cccb37c944774d6613801c0aa113ff85
  $fShowKey4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
b95ffe35fe68b5ce046f7cde3d90e313
  $fShowKey5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unClienteKey = "#) -}
74c36bad316d32c0664d979589b05b05
  $fShowKey6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ClienteKey {"#) -}
17bc0f52f1d4734ae2bbfeb950346601
  $fShowKey7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "unFuncionarioKey = "#) -}
6f077c4f9637c59d2a856e30fab6ba5a
  $fShowKey8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioKey {"#) -}
0a777702909488c08b3853565408e560
  $fShowKey9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unInventarioKey = "#) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowKey_$cshow ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Relatorio) ->
                 Foundation.$fShowKey_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowKey_$cshowList ::
    [Database.Persist.Class.PersistEntity.Key Foundation.Relatorio]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                   Foundation.$fShowKey_$sshows) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowKey_$cshowsPrec ::
    GHC.Types.Int
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><L,1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Relatorio)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Foundation.$w$cshowsPrec3 ww1 w1 w2 }) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowKey_$sshows ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: InlineRule (0, True, False)
                (Foundation.$fShowKey_$cshowsPrec GHC.Show.shows22) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowRelatorio :: GHC.Show.Show Foundation.Relatorio
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Relatorio
                  Foundation.$fShowRelatorio_$cshowsPrec
                  Foundation.$fShowRelatorio_$cshow
                  Foundation.$fShowRelatorio_$cshowList -}
ff72e34619aac96806de3992303c09dd
  $fShowRelatorio1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Relatorio {"#) -}
9f195fed0374028ee6b9df9f0e87f0a3
  $fShowRelatorio2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "relatorioConcluido = "#) -}
42b3fc4d49be8f1c17fc82cb13179f87
  $fShowRelatorio3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "relatorioFuncionarioid = "#) -}
388d1d720869d96f1d12f27c687eb50b
  $fShowRelatorio4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "relatorioItemid = "#) -}
86d95562eb6fdc266e362cdadd9060d4
  $fShowRelatorio5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
eb45c4876586a12dd5eda572eaa9e925
  $fShowRelatorio6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "relatorioClienteid = "#) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowRelatorio_$cshow :: Foundation.Relatorio -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SSSL),1*U(U(U),U(U),U(U),U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Foundation.Relatorio) ->
                 Foundation.$fShowRelatorio_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowRelatorio_$cshowList ::
    [Foundation.Relatorio] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Foundation.Relatorio
                   Foundation.$fShowRelatorio_$sshows) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowRelatorio_$cshowsPrec ::
    GHC.Types.Int -> Foundation.Relatorio -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S(SSSL),1*U(U(U),U(U),U(U),U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Foundation.Relatorio)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Foundation.Relatorio ww3 ww4 ww6 ww7 ->
                 case ww3
                        `cast`
                      (Trans
                           (Foundation.D:R:KeyCliente0[0])
                           (Trans
                                (Foundation.N:R:KeyCliente[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww8 { GHC.Int.I64# ww9 ->
                 case ww4
                        `cast`
                      (Trans
                           (Foundation.D:R:KeyInventario0[0])
                           (Trans
                                (Foundation.N:R:KeyInventario[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww10 { GHC.Int.I64# ww11 ->
                 case ww6
                        `cast`
                      (Trans
                           (Foundation.D:R:KeyFuncionario0[0])
                           (Trans
                                (Foundation.N:R:KeyFuncionario[0])
                                (Trans
                                     (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                     (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of ww12 { GHC.Int.I64# ww13 ->
                 Foundation.$w$cshowsPrec4 ww1 ww9 ww11 ww13 ww7 w2 } } } } }) -}
cbacfe22e0662853dca97a7e15906e78
  $fShowRelatorio_$sshows :: Foundation.Relatorio -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: InlineRule (0, True, False)
                (Foundation.$fShowRelatorio_$cshowsPrec GHC.Show.shows22) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fShowRoute1 ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (Foundation.$fShowRoute_$cshowsPrec
                   Foundation.$fShowRoute2) -}
3e0c11e42653c8afd1fa10eecdb81733
  $fShowRoute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
577362d2c7ed541157645074c04f9895
  $fShowRoute3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR "#) -}
67b47ccec071af2592b30325125a2b32
  $fShowRoute4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioR "#) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Yesod.Routes.Class.Route Foundation.App) ->
                 case x `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.HomeR -> Foundation.$fReadRoute50
                   Foundation.LoginR -> Foundation.$fReadRoute47
                   Foundation.FuncionarioR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute4
                        (Foundation.$w$cshowsPrec1 11# b1 (GHC.Types.[] @ GHC.Types.Char))
                   Foundation.AdminR -> Foundation.$fReadRoute44
                   Foundation.ListAdminR -> Foundation.$fReadRoute41
                   Foundation.LogoutR -> Foundation.$fReadRoute38
                   Foundation.InvR -> Foundation.$fReadRoute35
                   Foundation.ListInvR -> Foundation.$fReadRoute32
                   Foundation.ClienteR -> Foundation.$fReadRoute29
                   Foundation.ListClienteR -> Foundation.$fReadRoute26
                   Foundation.RelatorioR -> Foundation.$fReadRoute23
                   Foundation.ListRelatorioR -> Foundation.$fReadRoute20
                   Foundation.StaticR b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Foundation.$fShowRoute3
                        (case b1
                                `cast`
                              (Yesod.Static.D:R:RouteStatic0[0]) of ww2 { Yesod.Static.StaticRoute ww3 ww4 ->
                         Yesod.Static.$w$cshowsPrec
                           11#
                           ww3
                           ww4
                           (GHC.Types.[] @ GHC.Types.Char) }) }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fShowRoute1) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToBackendKeySqlBackendCliente ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend Foundation.Cliente
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Cliente
                  Foundation.$fPersistEntityCliente
                  Foundation.$fToBackendKeySqlBackendCliente_$cp2ToBackendKey
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.unClienteKey
                  (\ (tpl :: Database.Persist.Class.PersistStore.BackendKey
                               Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   tpl)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Trans
                            (Sym (Foundation.N:R:KeyCliente[0]))
                            (Sym (Foundation.D:R:KeyCliente0[0]))) -}
42ff43f29bf1342a10860a1aab405257
  $fToBackendKeySqlBackendCliente1 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToBackendKeySqlBackendCliente_$cp2ToBackendKey ::
    Database.Persist.Class.PersistEntity.PersistEntityBackend
      Foundation.Cliente
    Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendCliente1
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) (Sym (Foundation.D:R:PersistEntityBackendCliente[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToBackendKeySqlBackendFuncionario ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend
      Foundation.Funcionario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Funcionario
                  Foundation.$fPersistEntityFuncionario
                  Foundation.$fToBackendKeySqlBackendFuncionario_$cp2ToBackendKey
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.unFuncionarioKey
                  (\ (tpl :: Database.Persist.Class.PersistStore.BackendKey
                               Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   tpl)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Trans
                            (Sym (Foundation.N:R:KeyFuncionario[0]))
                            (Sym (Foundation.D:R:KeyFuncionario0[0]))) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToBackendKeySqlBackendFuncionario_$cp2ToBackendKey ::
    Database.Persist.Class.PersistEntity.PersistEntityBackend
      Foundation.Funcionario
    Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendCliente1
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) (Sym (Foundation.D:R:PersistEntityBackendFuncionario[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToBackendKeySqlBackendInventario ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend
      Foundation.Inventario
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Inventario
                  Foundation.$fPersistEntityInventario
                  Foundation.$fToBackendKeySqlBackendInventario_$cp2ToBackendKey
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.unInventarioKey
                  (\ (tpl :: Database.Persist.Class.PersistStore.BackendKey
                               Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   tpl)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Trans
                            (Sym (Foundation.N:R:KeyInventario[0]))
                            (Sym (Foundation.D:R:KeyInventario0[0]))) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToBackendKeySqlBackendInventario_$cp2ToBackendKey ::
    Database.Persist.Class.PersistEntity.PersistEntityBackend
      Foundation.Inventario
    Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendCliente1
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) (Sym (Foundation.D:R:PersistEntityBackendInventario[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
cbacfe22e0662853dca97a7e15906e78
  $fToBackendKeySqlBackendRelatorio ::
    Database.Persist.Class.PersistStore.ToBackendKey
      Database.Persist.Sql.Types.Internal.SqlBackend Foundation.Relatorio
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                  @ Foundation.Relatorio
                  Foundation.$fPersistEntityRelatorio
                  Foundation.$fToBackendKeySqlBackendRelatorio_$cp2ToBackendKey
                  Database.Persist.Sql.Orphan.PersistStore.$fPersistCoreSqlBackend
                  Foundation.unRelatorioKey
                  (\ (tpl :: Database.Persist.Class.PersistStore.BackendKey
                               Database.Persist.Sql.Types.Internal.SqlBackend) ->
                   tpl)
                    `cast`
                  (<Database.Persist.Class.PersistStore.BackendKey
                      Database.Persist.Sql.Types.Internal.SqlBackend>_R
                   ->_R Trans
                            (Sym (Foundation.N:R:KeyRelatorio[0]))
                            (Sym (Foundation.D:R:KeyRelatorio0[0]))) -}
cbacfe22e0662853dca97a7e15906e78
  $fToBackendKeySqlBackendRelatorio_$cp2ToBackendKey ::
    Database.Persist.Class.PersistEntity.PersistEntityBackend
      Foundation.Relatorio
    Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fToBackendKeySqlBackendCliente1
                  `cast`
                (Sym (Data.Type.Equality.N:~[0]
                          <*>_N) (Sym (Foundation.D:R:PersistEntityBackendRelatorio[0])) <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
cbacfe22e0662853dca97a7e15906e78
  $fToHttpApiDataKey ::
    Web.HttpApiData.Internal.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fToHttpApiDataKey_$ctoQueryParam
                  Foundation.$fToHttpApiDataKey_$ctoHeader
                  Foundation.$fToHttpApiDataKey_$ctoQueryParam -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToHttpApiDataKey0 ::
    Web.HttpApiData.Internal.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fToHttpApiDataKey0_$ctoQueryParam
                  Foundation.$fToHttpApiDataKey0_$ctoHeader
                  Foundation.$fToHttpApiDataKey0_$ctoQueryParam -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToHttpApiDataKey0_$ctoHeader ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoHeader
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Data.ByteString.Internal.ByteString>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToHttpApiDataKey0_$ctoQueryParam ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoUrlPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToHttpApiDataKey1 ::
    Web.HttpApiData.Internal.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fToHttpApiDataKey1_$ctoQueryParam
                  Foundation.$fToHttpApiDataKey1_$ctoHeader
                  Foundation.$fToHttpApiDataKey1_$ctoQueryParam -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToHttpApiDataKey1_$ctoHeader ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoHeader
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Data.ByteString.Internal.ByteString>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToHttpApiDataKey1_$ctoQueryParam ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoUrlPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToHttpApiDataKey2 ::
    Web.HttpApiData.Internal.ToHttpApiData
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fToHttpApiDataKey2_$ctoQueryParam
                  Foundation.$fToHttpApiDataKey2_$ctoHeader
                  Foundation.$fToHttpApiDataKey2_$ctoQueryParam -}
4ab9eee06efaae906f8b44e3731bce42
  $fToHttpApiDataKey2_$ctoHeader ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoHeader
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Data.ByteString.Internal.ByteString>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToHttpApiDataKey2_$ctoQueryParam ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoUrlPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fToHttpApiDataKey_$ctoHeader ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoHeader
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Data.ByteString.Internal.ByteString>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fToHttpApiDataKey_$ctoQueryParam ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Web.HttpApiData.Internal.$fToHttpApiDataInt64_$ctoUrlPiece
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Data.Text.Internal.Text>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fToJSONKey ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio)
                  Foundation.$fToJSONKey_$ctoJSON
                  Foundation.$fToJSONKey_$ctoEncoding -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToJSONKey0 ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
                  Foundation.$fToJSONKey0_$ctoJSON
                  Foundation.$fToJSONKey0_$ctoEncoding -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToJSONKey0_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoEncoding
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Encoding>_R) -}
d819cf7b6367ff8d28cefcd140b736a1
  $fToJSONKey0_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m4,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoJSON
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyFuncionario[0]))
                               (Sym (Foundation.D:R:KeyFuncionario0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Value>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToJSONKey1 ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                  Foundation.$fToJSONKey1_$ctoJSON
                  Foundation.$fToJSONKey1_$ctoEncoding -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToJSONKey1_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoEncoding
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Encoding>_R) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $fToJSONKey1_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m4,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoJSON
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyCliente[0]))
                               (Sym (Foundation.D:R:KeyCliente0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Value>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToJSONKey2 ::
    Data.Aeson.Types.Class.ToJSON
      (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                  Foundation.$fToJSONKey2_$ctoJSON
                  Foundation.$fToJSONKey2_$ctoEncoding -}
4ab9eee06efaae906f8b44e3731bce42
  $fToJSONKey2_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoEncoding
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Encoding>_R) -}
4ab9eee06efaae906f8b44e3731bce42
  $fToJSONKey2_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m4,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoJSON
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyInventario[0]))
                               (Sym (Foundation.D:R:KeyInventario0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Value>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fToJSONKey_$ctoEncoding ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Data.Aeson.Types.Internal.Encoding
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoEncoding
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Encoding>_R) -}
cbacfe22e0662853dca97a7e15906e78
  $fToJSONKey_$ctoJSON ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>m4,
     Unfolding: InlineRule (0, True, True)
                Data.Aeson.Types.Instances.$fToJSONInt64_$ctoJSON
                  `cast`
                (Trans
                     (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                     (Trans
                          (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                          (Trans
                               (Sym (Foundation.N:R:KeyRelatorio[0]))
                               (Sym (Foundation.D:R:KeyRelatorio0[0]))))
                 ->_R <Data.Aeson.Types.Internal.Value>_R) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fYesodApp_$s$dmapproot
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp_$cdefaultLayout
                  Foundation.$fYesodApp_$s$dmurlRenderOverride
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp_$cisAuthorized
                  Foundation.$fYesodApp_$cisWriteRequest
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp_$cjoinPath
                  Foundation.$fYesodApp_$caddStaticContent
                  Foundation.$fYesodApp_$s$dmmaximumContentLength
                  Foundation.$fYesodApp_$cmakeLogger
                  Foundation.$fYesodApp_$cmessageLoggerSource
                  Foundation.$fYesodApp_$s$dmjsLoader
                  Foundation.$fYesodApp_$cmakeSessionBackend
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp_$s$dmshouldLog
                  Foundation.$fYesodApp_$cshouldLogIO
                  Foundation.$fYesodApp_$cyesodMiddleware
                  Foundation.$fYesodApp_$cyesodWithInternalState -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp1 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ res
                   (w :: Yesod.Core.Content.ToTypedContent res)
                   (w1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res)
                   (w2 :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Yesod.Core.Types.HandlerData ww1 ww2 ww3 ww4 ww6 ->
                 Foundation.$w$cyesodMiddleware
                   @ res
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   w3 }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp10 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, True)
                (\ (ds :: Data.Text.Internal.Text)
                   (ds1 :: Data.Text.Internal.Text)
                   (ds2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (eta2 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta3,
                    GHC.Base.Nothing
                      @ (Data.Either.Either
                           Data.Text.Internal.Text
                           (Yesod.Routes.Class.Route Foundation.App,
                            [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)) -}
ff010ca438ff003035fd2af94723c51f
  $fYesodApp11 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1 -}
19a4bf8b08a2af1028cefcf240467683
  $fYesodApp12 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
89da3dae1170e59423030ec865603459
  $fYesodApp13 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1,
     Unfolding: (\ (ds :: (Data.Text.Internal.Text,
                           Data.Text.Internal.Text)) ->
                 (case ds of wild { (,) x y -> Data.Text.Encoding.encodeUtf8 x },
                  case ds of wild { (,) x y ->
                  case y of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                  case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.==# dt3 dt6) of wild3 {
                    GHC.Types.False
                    -> GHC.Base.Just
                         @ Data.ByteString.Internal.ByteString
                         (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                    GHC.Types.True
                    -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                GHC.Prim.Int# #)}
                              dt1
                              (GHC.Prim.int2Word# dt2)
                              dt4
                              (GHC.Prim.int2Word# dt5)
                              (GHC.Prim.int2Word# dt3)
                              GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                       case GHC.Prim.narrow32Int# ds12 of wild5 {
                         DEFAULT
                         -> GHC.Base.Just
                              @ Data.ByteString.Internal.ByteString
                              (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                         0#
                         -> GHC.Base.Nothing
                              @ Data.ByteString.Internal.ByteString } } } } } })) -}
9492943081ccfc2bcb24207e3b2a57ca
  $fYesodApp14 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1,
     Unfolding: (\ (t :: Data.Text.Internal.Text) ->
                 case t of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                 DEFAULT -> GHC.Types.False '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           dt
                                           (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 2#) } } } } }
                       GHC.Types.True -> GHC.Types.True }
                 } in
                 case $wloop_all dt1 of wild1 {
                   GHC.Types.False -> wild
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# 1# dt2) of wild3 {
                        GHC.Types.False
                        -> case Data.Text.$witerN
                                  Foundation.$fYesodApp15
                                  dt
                                  dt1
                                  dt2 of ww4 { DEFAULT ->
                           case GHC.Prim.-# dt2 ww4 of wild5 {
                             DEFAULT -> Data.Text.Internal.Text dt (GHC.Prim.+# dt1 ww4) wild5
                             0# -> Data.Text.Internal.empty } }
                        GHC.Types.True -> Data.Text.Internal.empty } } }) -}
7ae961ea382351a0e99a6dd430871573
  $fYesodApp15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
1f22c69c44a613282fe56935f66034f7
  $fYesodApp16 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x6 :: Data.Text.Internal.Text) ->
                 case x6 of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt2 0#) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp17 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp18 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_ds
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <Network.Wai.Internal.Request>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Network.Wai.Internal.Request>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case ipv1 of wild { Network.Wai.Internal.Request ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                            ds2 })
                           Foundation.$fYesodApp19 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #) }) -}
9547d34d0041bc9f5ef7c812984da24c
  $fYesodApp19 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp26
                   Foundation.$fYesodApp20) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp2 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (a :: Foundation.App)
                   (b :: Control.Monad.Logger.LogSource)
                   (c :: Control.Monad.Logger.LogLevel)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta2, Yesod.Core.Class.Yesod.defaultShouldLog b c #)) -}
eba7c7205d34dc823b244b21881443fd
  $fYesodApp20 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp25
                   Foundation.$fYesodApp21) -}
9c3487cc7b5302fc586e02ef4e3a4614
  $fYesodApp21 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp24
                   Foundation.$fYesodApp22) -}
bbed232b041e4dc3ee31cc991905b184
  $fYesodApp22 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp23
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
e5b27e270512f0050784f644199a84fa
  $fYesodApp23 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "TRACE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
4af51f906e2fcf00ce8eaf658ad17174
  $fYesodApp24 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "OPTIONS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
05d5111407cd5cf9d25002daa75f7d6d
  $fYesodApp25 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "HEAD"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
18d2c160a35e5757552bcd498ef34a91
  $fYesodApp26 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "GET"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
550c2fb3e0e4a1511bbd9a9d7a71bd7b
  $fYesodApp27 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp28 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT -> Foundation.$fYesodApp29 eta eta1
                   Foundation.HomeR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.LoginR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.ListAdminR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.ListInvR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.ListClienteR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.ListRelatorioR
                   -> (# eta1, Yesod.Core.Types.Authorized #) }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp29 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> (# ipv, Yesod.Core.Types.AuthenticationRequired #)
                   GHC.Base.Just x -> (# ipv, Yesod.Core.Types.Authorized #) } }) -}
e21ba9299a2e673cc84836233bde5e93
  $fYesodApp3 :: Yesod.Core.Types.FileUpload
  {- Strictness: m1,
     Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp4) -}
a68073bdacb3456cfc172b085040d54b
  $fYesodApp30 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_ID"#) -}
b86d4de2908c883f1e0503971c1e6e95
  $fYesodApp4 ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Parse.FileInfo ()
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
08b6c132b5e31da7f46647b6d6027f9f
  $fYesodApp5 :: Yesod.Core.Types.FileUpload
  {- Strictness: m2,
     Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ Data.ByteString.Internal.ByteString
                      @ (Network.Wai.Parse.FileInfo ()))
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp6 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmakeSessionBackend w1) -}
2415fb7c39301cd7c44a82045e2dc848
  $fYesodApp7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7200000000000000) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp8 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Yesod.Core.Types.Logger)
                   (w2 :: Language.Haskell.TH.Syntax.Loc)
                   (w3 :: Control.Monad.Logger.LogSource)
                   (w4 :: Control.Monad.Logger.LogLevel)
                   (w5 :: System.Log.FastLogger.LogStr.LogStr)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmessageLoggerSource w1 w2 w3 w4 w5 w6) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp9 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Yesod.Core.Class.Yesod.defaultMakeLogger1 eta) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$caddStaticContent ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])))
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp10
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <GHC.Base.Maybe
                                            (Data.Either.Either
                                               Data.Text.Internal.Text
                                               (Yesod.Routes.Class.Route Foundation.App,
                                                [(Data.Text.Internal.Text,
                                                  Data.Text.Internal.Text)]))>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <GHC.Base.Maybe
                                       (Data.Either.Either
                                          Data.Text.Internal.Text
                                          (Yesod.Routes.Class.Route Foundation.App,
                                           [(Data.Text.Internal.Text,
                                             Data.Text.Internal.Text)]))>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> Foundation.$fYesodApp17) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cdefaultLayout ::
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.TypedContent
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Network.Wai.Internal.RequestBodyLength) ->
                 Foundation.$w$cfileUpload w1) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cisAuthorized ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.AuthResult
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp28
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Yesod.Core.Types.AuthResult>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cisWriteRequest ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$fYesodApp18 eta eta1)
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <GHC.Types.Bool>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cjoinPath ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 4, Strictness: <L,A><L,1*U(U,U,U)><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cmakeLogger ::
    Foundation.App -> GHC.Types.IO Yesod.Core.Types.Logger
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp9
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cmakeSessionBackend ::
    Foundation.App
    -> GHC.Types.IO (GHC.Base.Maybe Yesod.Core.Types.SessionBackend)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp6
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cmessageLoggerSource ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp8
                  `cast`
                (<Foundation.App>_R
                 ->_R <Yesod.Core.Types.Logger>_R
                 ->_R <Language.Haskell.TH.Syntax.Loc>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cshouldLogIO ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp2
                  `cast`
                (<Foundation.App>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (y :: Foundation.App)
                   (route :: Yesod.Routes.Class.Route Foundation.App)
                   (params :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cyesodMiddleware ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp1
                  `cast`
                (forall (res :: <*>_N).
                 <Yesod.Core.Content.ToTypedContent res>_R
                 ->_R <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <res>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <res>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, True)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (eta2 :: Control.Monad.Trans.Resource.InternalState
                            -> GHC.Types.IO a)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (Control.Exception.Base.bracket
                    @ Control.Monad.Trans.Resource.InternalState
                    @ ()
                    @ a
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$screateInternalState
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$scloseInternalState
                    eta2)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta3)
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$s$dmapproot :: Yesod.Core.Types.Approot Foundation.App
  {- HasNoCafRefs,
     Unfolding: InlineRule (-1, True, True)
                (Yesod.Core.Types.ApprootRelative @ Foundation.App) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$s$dmjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$s$dmmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>m2,
     Unfolding: InlineRule (-1, True, False)
                (\ (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe
                             (Yesod.Routes.Class.Route Foundation.App)) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ GHC.Word.Word64
                   @ (GHC.Base.Maybe GHC.Word.Word64)
                   (GHC.Base.Just @ GHC.Word.Word64)
                   (GHC.Word.$fNumWord64_$c*
                      (GHC.Word.$fNumWord64_$c*
                         (GHC.Word.$fBitsWord64_$cfromInteger 2)
                         (GHC.Word.$fBitsWord64_$cfromInteger 1024))
                      (GHC.Word.$fBitsWord64_$cfromInteger 1024))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$s$dmshouldLog ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (eta2 :: Control.Monad.Logger.LogSource)
                   (eta3 :: Control.Monad.Logger.LogLevel) ->
                 Yesod.Core.Class.Yesod.defaultShouldLog eta2 eta3) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_$s$dmurlRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
72ec617d8745dc36bb0c84544839737c
  $fYesodApp_$s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp27)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp27) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_ds ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Network.Wai.Internal.Request
  {- Unfolding: (Yesod.Core.Handler.waiRequest
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodApp_m1 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ Foundation.App)
                   Foundation.$fYesodApp30) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodPersistApp_$cp1YesodPersist
                  Foundation.$fYesodPersistApp_$crunDB -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp1 ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: (\ @ a
                   (f :: Yesod.Persist.Core.YesodDB Foundation.App a)
                   (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodPersistApp3
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                 <GHC.Types.IO>_N <Foundation.App>_N))
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Foundation.App>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 ((Data.Pool.withResource
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                        @ Foundation.App)
                     (case ipv1 of wild { Foundation.App ds ds2 -> ds2 })
                     (Database.Persist.Sql.Run.runSqlConn
                        @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        @ a
                        (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                           @ Foundation.App)
                        Foundation.$fYesodPersistApp2
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        f `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N)_R))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <a>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   ipv }) -}
04fef5e80c6be8a7d287a4c50ade228e
  $fYesodPersistApp2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fToBackendKeySqlBackendCliente1
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp3 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Yesod.Core.Class.Handler.HandlerSite
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Unfolding: (Yesod.Core.Handler.getYesod
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$cp1YesodPersist ::
    GHC.Base.Monad (Yesod.Persist.Core.YesodDB Foundation.App)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                   @ Database.Persist.Sql.Types.Internal.SqlBackend)
                  `cast`
                (GHC.Base.Monad
                   (Control.Monad.Trans.Reader.ReaderT
                      <*>_N
                      (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N)_N)_R -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$crunDB ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp1
                  `cast`
                (forall (a :: <GHC.Types.*>_N).
                 <Yesod.Persist.Core.YesodDB Foundation.App a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <a>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$dApplicative ::
    GHC.Base.Applicative
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT
                   @ Foundation.App) -}
b609058be32fbfa4a8f0b40e751ea046
  $fYesodPersistApp_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
68c3b98b658116056520bd6140303fe5
  $fYesodPersistApp_$s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
2e11a17fef70f1eb27d87b8f40db666e
  $fYesodPersistApp_$s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta :: a)
                   (eta1 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                     = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                         @ GHC.Types.IO
                         @ Foundation.App
                         Foundation.$fYesodPersistApp_$dMonad
                         @ a
                         eta
                   } in
                   (\ (eta1 :: r) ->
                    GHC.Base.const
                      @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                      @ r
                      m1
                      eta1)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <r>_R
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                             <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         v
                         r1))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fFunctorReaderT -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fApplicativeReaderT_$cpure ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ r @ a (eta :: a) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                   = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       eta
                 } in
                 (\ (eta1 :: r) ->
                  GHC.Base.const
                    @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ r
                    m1
                    eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N))) -}
2ed342f0f67930cdb5d0f4a07a370f1a
  $fYesodPersistApp_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <a>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ b
                           eta1
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ b
                       @ a
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT
                             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <b>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ a
                           eta
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       @ b
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <b>_N)) -}
6befdcfc5163cf363f5cee4736929117
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
                     @ site)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
d181b016593c89c7e2b40d5b4499aed6
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT -}
aade2206963b484be64ddcf3be599653
  $fYesodPersistApp_$s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
7af1116b7510a7dc23d5ef547a5adf3e
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta :: GHC.Types.IO α) ->
                 let {
                   eta1 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta1)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
596db0d256a48475b83d9edc475414f7
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
fc17a159cbf9c42f70bd5ab0fdbcada9
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT -}
e6fc86ba41ca530b8297ef75784370d0
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
a9830052d0c42d0eba4a9e711954bfbb
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadHandlerT -}
0d66ae8abde77d1cc97b2d9b0b8688ad
  $fYesodPersistApp_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site) -}
9e2da7ee1b3e4b64a081d722103a731e
  $fYesodPersistApp_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      GHC.Base.$fMonadIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         k
                         r1))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><L,C(C1(C1(C1(U))))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      GHC.Base.$fMonadIO
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         (k a1)
                         r1))) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ r @ a (msg :: GHC.Base.String) (eta :: r) ->
                 Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail
                   @ Foundation.App
                   @ a
                   msg)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $fYesodPersistApp_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeReaderT -}
3456d80b9972166246ecf5f035e0cef8
  $sunsafeInsert_$s$wpoly_go1 ::
    GHC.Prim.State# s
    -> GHC.Prim.Word#
    -> GHC.Prim.Array#
         (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> (# GHC.Prim.State# s,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 9,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Unfolding: (\ @ v
                   @ s
                   (sc :: GHC.Prim.State# s)[OneShot]
                   (sc1 :: GHC.Prim.Word#)
                   (sc2 :: GHC.Prim.Array#
                             (Data.HashMap.Base.HashMap Data.Text.Internal.Text v))
                   (sc3 :: GHC.Prim.Int#)
                   (sc4 :: v)
                   (sc5 :: GHC.Prim.Int#)
                   (sc6 :: GHC.Prim.Int#)
                   (sc7 :: GHC.Prim.ByteArray#)
                   (sc8 :: GHC.Prim.Word#) ->
                 let {
                   m :: GHC.Prim.Word#
                   = GHC.Prim.uncheckedShiftL#
                       1##
                       (GHC.Prim.word2Int#
                          (GHC.Prim.and# (GHC.Prim.uncheckedShiftRL# sc8 sc3) 15##))
                 } in
                 case GHC.Prim.and# sc1 m of wild {
                   DEFAULT
                   -> let {
                        i# :: GHC.Prim.Int#
                        = GHC.Prim.word2Int#
                            (GHC.Prim.popCnt# (GHC.Prim.and# sc1 (GHC.Prim.minusWord# m 1##)))
                      } in
                      case GHC.Prim.indexArray#
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             sc2
                             i# of ds3 { Unit# ipv2 ->
                      case Foundation.$wpoly_go1
                             @ s
                             @ v
                             sc8
                             sc7
                             sc6
                             sc5
                             sc4
                             (GHC.Prim.+# sc3 4#)
                             ipv2
                             sc of ds5 { (#,#) ipv5 ipv6 ->
                      case GHC.Prim.unsafeThawArray#
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             @ s
                             sc2
                             ipv5 of ds6 { (#,#) ipv7 ipv8 ->
                      case GHC.Prim.writeArray#
                             @ s
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             ipv8
                             i#
                             ipv6
                             ipv7 of s' { DEFAULT ->
                      case GHC.Prim.unsafeFreezeArray#
                             @ s
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             ipv8
                             s' of ds7 { (#,#) ipv9 ipv10 ->
                      (# ipv9,
                         Data.HashMap.Base.BitmapIndexed
                           @ Data.Text.Internal.Text
                           @ v
                           sc1
                           sc2 #) } } } } }
                   0##
                   -> let {
                        ds :: GHC.Prim.Int#
                        = GHC.Prim.sizeofArray#
                            @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                            sc2
                      } in
                      case GHC.Prim.newArray#
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             @ s
                             (GHC.Prim.+# ds 1#)
                             (Data.HashMap.Array.undefinedElem
                                @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v))
                             sc of ds1 { (#,#) ipv ipv1 ->
                      let {
                        idx :: GHC.Prim.Int#
                        = GHC.Prim.word2Int#
                            (GHC.Prim.popCnt# (GHC.Prim.and# sc1 (GHC.Prim.minusWord# m 1##)))
                      } in
                      case GHC.Prim.copyArray#
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             @ s
                             sc2
                             0#
                             ipv1
                             0#
                             idx
                             ipv of s2 { DEFAULT ->
                      case GHC.Prim.writeArray#
                             @ s
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             ipv1
                             idx
                             (Data.HashMap.Base.Leaf
                                @ Data.Text.Internal.Text
                                @ v
                                sc8
                                (Data.Text.Internal.Text sc7 sc6 sc5)
                                sc4)
                             s2 of s' { DEFAULT ->
                      case GHC.Prim.copyArray#
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             @ s
                             sc2
                             idx
                             ipv1
                             (GHC.Prim.+# idx 1#)
                             (GHC.Prim.-# ds idx)
                             s' of s1 { DEFAULT ->
                      case GHC.Prim.unsafeFreezeArray#
                             @ s
                             @ (Data.HashMap.Base.HashMap Data.Text.Internal.Text v)
                             ipv1
                             s1 of ds3 { (#,#) ipv3 ipv4 ->
                      case GHC.Prim.or# sc1 m of wild1 {
                        DEFAULT
                        -> (# ipv3,
                              Data.HashMap.Base.BitmapIndexed
                                @ Data.Text.Internal.Text
                                @ v
                                wild1
                                ipv4 #)
                        65535##
                        -> (# ipv3,
                              Data.HashMap.Base.Full
                                @ Data.Text.Internal.Text
                                @ v
                                ipv4 #) } } } } } } }) -}
87cbe59be0895877438c9a042f77e66a
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8732847083269205084##
                   14839809944255913678##
                   Foundation.$trModule
                   Foundation.$tc'App1) -}
05892f7b382fe128d93b1629a4ae4119
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
985661533e226a15f8f0d1f50e01cc6f
  $tc'Cliente :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14579431805029010968##
                   17758513259173816190##
                   Foundation.$trModule
                   Foundation.$tc'Cliente1) -}
67f8fcdd5e9f34dc4d6f9183f53602e0
  $tc'Cliente1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Cliente"#) -}
e0c41f2975f9f35b2bd0bc13186cdf8b
  $tc'Funcionario :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11423433076815309307##
                   9734436083652291446##
                   Foundation.$trModule
                   Foundation.$tc'Funcionario1) -}
b567ea2bfb1a22478e6dbd5b5cbd3e05
  $tc'Funcionario1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Funcionario"#) -}
0e6cde614ccd978738088ace00c318d3
  $tc'Inventario :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   795393289652966128##
                   6624333423677847126##
                   Foundation.$trModule
                   Foundation.$tc'Inventario1) -}
0b1cff205b5e2631a4b5ca7ab541d872
  $tc'Inventario1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Inventario"#) -}
3347de01070f8e98af3465771d282be7
  $tc'Relatorio :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14841307222587446640##
                   14723789000355751569##
                   Foundation.$trModule
                   Foundation.$tc'Relatorio1) -}
fd996ec1ca3eda9fd6658b4f0fef2645
  $tc'Relatorio1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Relatorio"#) -}
8646061f8d5c50e7162a8d2a4fc52297
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7249657762845076606##
                   14071804172124460660##
                   Foundation.$trModule
                   Foundation.$tcApp1) -}
b817ca0aa613b8a3328c5c4f5e55bb58
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
d9f40a9aca0999fc06f83b691f6f30c4
  $tcCliente :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8234064691841056390##
                   2556864354876150328##
                   Foundation.$trModule
                   Foundation.$tcCliente1) -}
0203a263078e65588c44250261efec26
  $tcCliente1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Cliente"#) -}
3780929d93f2460dcd09503bd3b27079
  $tcFuncionario :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2219361351254086941##
                   11131610266565070702##
                   Foundation.$trModule
                   Foundation.$tcFuncionario1) -}
586046966b6375bc7d40ae563e660534
  $tcFuncionario1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Funcionario"#) -}
ebb9bafdd6a14fdc04b8720d2ac55def
  $tcInventario :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3944037658448905558##
                   16318030527023426536##
                   Foundation.$trModule
                   Foundation.$tcInventario1) -}
e602ae6fc286724d0ab5022497f90fdb
  $tcInventario1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Inventario"#) -}
4564b6dae394de3918cdd42acf4362d3
  $tcRelatorio :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13714600758441827645##
                   16643889804247082848##
                   Foundation.$trModule
                   Foundation.$tcRelatorio1) -}
9a2e6260382f2a8617a039b146b1cede
  $tcRelatorio1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Relatorio"#) -}
6c7180ec289cb09a61e7ffaa0b7871f6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule2
                   Foundation.$trModule1) -}
6375f5de2807fcaddd3bf26ef8c508ed
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foundation"#) -}
d993a77c640d446124e488f3d83acb1e
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4e2dc8f4bcdebbfacbf01fe44e8e6daf
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp16
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp14
                           w) }) -}
bc6adc320ba6c9c8d57a3b39cfeb3131
  $w$cfileUpload ::
    Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Network.Wai.Internal.RequestBodyLength) ->
                 case w of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp5
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leWord# x 50000##) of wild2 {
                        GHC.Types.False -> Foundation.$fYesodApp5
                        GHC.Types.True -> Foundation.$fYesodApp3 } } }) -}
2504f4dd6c5a2288fdf9748ae8bf59c7
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 let {
                   ds :: [GHC.Types.Char]
                   = case w of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                     let {
                       end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                     } in
                     letrec {
                       $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                         {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                       = \ (ww :: GHC.Prim.Int#) ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww end) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.geWord# r# 55296##) of wild2 {
                                GHC.Types.False
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                     ($wunfold (GHC.Prim.+# ww 1#))
                                GHC.Types.True
                                -> case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.leWord# r# 56319##) of wild3 {
                                     GHC.Types.False
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                          ($wunfold (GHC.Prim.+# ww 1#))
                                     GHC.Types.True
                                     -> case GHC.Prim.indexWord16Array#
                                               dt
                                               (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                        GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C#
                                             (GHC.Prim.chr#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.uncheckedIShiftL#
                                                         (GHC.Prim.-#
                                                            (GHC.Prim.word2Int# r#)
                                                            55296#)
                                                         10#)
                                                      (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                                   65536#)))
                                          ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                           GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                     } in
                     $wunfold dt1 }
                 } in
                 let {
                   ds1 :: Data.ByteString.Builder.Internal.Builder
                   = case GHC.Base.map
                            @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                            @ (Data.ByteString.Internal.ByteString,
                               GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                            Foundation.$fYesodApp13
                            w2 of wild {
                       []
                       -> case w1 of wild1 {
                            []
                            -> Network.HTTP.Types.URI.encodePathSegments
                                 Foundation.$fYesodApp12
                            : ds2 ds3
                            -> Network.HTTP.Types.URI.encodePathSegments
                                 (GHC.Base.map
                                    @ Data.Text.Internal.Text
                                    @ Data.Text.Internal.Text
                                    Foundation.$fYesodApp11
                                    wild1) }
                       : ipv ipv1
                       -> let {
                            ds2 :: Data.ByteString.Builder.Internal.Builder
                            = case w1 of wild1 {
                                []
                                -> Network.HTTP.Types.URI.encodePathSegments
                                     Foundation.$fYesodApp12
                                : ds3 ds4
                                -> Network.HTTP.Types.URI.encodePathSegments
                                     (GHC.Base.map
                                        @ Data.Text.Internal.Text
                                        @ Data.Text.Internal.Text
                                        Foundation.$fYesodApp11
                                        wild1) }
                          } in
                          let {
                            ds3 :: Data.ByteString.Builder.Internal.Builder
                            = case ipv of ww { (,) ww1 ww2 ->
                              Network.HTTP.Types.URI.$wgo
                                Network.HTTP.Types.URI.encodePath1
                                  `cast`
                                (Sym (Data.ByteString.Builder.Internal.N:Builder[0]))
                                ww1
                                ww2 }
                          } in
                          let {
                            ds4 :: Data.ByteString.Builder.Internal.Builder
                            = Network.HTTP.Types.URI.encodePath_go ipv1
                          } in
                          (\ @ r (eta :: Data.ByteString.Builder.Internal.BuildStep r) ->
                           ds2 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                             @ r
                             (ds3 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                                @ r
                                (ds4 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                                   @ r
                                   eta)))
                            `cast`
                          (Sym (Data.ByteString.Builder.Internal.N:Builder[0])) }
                 } in
                 (\ @ r (eta :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = ds1 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                        @ r
                        eta
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case w4 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                  Foundation.$wstep @ r ds w3 ww1 ww2 w5 })
                   `cast`
                 (Trans
                      (forall (r :: <*>_N).
                       <Data.ByteString.Builder.Internal.BuildStep r>_R
                       ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                      (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) -}
2ef9878d43223862c597fd36932d3e2a
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Web.ClientSession.getDefaultKey2
                        Web.ClientSession.defaultKeyFile
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp7
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.defaultClientSessionBackend3
                         ipv1
                         getCachedDate
                         Yesod.Core.Class.Yesod.defaultClientSessionBackend2)
                        `cast`
                      (Trans
                           (<Network.Wai.Internal.Request>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <(Data.Map.Base.Map
                                              Data.Text.Internal.Text
                                              Data.ByteString.Internal.ByteString,
                                            Yesod.Core.Types.SessionMap
                                            -> GHC.Types.IO [Yesod.Core.Types.Header])>_R))
                           (Sym (Yesod.Core.Types.N:SessionBackend[0]))) #) } } }) -}
d315f927165a4b6b0d8fe3291384e991
  $w$cmessageLoggerSource ::
    Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Yesod.Core.Types.Logger)
                   (w1 :: Language.Haskell.TH.Syntax.Loc)
                   (w2 :: Control.Monad.Logger.LogSource)
                   (w3 :: Control.Monad.Logger.LogLevel)
                   (w4 :: System.Log.FastLogger.LogStr.LogStr)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w6 :: GHC.Prim.Void#)[OneShot] ->
                     case Yesod.Core.Class.Yesod.defaultMessageLoggerSource2
                            (Yesod.Core.Types.loggerDate w)
                            w1
                            w2
                            w3
                            w4
                            w5 of ds2 { (#,#) ipv2 ipv3 ->
                     Yesod.Core.Types.loggerPutStr1 w ipv3 ipv2 }
                 } in
                 case w3 of wild {
                   Control.Monad.Logger.LevelDebug -> (# w5, GHC.Tuple.() #)
                   Control.Monad.Logger.LevelInfo -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelWarn -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelError -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelOther a1 -> $j GHC.Prim.void# }) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $w$creadPrec ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
d819cf7b6367ff8d28cefcd140b736a1
  $w$creadPrec1 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
4ab9eee06efaae906f8b44e3731bce42
  $w$creadPrec2 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Inventario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
cbacfe22e0662853dca97a7e15906e78
  $w$creadPrec3 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,C(U)>, Inline: [0] -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Foundation.$fShowKey6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Foundation.$fShowKey5
                          (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                             0#
                             w `cast`
                             (Trans
                                  (Foundation.D:R:KeyCliente0[0]) (Foundation.N:R:KeyCliente[0]))
                             (GHC.Base.++ @ GHC.Types.Char Foundation.$fShowKey4 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)) }) -}
d819cf7b6367ff8d28cefcd140b736a1
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Funcionario)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Foundation.$fShowKey8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Foundation.$fShowKey7
                          (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                             0#
                             w `cast`
                             (Trans
                                  (Foundation.D:R:KeyFuncionario0[0])
                                  (Foundation.N:R:KeyFuncionario[0]))
                             (GHC.Base.++ @ GHC.Types.Char Foundation.$fShowKey4 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)) }) -}
4ab9eee06efaae906f8b44e3731bce42
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Inventario)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Foundation.$fShowKey10
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Foundation.$fShowKey9
                          (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                             0#
                             w `cast`
                             (Trans
                                  (Foundation.D:R:KeyInventario0[0])
                                  (Foundation.N:R:KeyInventario[0]))
                             (GHC.Base.++ @ GHC.Types.Char Foundation.$fShowKey4 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)) }) -}
cbacfe22e0662853dca97a7e15906e78
  $w$cshowsPrec3 ::
    GHC.Prim.Int#
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Database.Persist.Class.PersistEntity.Key
                           Foundation.Relatorio)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Foundation.$fShowKey12
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Foundation.$fShowKey11
                          (Database.Persist.Sql.Orphan.PersistStore.$w$cshowsPrec
                             0#
                             w `cast`
                             (Trans
                                  (Foundation.D:R:KeyRelatorio0[0])
                                  (Foundation.N:R:KeyRelatorio[0]))
                             (GHC.Base.++ @ GHC.Types.Char Foundation.$fShowKey4 x)))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w1)) }) -}
56f32a8b58dc1a09afb898625a99f22c
  $w$cshowsPrec4 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 6, Strictness: <S,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Foundation.$fShowRelatorio6
                       (Foundation.$w$cshowsPrec
                          0#
                          (GHC.Int.I64# ww1)
                            `cast`
                          (Trans
                               (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                               (Trans
                                    (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                    (Trans
                                         (Sym (Foundation.N:R:KeyCliente[0]))
                                         (Sym (Foundation.D:R:KeyCliente0[0])))))
                          (GHC.Base.++
                             @ GHC.Types.Char
                             Foundation.$fShowRelatorio5
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRelatorio4
                                (Foundation.$w$cshowsPrec2
                                   0#
                                   (GHC.Int.I64# ww2)
                                     `cast`
                                   (Trans
                                        (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                                        (Trans
                                             (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                             (Trans
                                                  (Sym (Foundation.N:R:KeyInventario[0]))
                                                  (Sym (Foundation.D:R:KeyInventario0[0])))))
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Foundation.$fShowRelatorio5
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Foundation.$fShowRelatorio3
                                         (Foundation.$w$cshowsPrec1
                                            0#
                                            (GHC.Int.I64# ww3)
                                              `cast`
                                            (Trans
                                                 (Sym (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))
                                                 (Trans
                                                      (Sym (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0]))
                                                      (Trans
                                                           (Sym (Foundation.N:R:KeyFuncionario[0]))
                                                           (Sym (Foundation.D:R:KeyFuncionario0[0])))))
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               Foundation.$fShowRelatorio5
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Foundation.$fShowRelatorio2
                                                  (case GHC.Show.$wshowSignedInt
                                                          0#
                                                          ww4
                                                          (GHC.Base.++
                                                             @ GHC.Types.Char
                                                             Foundation.$fShowKey4
                                                             x) of ww6 { (#,#) ww7 ww8 ->
                                                   GHC.Types.: @ GHC.Types.Char ww7 ww8 }))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRelatorio1 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Foundation.$fShowRelatorio1
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w))) }) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  $w$ctoPersistValue ::
    Foundation.Cliente
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Cliente) ->
                 (# case w of ww { Foundation.Cliente ww1 ww2 ww3 ww4 ww6 ww7 ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ Data.Text.Internal.Text
                                 Database.Persist.Class.PersistField.$fPersistFieldText0
                                 ww1)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    ww2)
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       ww3)
                                    (GHC.Types.:
                                       @ Database.Persist.Class.PersistField.SomePersistField
                                       (Database.Persist.Class.PersistField.SomePersistField
                                          @ Data.Text.Internal.Text
                                          Database.Persist.Class.PersistField.$fPersistFieldText0
                                          ww4)
                                       (GHC.Types.:
                                          @ Database.Persist.Class.PersistField.SomePersistField
                                          (Database.Persist.Class.PersistField.SomePersistField
                                             @ Data.Text.Internal.Text
                                             Database.Persist.Class.PersistField.$fPersistFieldText0
                                             ww6)
                                          (GHC.Types.:
                                             @ Database.Persist.Class.PersistField.SomePersistField
                                             (Database.Persist.Class.PersistField.SomePersistField
                                                @ Data.Text.Internal.Text
                                                Database.Persist.Class.PersistField.$fPersistFieldText0
                                                ww7)
                                             (GHC.Types.[]
                                                @ Database.Persist.Class.PersistField.SomePersistField))))))) of wild {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldCliente24, y)
                           (case ys of wild1 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldCliente22, y1)
                                   (case ys1 of wild2 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldCliente20, y2)
                                           (case ys2 of wild3 {
                                              []
                                              -> GHC.Types.[]
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                              : y3 ys3
                                              -> GHC.Types.:
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                                   (Foundation.$fPersistFieldCliente18, y3)
                                                   (case ys3 of wild4 {
                                                      []
                                                      -> GHC.Types.[]
                                                           @ (Data.Text.Internal.Text,
                                                              Database.Persist.Types.Base.PersistValue)
                                                      : y4 ys4
                                                      -> GHC.Types.:
                                                           @ (Data.Text.Internal.Text,
                                                              Database.Persist.Types.Base.PersistValue)
                                                           (Foundation.$fPersistFieldCliente16, y4)
                                                           (case ys4 of wild5 {
                                                              []
                                                              -> GHC.Types.[]
                                                                   @ (Data.Text.Internal.Text,
                                                                      Database.Persist.Types.Base.PersistValue)
                                                              : y5 ys5
                                                              -> GHC.Types.:
                                                                   @ (Data.Text.Internal.Text,
                                                                      Database.Persist.Types.Base.PersistValue)
                                                                   (Foundation.$fPersistFieldCliente14,
                                                                    y5)
                                                                   (GHC.Types.[]
                                                                      @ (Data.Text.Internal.Text,
                                                                         Database.Persist.Types.Base.PersistValue)) }) }) }) }) }) } } #)) -}
d819cf7b6367ff8d28cefcd140b736a1
  $w$ctoPersistValue1 ::
    Foundation.Funcionario
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Funcionario) ->
                 (# case w of wild { Foundation.Funcionario x x1 x2 x3 ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ Data.Text.Internal.Text
                                 Database.Persist.Class.PersistField.$fPersistFieldText0
                                 x)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                    Foundation.$fPersistEntityFuncionario_$s$fPersistFieldMaybe
                                    x1)
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ Data.Text.Internal.Text
                                       Database.Persist.Class.PersistField.$fPersistFieldText0
                                       x2)
                                    (GHC.Types.:
                                       @ Database.Persist.Class.PersistField.SomePersistField
                                       (Database.Persist.Class.PersistField.SomePersistField
                                          @ Data.Text.Internal.Text
                                          Database.Persist.Class.PersistField.$fPersistFieldText0
                                          x3)
                                       (GHC.Types.[]
                                          @ Database.Persist.Class.PersistField.SomePersistField))))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldFuncionario14, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldFuncionario12, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldFuncionario10, y2)
                                           (case ys2 of wild4 {
                                              []
                                              -> GHC.Types.[]
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                              : y3 ys3
                                              -> GHC.Types.:
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                                   (Foundation.$fPersistFieldFuncionario8, y3)
                                                   (GHC.Types.[]
                                                      @ (Data.Text.Internal.Text,
                                                         Database.Persist.Types.Base.PersistValue)) }) }) }) } } #)) -}
4ab9eee06efaae906f8b44e3731bce42
  $w$ctoPersistValue2 ::
    Foundation.Inventario
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Inventario) ->
                 (# case w of wild { Foundation.Inventario x x1 dt ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ Data.Text.Internal.Text
                                 Database.Persist.Class.PersistField.$fPersistFieldText0
                                 x)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ Data.Text.Internal.Text
                                    Database.Persist.Class.PersistField.$fPersistFieldText0
                                    x1)
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ GHC.Types.Int
                                       Database.Persist.Class.PersistField.$fPersistFieldInt
                                       (GHC.Types.I# dt))
                                    (GHC.Types.[]
                                       @ Database.Persist.Class.PersistField.SomePersistField)))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldInventario10, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldInventario8, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldInventario6, y2)
                                           (GHC.Types.[]
                                              @ (Data.Text.Internal.Text,
                                                 Database.Persist.Types.Base.PersistValue)) }) }) } } #)) -}
cbacfe22e0662853dca97a7e15906e78
  $w$ctoPersistValue3 ::
    Foundation.Relatorio
    -> (# [(Data.Text.Internal.Text,
            Database.Persist.Types.Base.PersistValue)] #)
  {- Arity: 1, Strictness: <L,1*U(U,U,U,U)>, Inline: [0],
     Unfolding: (\ (w :: Foundation.Relatorio) ->
                 (# case w of wild { Foundation.Relatorio x x1 x2 dt ->
                    case GHC.Base.map
                           @ Database.Persist.Class.PersistField.SomePersistField
                           @ Database.Persist.Types.Base.PersistValue
                           Database.Persist.Class.PersistField.$fPersistFieldSomePersistField_$ctoPersistValue
                           (GHC.Types.:
                              @ Database.Persist.Class.PersistField.SomePersistField
                              (Database.Persist.Class.PersistField.SomePersistField
                                 @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                                 Foundation.$fPersistFieldKey1
                                 x)
                              (GHC.Types.:
                                 @ Database.Persist.Class.PersistField.SomePersistField
                                 (Database.Persist.Class.PersistField.SomePersistField
                                    @ (Database.Persist.Class.PersistEntity.Key
                                         Foundation.Inventario)
                                    Foundation.$fPersistFieldKey2
                                    x1)
                                 (GHC.Types.:
                                    @ Database.Persist.Class.PersistField.SomePersistField
                                    (Database.Persist.Class.PersistField.SomePersistField
                                       @ (Database.Persist.Class.PersistEntity.Key
                                            Foundation.Funcionario)
                                       Foundation.$fPersistFieldKey0
                                       x2)
                                    (GHC.Types.:
                                       @ Database.Persist.Class.PersistField.SomePersistField
                                       (Database.Persist.Class.PersistField.SomePersistField
                                          @ GHC.Types.Int
                                          Database.Persist.Class.PersistField.$fPersistFieldInt
                                          (GHC.Types.I# dt))
                                       (GHC.Types.[]
                                          @ Database.Persist.Class.PersistField.SomePersistField))))) of wild1 {
                      []
                      -> GHC.Types.[]
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                      : y ys
                      -> GHC.Types.:
                           @ (Data.Text.Internal.Text,
                              Database.Persist.Types.Base.PersistValue)
                           (Foundation.$fPersistFieldRelatorio15, y)
                           (case ys of wild2 {
                              []
                              -> GHC.Types.[]
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                              : y1 ys1
                              -> GHC.Types.:
                                   @ (Data.Text.Internal.Text,
                                      Database.Persist.Types.Base.PersistValue)
                                   (Foundation.$fPersistFieldRelatorio13, y1)
                                   (case ys1 of wild3 {
                                      []
                                      -> GHC.Types.[]
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                      : y2 ys2
                                      -> GHC.Types.:
                                           @ (Data.Text.Internal.Text,
                                              Database.Persist.Types.Base.PersistValue)
                                           (Foundation.$fPersistFieldRelatorio11, y2)
                                           (case ys2 of wild4 {
                                              []
                                              -> GHC.Types.[]
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                              : y3 ys3
                                              -> GHC.Types.:
                                                   @ (Data.Text.Internal.Text,
                                                      Database.Persist.Types.Base.PersistValue)
                                                   (Foundation.$fPersistFieldRelatorio9, y3)
                                                   (GHC.Types.[]
                                                      @ (Data.Text.Internal.Text,
                                                         Database.Persist.Types.Base.PersistValue)) }) }) }) } } #)) -}
22165e948dd72cdbc0ca6c8c21f75b62
  $w$cyesodMiddleware ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.YesodRequest
    -> Yesod.Core.Types.RunHandlerEnv Foundation.App
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> (Yesod.Routes.Class.Route Foundation.App
        -> Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 7,
     Strictness: <L,1*C1(C1(U(U,U)))><S,U><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
1ea537c501d0b07bb980c8be8d74a4f1
  $w$s$wupdateOrSnocWithKey ::
    (Data.Text.Internal.Text -> v -> v -> v)
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
    -> GHC.Prim.Array#
         (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><L,U><L,U><L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ v
                   (w :: Data.Text.Internal.Text -> v -> v -> v)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: v)
                   (w2 :: GHC.Prim.Array#
                            (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)) ->
                 letrec {
                   $wgo1 :: GHC.Prim.ByteArray#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> v
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Int#
                            -> GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                     {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
                        Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.ByteArray#)
                       (ww4 :: GHC.Prim.Int#)
                       (ww6 :: GHC.Prim.Int#)
                       (w3 :: v)
                       (ww7 :: GHC.Prim.Array#
                                 (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                       (ww8 :: GHC.Prim.Int#)
                       (ww9 :: GHC.Prim.Int#) ->
                     let {
                       k2 :: Data.Text.Internal.Text = Data.Text.Internal.Text ww3 ww4 ww6
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww8 ww9) of wild {
                       GHC.Types.False
                       -> case GHC.Prim.indexArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ww7
                                 ww8 of ds { Unit# ipv3 ->
                          case ipv3 of wild1 { Data.HashMap.Base.L kx y ->
                          case kx of wild2 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.==# ww6 dt5) of wild3 {
                            GHC.Types.False
                            -> $wgo1 ww3 ww4 ww6 w3 ww7 (GHC.Prim.+# ww8 1#) ww9
                            GHC.Types.True
                            -> case {__pkg_ccall text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.ByteArray#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.Word#
                                                                                                                  -> GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld
                                                                                                                  -> (# GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld,
                                                                                                                        GHC.Prim.Int# #)}
                                      ww3
                                      (GHC.Prim.int2Word# ww4)
                                      dt3
                                      (GHC.Prim.int2Word# dt4)
                                      (GHC.Prim.int2Word# ww6)
                                      GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                               case GHC.Prim.narrow32Int# ds12 of wild5 {
                                 DEFAULT -> $wgo1 ww3 ww4 ww6 w3 ww7 (GHC.Prim.+# ww8 1#) ww9
                                 0#
                                 -> case GHC.Prim.thawArray#
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           @ GHC.Prim.RealWorld
                                           ww7
                                           0#
                                           (GHC.Prim.sizeofArray#
                                              @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                              ww7)
                                           GHC.Prim.realWorld# of ds1 { (#,#) ipv4 ipv5 ->
                                    case GHC.Prim.writeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           ww8
                                           (Data.HashMap.Base.L
                                              @ Data.Text.Internal.Text
                                              @ v
                                              k2
                                              (w k2 w3 y))
                                           ipv4 of s' { DEFAULT ->
                                    case GHC.Prim.unsafeFreezeArray#
                                           @ GHC.Prim.RealWorld
                                           @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                           ipv5
                                           s' of ds2 { (#,#) ipv6 ipv7 ->
                                    ipv7 } } } } } } } } }
                       GHC.Types.True
                       -> case GHC.Prim.newArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 (GHC.Prim.+# ww9 1#)
                                 (Data.HashMap.Array.undefinedElem
                                    @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v))
                                 GHC.Prim.realWorld# of ds { (#,#) ipv3 ipv4 ->
                          case GHC.Prim.copyArray#
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 @ GHC.Prim.RealWorld
                                 ww7
                                 0#
                                 ipv4
                                 0#
                                 ww9
                                 ipv3 of s2 { DEFAULT ->
                          case GHC.Prim.writeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 ww9
                                 (Data.HashMap.Base.L @ Data.Text.Internal.Text @ v k2 w3)
                                 s2 of s' { DEFAULT ->
                          case GHC.Prim.unsafeFreezeArray#
                                 @ GHC.Prim.RealWorld
                                 @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                                 ipv4
                                 s' of ds1 { (#,#) ipv5 ipv6 ->
                          ipv6 } } } } }
                 } in
                 $wgo1
                   ww
                   ww1
                   ww2
                   w1
                   w2
                   0#
                   (GHC.Prim.sizeofArray#
                      @ (Data.HashMap.Base.Leaf Data.Text.Internal.Text v)
                      w2)) -}
506fcc28572af27c8fa5ea9930d6af5f
  $w$sgo10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
28750279d2621e3bd3916815c9276352
  $w$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
3c5bc63a49c4c7c0ea0c165b1585b143
  $w$sunsafeInsert ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
  {- Arity: 5, Strictness: <S,U><S,U><S,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ v
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (w :: v)
                   (w1 :: Data.HashMap.Base.HashMap Data.Text.Internal.Text v) ->
                 case {__pkg_ccall hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G hashable_fnv_hash_offset GHC.Prim.ByteArray#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.Int#
                                                                                                                     -> GHC.Prim.State#
                                                                                                                          GHC.Prim.RealWorld
                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                           GHC.Prim.Int# #)}
                        ww
                        (GHC.Prim.uncheckedIShiftL# ww1 1#)
                        (GHC.Prim.uncheckedIShiftL# ww2 1#)
                        -2578643520546668380#
                        GHC.Prim.realWorld# of wild { (#,#) ds ds1 ->
                 case Foundation.$wpoly_go1
                        @ GHC.Prim.RealWorld
                        @ v
                        (GHC.Prim.int2Word# ds1)
                        ww
                        ww1
                        ww2
                        w
                        0#
                        w1
                        GHC.Prim.realWorld# of ds2 { (#,#) ipv ipv1 ->
                 ipv1 } }) -}
bf46d4eadc4e28da7b313220fc808e75
  $wmigrateAll ::
    (Data.Text.Internal.Text
     -> GHC.Types.IO Database.Persist.Sql.Types.Internal.Statement)
    -> GHC.IORef.IORef
         (Data.Map.Base.Map
            Data.Text.Internal.Text
            Database.Persist.Sql.Types.Internal.Statement)
    -> ([Database.Persist.Types.Base.EntityDef]
        -> (Data.Text.Internal.Text
            -> GHC.Types.IO Database.Persist.Sql.Types.Internal.Statement)
        -> Database.Persist.Types.Base.EntityDef
        -> GHC.Types.IO
             (Data.Either.Either
                [Data.Text.Internal.Text]
                [(GHC.Types.Bool, Data.Text.Internal.Text)]))
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (((), [Data.Text.Internal.Text]),
           [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]) #)
  {- Arity: 4,
     Strictness: <L,C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(U)))))))><L,U(U)><C(C(C(C(S(SS))))),C(C1(C1(C1(U(U,1*U)))))><S,U>,
     Inline: [0] -}
d6ce9a4d2eb817d0245b06680e4bacae
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
27bac783c444b6bbfb2cd23cbf353273
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
c4056a2d085840caa2dcb312e4eb6917
  $wouter10 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
9a62a10a20b5bad41014fb2b1df6c1af
  $wouter11 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
47479d30748ea8e14fd81a592410301c
  $wouter12 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
d92cd0586a6bf2d76ba9e9f905c2f558
  $wouter13 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
24089782c1a95581a7c42215792eaeb4
  $wouter14 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
239a687447736ae6e4621d14c44281a8
  $wouter15 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
a7efab54f4909950b4cb1f84a2b30a3a
  $wouter16 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
18d71793621f6aee9452a0a770078313
  $wouter17 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
b411b8665344911ad9b73bc022ad845c
  $wouter18 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
a1c9839421dfa5131cc1f86f00b4e294
  $wouter19 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
37451d5ae6d8ad3aadfd001d00d2afe0
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
222a1455b3bd68dfde408d70f6906a65
  $wouter20 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
9a3e90a1c07bff30e447285d32d7fba6
  $wouter3 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
b1c10a20a10fe2239827680232b26074
  $wouter4 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
3308661c4aaef4c80f2b0794e40468cc
  $wouter5 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
3bdeb1f4119ce98206ab4cf3f4451e06
  $wouter6 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
f42837569180693a67b35ac99d217d16
  $wouter7 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
71ac61fd664ac149787c4ec1aad3198c
  $wouter8 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
0f21584184a8e2d87306d0631302b81a
  $wouter9 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
3456d80b9972166246ecf5f035e0cef8
  $wpoly_go1 ::
    GHC.Prim.Word#
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> v
    -> GHC.Prim.Int#
    -> Data.HashMap.Base.HashMap Data.Text.Internal.Text v
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          Data.HashMap.Base.HashMap Data.Text.Internal.Text v #)
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><S,1*U><L,U>,
     Inline: [0] -}
04d4b10f636d26dfa43147956e05f52d
  $wstep ::
    [GHC.Types.Char]
    -> (Data.ByteString.Builder.Internal.BufferRange
        -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,U><L,U><S,U>, Inline: [0] -}
22165e948dd72cdbc0ca6c8c21f75b62
  data App
    = App {getStatic :: Yesod.Static.Static,
           connPool :: Database.Persist.Sql.Types.ConnectionPool}
8b0aeeb27239a39ff8baaa7f64a4edce
  data Cliente
    = Cliente {clienteNome :: !Data.Text.Internal.Text,
               clienteCpf :: !Data.Text.Internal.Text,
               clienteEndereco :: !Data.Text.Internal.Text,
               clienteCidade :: !Data.Text.Internal.Text,
               clienteEstado :: !Data.Text.Internal.Text,
               clienteTelefone :: !Data.Text.Internal.Text}
c382bcb9f34703cb95491257ae9f8d12
  type ClienteId =
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
8b0aeeb27239a39ff8baaa7f64a4edce
  axiom D:R:EntityFieldClientetyp0::
      Database.Persist.Class.PersistEntity.EntityField Foundation.Cliente
        = Foundation.R:EntityFieldClientetyp
d819cf7b6367ff8d28cefcd140b736a1
  axiom D:R:EntityFieldFuncionariotyp0::
      Database.Persist.Class.PersistEntity.EntityField
        Foundation.Funcionario
        = Foundation.R:EntityFieldFuncionariotyp
4ab9eee06efaae906f8b44e3731bce42
  axiom D:R:EntityFieldInventariotyp0::
      Database.Persist.Class.PersistEntity.EntityField
        Foundation.Inventario
        = Foundation.R:EntityFieldInventariotyp
cbacfe22e0662853dca97a7e15906e78
  axiom D:R:EntityFieldRelatoriotyp0::
      Database.Persist.Class.PersistEntity.EntityField
        Foundation.Relatorio
        = Foundation.R:EntityFieldRelatoriotyp
8b0aeeb27239a39ff8baaa7f64a4edce
  axiom D:R:KeyCliente0::
      Database.Persist.Class.PersistEntity.Key Foundation.Cliente
        = Foundation.R:KeyCliente
d819cf7b6367ff8d28cefcd140b736a1
  axiom D:R:KeyFuncionario0::
      Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
        = Foundation.R:KeyFuncionario
4ab9eee06efaae906f8b44e3731bce42
  axiom D:R:KeyInventario0::
      Database.Persist.Class.PersistEntity.Key Foundation.Inventario
        = Foundation.R:KeyInventario
cbacfe22e0662853dca97a7e15906e78
  axiom D:R:KeyRelatorio0::
      Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
        = Foundation.R:KeyRelatorio
8b0aeeb27239a39ff8baaa7f64a4edce
  axiom D:R:PersistEntityBackendCliente::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Cliente
        = Database.Persist.Sql.Types.Internal.SqlBackend
d819cf7b6367ff8d28cefcd140b736a1
  axiom D:R:PersistEntityBackendFuncionario::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Funcionario
        = Database.Persist.Sql.Types.Internal.SqlBackend
4ab9eee06efaae906f8b44e3731bce42
  axiom D:R:PersistEntityBackendInventario::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Inventario
        = Database.Persist.Sql.Types.Internal.SqlBackend
cbacfe22e0662853dca97a7e15906e78
  axiom D:R:PersistEntityBackendRelatorio::
      Database.Persist.Class.PersistEntity.PersistEntityBackend
        Foundation.Relatorio
        = Database.Persist.Sql.Types.Internal.SqlBackend
22165e948dd72cdbc0ca6c8c21f75b62
  axiom D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
8b0aeeb27239a39ff8baaa7f64a4edce
  axiom D:R:UniqueCliente0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Cliente
        = Foundation.R:UniqueCliente
d819cf7b6367ff8d28cefcd140b736a1
  axiom D:R:UniqueFuncionario0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Funcionario
        = Foundation.R:UniqueFuncionario
4ab9eee06efaae906f8b44e3731bce42
  axiom D:R:UniqueInventario0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Inventario
        = Foundation.R:UniqueInventario
cbacfe22e0662853dca97a7e15906e78
  axiom D:R:UniqueRelatorio0::
      Database.Persist.Class.PersistEntity.Unique Foundation.Relatorio
        = Foundation.R:UniqueRelatorio
22165e948dd72cdbc0ca6c8c21f75b62
  axiom D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
1e8f3f2771238345ed2c3d23fc201c1d
  type Form a =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         Foundation.Handler
         (Yesod.Form.Types.FormResult a, Foundation.Widget)
d819cf7b6367ff8d28cefcd140b736a1
  data Funcionario
    = Funcionario {funcionarioNome :: !Data.Text.Internal.Text,
                   funcionarioPosicao :: !GHC.Base.Maybe Data.Text.Internal.Text,
                   funcionarioEmail :: !Data.Text.Internal.Text,
                   funcionarioSenha :: !Data.Text.Internal.Text}
c9c89d1ddc19620b8c5c7050a198dea0
  type FuncionarioId =
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
722fada0724a8181c3ba8086364b6e2f
  type Handler =
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO
    :: GHC.Types.* -> *
4ab9eee06efaae906f8b44e3731bce42
  data Inventario
    = Inventario {inventarioNome :: !Data.Text.Internal.Text,
                  inventarioTipo :: !Data.Text.Internal.Text,
                  inventarioDisponibilidade :: {-# UNPACK #-}GHC.Types.Int}
d863074c2cf2fc7b240df43ca66dc3d2
  type InventarioId =
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
8b0aeeb27239a39ff8baaa7f64a4edce
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Cliente typ where
    ClienteId :: typ
                 Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                        Foundation.Cliente =>
                 Database.Persist.Class.PersistEntity.EntityField
                   Foundation.Cliente typ
    ClienteNome :: typ Data.Type.Equality.~ Data.Text.Internal.Text =>
                   Database.Persist.Class.PersistEntity.EntityField
                     Foundation.Cliente typ
    ClienteCpf :: typ Data.Type.Equality.~ Data.Text.Internal.Text =>
                  Database.Persist.Class.PersistEntity.EntityField
                    Foundation.Cliente typ
    ClienteEndereco :: typ
                       Data.Type.Equality.~ Data.Text.Internal.Text =>
                       Database.Persist.Class.PersistEntity.EntityField
                         Foundation.Cliente typ
    ClienteCidade :: typ
                     Data.Type.Equality.~ Data.Text.Internal.Text =>
                     Database.Persist.Class.PersistEntity.EntityField
                       Foundation.Cliente typ
    ClienteEstado :: typ
                     Data.Type.Equality.~ Data.Text.Internal.Text =>
                     Database.Persist.Class.PersistEntity.EntityField
                       Foundation.Cliente typ
    ClienteTelefone :: typ
                       Data.Type.Equality.~ Data.Text.Internal.Text =>
                       Database.Persist.Class.PersistEntity.EntityField
                         Foundation.Cliente typ
    RecFlag: Recursive
d819cf7b6367ff8d28cefcd140b736a1
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Funcionario typ where
    FuncionarioId :: typ
                     Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                            Foundation.Funcionario =>
                     Database.Persist.Class.PersistEntity.EntityField
                       Foundation.Funcionario typ
    FuncionarioNome :: typ
                       Data.Type.Equality.~ Data.Text.Internal.Text =>
                       Database.Persist.Class.PersistEntity.EntityField
                         Foundation.Funcionario typ
    FuncionarioPosicao :: typ
                          Data.Type.Equality.~ GHC.Base.Maybe Data.Text.Internal.Text =>
                          Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Funcionario typ
    FuncionarioEmail :: typ
                        Data.Type.Equality.~ Data.Text.Internal.Text =>
                        Database.Persist.Class.PersistEntity.EntityField
                          Foundation.Funcionario typ
    FuncionarioSenha :: typ
                        Data.Type.Equality.~ Data.Text.Internal.Text =>
                        Database.Persist.Class.PersistEntity.EntityField
                          Foundation.Funcionario typ
    RecFlag: Recursive
4ab9eee06efaae906f8b44e3731bce42
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Inventario typ where
    InventarioId :: typ
                    Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                           Foundation.Inventario =>
                    Database.Persist.Class.PersistEntity.EntityField
                      Foundation.Inventario typ
    InventarioNome :: typ
                      Data.Type.Equality.~ Data.Text.Internal.Text =>
                      Database.Persist.Class.PersistEntity.EntityField
                        Foundation.Inventario typ
    InventarioTipo :: typ
                      Data.Type.Equality.~ Data.Text.Internal.Text =>
                      Database.Persist.Class.PersistEntity.EntityField
                        Foundation.Inventario typ
    InventarioDisponibilidade :: typ
                                 Data.Type.Equality.~ GHC.Types.Int =>
                                 Database.Persist.Class.PersistEntity.EntityField
                                   Foundation.Inventario typ
    RecFlag: Recursive
cbacfe22e0662853dca97a7e15906e78
  data instance Database.Persist.Class.PersistEntity.EntityField
                  Foundation.Relatorio typ where
    RelatorioId :: typ
                   Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                          Foundation.Relatorio =>
                   Database.Persist.Class.PersistEntity.EntityField
                     Foundation.Relatorio typ
    RelatorioClienteid :: typ
                          Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                 Foundation.Cliente =>
                          Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Relatorio typ
    RelatorioItemid :: typ
                       Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                              Foundation.Inventario =>
                       Database.Persist.Class.PersistEntity.EntityField
                         Foundation.Relatorio typ
    RelatorioFuncionarioid :: typ
                              Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                     Foundation.Funcionario =>
                              Database.Persist.Class.PersistEntity.EntityField
                                Foundation.Relatorio typ
    RelatorioConcluido :: typ Data.Type.Equality.~ GHC.Types.Int =>
                          Database.Persist.Class.PersistEntity.EntityField
                            Foundation.Relatorio typ
    RecFlag: Recursive
8b0aeeb27239a39ff8baaa7f64a4edce
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Cliente
    = ClienteKey {unClienteKey :: Database.Persist.Class.PersistStore.BackendKey
                                    Database.Persist.Sql.Types.Internal.SqlBackend}
    RecFlag: Recursive
d819cf7b6367ff8d28cefcd140b736a1
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Funcionario
    = FuncionarioKey {unFuncionarioKey :: Database.Persist.Class.PersistStore.BackendKey
                                            Database.Persist.Sql.Types.Internal.SqlBackend}
    RecFlag: Recursive
4ab9eee06efaae906f8b44e3731bce42
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Inventario
    = InventarioKey {unInventarioKey :: Database.Persist.Class.PersistStore.BackendKey
                                          Database.Persist.Sql.Types.Internal.SqlBackend}
    RecFlag: Recursive
cbacfe22e0662853dca97a7e15906e78
  newtype instance Database.Persist.Class.PersistEntity.Key
                     Foundation.Relatorio
    = RelatorioKey {unRelatorioKey :: Database.Persist.Class.PersistStore.BackendKey
                                        Database.Persist.Sql.Types.Internal.SqlBackend}
    RecFlag: Recursive
22165e948dd72cdbc0ca6c8c21f75b62
  data instance Yesod.Routes.Class.Route Foundation.App
    = HomeR
    | LoginR
    | FuncionarioR Foundation.FuncionarioId
    | AdminR
    | ListAdminR
    | LogoutR
    | InvR
    | ListInvR
    | ClienteR
    | ListClienteR
    | RelatorioR
    | ListRelatorioR
    | StaticR (Yesod.Routes.Class.Route Yesod.Static.Static)
    RecFlag: Recursive
8b0aeeb27239a39ff8baaa7f64a4edce
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Cliente
    RecFlag: Recursive
d819cf7b6367ff8d28cefcd140b736a1
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Funcionario
    = UniqueEmail Data.Text.Internal.Text
    RecFlag: Recursive
4ab9eee06efaae906f8b44e3731bce42
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Inventario
    RecFlag: Recursive
cbacfe22e0662853dca97a7e15906e78
  data instance Database.Persist.Class.PersistEntity.Unique
                  Foundation.Relatorio
    = UniqueRelato (Database.Persist.Class.PersistEntity.Key
                      Foundation.Cliente)
                   (Database.Persist.Class.PersistEntity.Key Foundation.Inventario)
                   (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
    RecFlag: Recursive
cbacfe22e0662853dca97a7e15906e78
  data Relatorio
    = Relatorio {relatorioClienteid :: !Database.Persist.Class.PersistEntity.Key
                                          Foundation.Cliente,
                 relatorioItemid :: !Database.Persist.Class.PersistEntity.Key
                                       Foundation.Inventario,
                 relatorioFuncionarioid :: !Database.Persist.Class.PersistEntity.Key
                                              Foundation.Funcionario,
                 relatorioConcluido :: {-# UNPACK #-}GHC.Types.Int}
7da71b4ee97c32d4a14661bf5de8dbde
  type RelatorioId =
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
4d50c2c06a3c7d7b2d509ee3519e54a6
  type Widget =
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
8f5cf19013da16a205d743460da4bc4d
  clienteCidade :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLL),1*U(A,A,A,U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds4 }) -}
21d115ce0be6dd9163a5ea3625d59f4e
  clienteCpf :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLL),1*U(A,U(U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds2 }) -}
85e3187870cce06ca75c623e5554230f
  clienteEndereco :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLL),1*U(A,A,U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds3 }) -}
861ad59ca41e14062b8f56746d5440f6
  clienteEstado :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSL),1*U(A,A,A,A,U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds5 }) -}
c41b83864909b3a2ceaadaeb6447f724
  clienteNome :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLL),1*U(U(U,U,U),A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds1 }) -}
087228be4a79168a5314f50fc8ae9bf5
  clienteTelefone :: Foundation.Cliente -> Data.Text.Internal.Text
  RecSel Left Foundation.Cliente
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLS),1*U(A,A,A,A,A,U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Cliente) ->
                 case ds of wild { Foundation.Cliente ds1 ds2 ds3 ds4 ds5 ds6 ->
                 ds6 }) -}
14b46c6b4b501dd49d7c5c050e41357e
  connPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LS),1*U(A,1*U(U,U,U,U,U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 -> ds2 }) -}
8aa5c06ff79d1b22117d4642a772674f
  estaAutenticado :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp29
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Yesod.Core.Types.AuthResult>_N))) -}
1e27b7e7915d9942f0776e0ecbcf64cc
  funcionarioEmail ::
    Foundation.Funcionario -> Data.Text.Internal.Text
  RecSel Left Foundation.Funcionario
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Funcionario) ->
                 case ds of wild { Foundation.Funcionario ds1 ds2 ds3 ds4 ->
                 ds3 }) -}
66afeb7712a43a0a82064d5f51bc133d
  funcionarioNome ::
    Foundation.Funcionario -> Data.Text.Internal.Text
  RecSel Left Foundation.Funcionario
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Funcionario) ->
                 case ds of wild { Foundation.Funcionario ds1 ds2 ds3 ds4 ->
                 ds1 }) -}
725c23b5a739c76193ac9e5fb4fbdf14
  funcionarioPosicao ::
    Foundation.Funcionario -> GHC.Base.Maybe Data.Text.Internal.Text
  RecSel Left Foundation.Funcionario
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Funcionario) ->
                 case ds of wild { Foundation.Funcionario ds1 ds2 ds3 ds4 ->
                 ds2 }) -}
c257b16a1551817ff746a4879341f6f6
  funcionarioSenha ::
    Foundation.Funcionario -> Data.Text.Internal.Text
  RecSel Left Foundation.Funcionario
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Funcionario) ->
                 case ds of wild { Foundation.Funcionario ds1 ds2 ds3 ds4 ->
                 ds4 }) -}
7e0347254cec2300decb7ba7a771963c
  getStatic :: Foundation.App -> Yesod.Static.Static
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U(U,U,U,U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 -> ds1 }) -}
cd8e28400f9a7c04ee9063103154e9f7
  inventarioDisponibilidade :: Foundation.Inventario -> GHC.Types.Int
  RecSel Left Foundation.Inventario
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Inventario) ->
                 case ds of wild { Foundation.Inventario ds1 ds2 dt ->
                 GHC.Types.I# dt }) -}
36794489d801a876dc7cc6c1bbb64055
  inventarioNome :: Foundation.Inventario -> Data.Text.Internal.Text
  RecSel Left Foundation.Inventario
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Inventario) ->
                 case ds of wild { Foundation.Inventario ds1 ds2 dt -> ds1 }) -}
4ddcc3483da842b70ce33fd9ecdc1fd2
  inventarioTipo :: Foundation.Inventario -> Data.Text.Internal.Text
  RecSel Left Foundation.Inventario
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Inventario) ->
                 case ds of wild { Foundation.Inventario ds1 ds2 dt -> ds2 }) -}
51121686654caa07d056e7b647376ea9
  migrateAll :: Database.Persist.Sql.Types.Migration
  {- Arity: 2,
     Strictness: <S(LLLLLLC(C(C(C(S(SS)))))LLLLLLLL),1*U(C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(U))))))),A,A,A,U(U),A,C(C1(C1(C1(U(U,1*U))))),A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.migrateAll1
                  `cast`
                (Trans
                     (<Database.Persist.Sql.Types.Internal.SqlBackend>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(((), [Data.Text.Internal.Text]),
                                      [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)])>_R))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                                    <GHC.Types.IO>_R
                                    <(((), [Data.Text.Internal.Text]),
                                      [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)])>_N))
                          (Trans
                               (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                         <[(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]>_N
                                         <Control.Monad.Trans.Reader.ReaderT
                                            Database.Persist.Sql.Types.Internal.SqlBackend
                                            GHC.Types.IO>_R
                                         <((), [Data.Text.Internal.Text])>_N))
                               (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                         <[Data.Text.Internal.Text]>_N
                                         <Control.Monad.Trans.Writer.Lazy.WriterT
                                            Database.Persist.Sql.Types.CautiousMigration
                                            (Control.Monad.Trans.Reader.ReaderT
                                               Database.Persist.Sql.Types.Internal.SqlBackend
                                               GHC.Types.IO)>_R
                                         <()>_N))))) -}
0a7f1115691e5883a5fddcb05f3a21ab
  migrateAll1 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (((), [Data.Text.Internal.Text]),
           [(GHC.Types.Bool, Database.Persist.Sql.Types.Sql)]) #)
  {- Arity: 2,
     Strictness: <S(LLLLLLC(C(C(C(S(SS)))))LLLLLLLL),1*U(C(C1(U(U,U(C(U(U,A)),C(U(U,U)),C(C1(U(U,U))),C(C1(C1(U))))))),A,A,A,U(U),A,C(C1(C1(C1(U(U,1*U))))),A,A,A,A,A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Database.Persist.Sql.Types.Internal.SqlBackend)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Database.Persist.Sql.Types.Internal.SqlBackend ww1 ww2 ww3 ww4 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Foundation.$wmigrateAll ww1 ww6 ww8 w1 }) -}
38566b09edce333ef58cc7b169e738ca
  relatorioClienteid ::
    Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  RecSel Left Foundation.Relatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(U(U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Relatorio) ->
                 case ds of wild { Foundation.Relatorio ds1 ds2 ds3 dt -> ds1 }) -}
140e7722f99c87a98e8e424198ad610b
  relatorioConcluido :: Foundation.Relatorio -> GHC.Types.Int
  RecSel Left Foundation.Relatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Relatorio) ->
                 case ds of wild { Foundation.Relatorio ds1 ds2 ds3 dt ->
                 GHC.Types.I# dt }) -}
ab2fdfa5a8f67a74eca12925351098f6
  relatorioFuncionarioid ::
    Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
  RecSel Left Foundation.Relatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Relatorio) ->
                 case ds of wild { Foundation.Relatorio ds1 ds2 ds3 dt -> ds3 }) -}
084d65374073294d59a6f1594fa5619a
  relatorioItemid ::
    Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
  RecSel Left Foundation.Relatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.Relatorio) ->
                 case ds of wild { Foundation.Relatorio ds1 ds2 ds3 dt -> ds2 }) -}
a5b63ea657ddedf43b8c80e3654e504b
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp88
                   Foundation.resourcesApp1) -}
6896612904fc3ab0d728ad33c833f9f5
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp83
                   Foundation.resourcesApp2) -}
e8573a782ed46c017747bdae196baa0c
  resourcesApp10 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp32
                   Foundation.resourcesApp11) -}
ef25e4c9aa427f0fa7dda80e6f79087a
  resourcesApp11 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp21
                   Foundation.resourcesApp12) -}
c424e5aae8cf517b4406d88d2fa7da7a
  resourcesApp12 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp13
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
83dc65456da2195d3a9fb93a002512a3
  resourcesApp13 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp14) -}
a0ffd739e9eecea316dc7c0c40a29f9d
  resourcesApp14 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute5
                   Foundation.resourcesApp18
                   Foundation.resourcesApp15
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
fa6c995a040ed3c2861529411950d2b7
  resourcesApp15 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp17
                   Foundation.resourcesApp16) -}
fdf15bd806572e762739a53858d5bb9e
  resourcesApp16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "getStatic"#) -}
858f3532646e91327fff5d19e32edeec
  resourcesApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Static"#) -}
e67e1eff4b6fb970731f200edeb16070
  resourcesApp18 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp19
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
8fb575650d023531f99169f697a7be20
  resourcesApp19 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp20) -}
11c11a9d3cb4c37046780a25d78dad9f
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp75
                   Foundation.resourcesApp3) -}
97e2bc838124000b6a13375ab161b5af
  resourcesApp20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "static"#) -}
f4fefed72acf4ad1492bba797f63855a
  resourcesApp21 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp22) -}
582a7df3328191233eb18f4727d3a1de
  resourcesApp22 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute20
                   Foundation.resourcesApp26
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
86a5b63bc0471c6b2c1077aba98f846f
  resourcesApp23 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp24) -}
23d630ece2fcc96d71aed890282e6f76
  resourcesApp24 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp25
                   (GHC.Types.[] @ GHC.Base.String)) -}
77e9f24ac13fbeabc1dcdecb3111ae18
  resourcesApp25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET"#) -}
ed01724549ee3cd2f3c52164bfbb5112
  resourcesApp26 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp30
                   Foundation.resourcesApp27) -}
587451b52440f64c81b63d06d5c119c2
  resourcesApp27 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp28
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
2b96532864804b093c6c1fe9e529237b
  resourcesApp28 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp29) -}
483afee212a5aeccd41c92a36a12f62e
  resourcesApp29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "listar"#) -}
b3d939c3b0d72d60023d8a8a62d59bc4
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp72
                   Foundation.resourcesApp4) -}
81e13da2bd3f782cfbfb21457fc850b7
  resourcesApp30 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp31) -}
6f4c5735caaec16fc5409fd0a0c01d83
  resourcesApp31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "relatorio"#) -}
db6ca4beb357669dca06599def35f8c2
  resourcesApp32 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp33) -}
a950504331944b8cbf5df5afd1548d19
  resourcesApp33 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute23
                   Foundation.resourcesApp38
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
754864eb5e4157355591b5ddefaea013
  resourcesApp34 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp35) -}
b068fc6a72ab2e16c2d886e49230123a
  resourcesApp35 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp25
                   Foundation.resourcesApp36) -}
46b766be23cd94120c05a7f7732e29bf
  resourcesApp36 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp37
                   (GHC.Types.[] @ GHC.Base.String)) -}
f8435a5c7cca583f7c0566816e7c2058
  resourcesApp37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST"#) -}
25073912f26223da210b07682db1ceea
  resourcesApp38 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp30
                   Foundation.resourcesApp39) -}
f9e8059c0287fcb00830cc2acfc873f9
  resourcesApp39 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
6e5a96cb27c17e4c7e6954fc13a870cf
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp64
                   Foundation.resourcesApp5) -}
055e550fa8ac4e303e6a4eb2fb5026b1
  resourcesApp40 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp41) -}
aea73f064a746f9edb2ad0ab55c10de7
  resourcesApp41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cadastro"#) -}
7648b9bc4c33e12f809db9f904c1db74
  resourcesApp42 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp43) -}
d0fc5b20b92b0fe8073b6024fc9a9f9e
  resourcesApp43 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute26
                   Foundation.resourcesApp44
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
3022d98e3cb145de03c934ed1e715930
  resourcesApp44 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp45
                   Foundation.resourcesApp27) -}
51b6ab5650b700be5fa1d74b9d3d63a9
  resourcesApp45 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp46) -}
9fe7be05cb536ce8e068d5fc6d0c54e0
  resourcesApp46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cliente"#) -}
ea3485030f9e5209462c8dacdb6afd08
  resourcesApp47 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp48) -}
5a77d2fa2629adb63cb83d92b04bcdc7
  resourcesApp48 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute29
                   Foundation.resourcesApp49
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
1e4416c0396b38d9a1f9bfdaa98493d9
  resourcesApp49 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp45
                   Foundation.resourcesApp39) -}
515210bd6c0f62496980582da0c04c45
  resourcesApp5 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp58
                   Foundation.resourcesApp6) -}
7440c7d994cd3657a0383808f26bfff2
  resourcesApp50 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp51) -}
258ea27c98f901e73651ccbb70418e59
  resourcesApp51 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute32
                   Foundation.resourcesApp52
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
856eee1a26d4848b7361b7a92a578c10
  resourcesApp52 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp53
                   Foundation.resourcesApp27) -}
2d390fe1c1636f02dbe98aced029a87e
  resourcesApp53 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp54) -}
e6997b216925a8faaa6fd678d880d71d
  resourcesApp54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "inventario"#) -}
6191f4c4b59152439e960816759da814
  resourcesApp55 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp56) -}
30eeb9d8575e3588abf995fd790b965e
  resourcesApp56 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute35
                   Foundation.resourcesApp57
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
ba4bf968e49c3dc63cdc38da6c236317
  resourcesApp57 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp53
                   Foundation.resourcesApp39) -}
f013dd17fdb8537f4564cdb411414940
  resourcesApp58 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp59) -}
464a35936694f67cb2cf8a8eb1167ca6
  resourcesApp59 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute38
                   Foundation.resourcesApp61
                   Foundation.resourcesApp60
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
8c978f74f1c265f927aed08f1aafd48f
  resourcesApp6 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp55
                   Foundation.resourcesApp7) -}
ed7843768b7e2294137fd8a2774f0cd9
  resourcesApp60 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp36) -}
63d48afdc7299375d09f57775eb616eb
  resourcesApp61 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp62
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
6658e22ac04d5384768e0acc2d0d3d54
  resourcesApp62 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp63) -}
558bd8542138ae567ee7cb7c91ff3462
  resourcesApp63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logout"#) -}
04c1518f7009dd58c0ab441bb532734a
  resourcesApp64 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp65) -}
560692633c0feb85c85f31eb5e02aa29
  resourcesApp65 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute41
                   Foundation.resourcesApp66
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
d5c32e69b34860d945be762a6294d95d
  resourcesApp66 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp70
                   Foundation.resourcesApp67) -}
6e8dcb85c1dfd73849b3e3b082370ec1
  resourcesApp67 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp68
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
57497c6aadd2bb940916f4953a428e05
  resourcesApp68 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp69) -}
0b1784442cf9b75eca23ab93fda694d6
  resourcesApp69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "subordinados"#) -}
46c1bbc10b2dadcc8c660598ecc1b4f5
  resourcesApp7 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp50
                   Foundation.resourcesApp8) -}
4e23aa28a2100a8afee86d730225ddd8
  resourcesApp70 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp71) -}
28151831c1b76faf083bd9bdf0f61313
  resourcesApp71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "admin"#) -}
26624869bedbde3ff9bbafd872d31542
  resourcesApp72 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp73) -}
07a3de4737d9b5cab6cd4e56847fcf9c
  resourcesApp73 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute44
                   Foundation.resourcesApp74
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
16c565239995a6ecd6483e79c786eac3
  resourcesApp74 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp70
                   Foundation.resourcesApp39) -}
b9c6065df77fcfc504d9e06f2e266dc2
  resourcesApp75 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp76) -}
b3aa7a4871e9caaf81d5e26d553d2da0
  resourcesApp76 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute4
                   Foundation.resourcesApp77
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
b00aa584d13c4e34902ec8ecbf1b53e3
  resourcesApp77 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp81
                   Foundation.resourcesApp78) -}
43de6fe66a33b1f06d71ae2e4de01408
  resourcesApp78 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp79
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
20e21cd9f2623e8a69191f4eda254bc0
  resourcesApp79 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp80) -}
30a0ce1378dbbddcf78c2e323b61ea81
  resourcesApp8 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp47
                   Foundation.resourcesApp9) -}
d8cb32f585848569e1bcf4708f6ac313
  resourcesApp80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FuncionarioId"#) -}
b492588a2cc6d29e43c1e6eb2a54d7ff
  resourcesApp81 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp82) -}
6ee5eb66baae54dcb6296069f9e93cf9
  resourcesApp82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "perfil"#) -}
d87e625c9e832ed0140bc435ae27933d
  resourcesApp83 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp84) -}
142213c37a8d9771681fe456cb312083
  resourcesApp84 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute47
                   Foundation.resourcesApp85
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
f723c708f30d5278f7488c5ab898e240
  resourcesApp85 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp86
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
60981cbf24a68f70957a03684a7203f9
  resourcesApp86 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp87) -}
d33c55533b041e60e964b0786b841522
  resourcesApp87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "login"#) -}
3c05b9b91588bbe50a8bb5db07795340
  resourcesApp88 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp89) -}
d1e78621805ef9c76f50d43bd82baa19
  resourcesApp89 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute50
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp23
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e94051be8853c602ead8e89fba3e23f6
  resourcesApp9 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp42
                   Foundation.resourcesApp10) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  unClienteKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyCliente
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.unClienteKey1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R
                 ->_R Trans
                          (Foundation.D:R:KeyCliente0[0]) (Foundation.N:R:KeyCliente[0])) -}
8b0aeeb27239a39ff8baaa7f64a4edce
  unClienteKey1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Cliente
    -> Database.Persist.Class.PersistEntity.Key Foundation.Cliente
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Cliente) ->
                 ds) -}
d819cf7b6367ff8d28cefcd140b736a1
  unFuncionarioKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyFuncionario
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.unFuncionarioKey1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key
                    Foundation.Funcionario>_R
                 ->_R Trans
                          (Foundation.D:R:KeyFuncionario0[0])
                          (Foundation.N:R:KeyFuncionario[0])) -}
d819cf7b6367ff8d28cefcd140b736a1
  unFuncionarioKey1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Funcionario
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Funcionario) ->
                 ds) -}
4ab9eee06efaae906f8b44e3731bce42
  unInventarioKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyInventario
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.unInventarioKey1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Inventario>_R
                 ->_R Trans
                          (Foundation.D:R:KeyInventario0[0])
                          (Foundation.N:R:KeyInventario[0])) -}
4ab9eee06efaae906f8b44e3731bce42
  unInventarioKey1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Inventario
    -> Database.Persist.Class.PersistEntity.Key Foundation.Inventario
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Inventario) ->
                 ds) -}
cbacfe22e0662853dca97a7e15906e78
  unRelatorioKey ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistStore.BackendKey
         Database.Persist.Sql.Types.Internal.SqlBackend
  RecSel Left Foundation.R:KeyRelatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Foundation.unRelatorioKey1
                  `cast`
                (<Database.Persist.Class.PersistEntity.Key Foundation.Relatorio>_R
                 ->_R Trans
                          (Foundation.D:R:KeyRelatorio0[0])
                          (Foundation.N:R:KeyRelatorio[0])) -}
cbacfe22e0662853dca97a7e15906e78
  unRelatorioKey1 ::
    Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
    -> Database.Persist.Class.PersistEntity.Key Foundation.Relatorio
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Database.Persist.Class.PersistEntity.Key
                            Foundation.Relatorio) ->
                 ds) -}
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey0
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey1
instance GHC.Classes.Eq [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fEqKey2
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Web.HttpApiData.Internal.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey
instance Web.HttpApiData.Internal.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey0
instance Web.HttpApiData.Internal.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey1
instance Web.HttpApiData.Internal.FromHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromHttpApiDataKey2
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey0
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey1
instance Data.Aeson.Types.Class.FromJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fFromJSONKey2
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey0
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey1
instance GHC.Classes.Ord [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fOrdKey2
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey0
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey1
instance Web.PathPieces.PathPiece [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPathPieceKey2
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Cliente]
  = Foundation.$fPersistEntityCliente
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Funcionario]
  = Foundation.$fPersistEntityFuncionario
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Inventario]
  = Foundation.$fPersistEntityInventario
instance Database.Persist.Class.PersistEntity.PersistEntity [Foundation.Relatorio]
  = Foundation.$fPersistEntityRelatorio
instance Database.Persist.Class.PersistField.PersistField [Foundation.Cliente]
  = Foundation.$fPersistFieldCliente
instance Database.Persist.Class.PersistField.PersistField [Foundation.Funcionario]
  = Foundation.$fPersistFieldFuncionario
instance Database.Persist.Class.PersistField.PersistField [Foundation.Inventario]
  = Foundation.$fPersistFieldInventario
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey0
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey1
instance Database.Persist.Class.PersistField.PersistField [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldKey2
instance Database.Persist.Class.PersistField.PersistField [Foundation.Relatorio]
  = Foundation.$fPersistFieldRelatorio
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Cliente]
  = Foundation.$fPersistFieldSqlCliente
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Funcionario]
  = Foundation.$fPersistFieldSqlFuncionario
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Inventario]
  = Foundation.$fPersistFieldSqlInventario
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey0
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey1
instance Database.Persist.Sql.Class.PersistFieldSql [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fPersistFieldSqlKey2
instance Database.Persist.Sql.Class.PersistFieldSql [Foundation.Relatorio]
  = Foundation.$fPersistFieldSqlRelatorio
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey0
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey1
instance GHC.Read.Read [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fReadKey2
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey0
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey1
instance GHC.Show.Show [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fShowKey2
instance GHC.Show.Show [Foundation.Relatorio]
  = Foundation.$fShowRelatorio
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Cliente]
  = Foundation.$fToBackendKeySqlBackendCliente
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Funcionario]
  = Foundation.$fToBackendKeySqlBackendFuncionario
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Inventario]
  = Foundation.$fToBackendKeySqlBackendInventario
instance Database.Persist.Class.PersistStore.ToBackendKey [Database.Persist.Sql.Types.Internal.SqlBackend,
                                                           Foundation.Relatorio]
  = Foundation.$fToBackendKeySqlBackendRelatorio
instance Web.HttpApiData.Internal.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey
instance Web.HttpApiData.Internal.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey0
instance Web.HttpApiData.Internal.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey1
instance Web.HttpApiData.Internal.ToHttpApiData [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToHttpApiDataKey2
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey0
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey1
instance Data.Aeson.Types.Class.ToJSON [Database.Persist.Class.PersistEntity.Key]
  = Foundation.$fToJSONKey2
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Inventario]
  = Foundation.D:R:EntityFieldInventariotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Cliente]
  = Foundation.D:R:EntityFieldClientetyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Funcionario]
  = Foundation.D:R:EntityFieldFuncionariotyp0
family instance Database.Persist.Class.PersistEntity.EntityField [Foundation.Relatorio]
  = Foundation.D:R:EntityFieldRelatoriotyp0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Inventario]
  = Foundation.D:R:KeyInventario0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Cliente]
  = Foundation.D:R:KeyCliente0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Funcionario]
  = Foundation.D:R:KeyFuncionario0
family instance Database.Persist.Class.PersistEntity.Key [Foundation.Relatorio]
  = Foundation.D:R:KeyRelatorio0
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Inventario]
  = Foundation.D:R:PersistEntityBackendInventario
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Cliente]
  = Foundation.D:R:PersistEntityBackendCliente
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Funcionario]
  = Foundation.D:R:PersistEntityBackendFuncionario
family instance Database.Persist.Class.PersistEntity.PersistEntityBackend [Foundation.Relatorio]
  = Foundation.D:R:PersistEntityBackendRelatorio
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Inventario]
  = Foundation.D:R:UniqueInventario0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Cliente]
  = Foundation.D:R:UniqueCliente0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Funcionario]
  = Foundation.D:R:UniqueFuncionario0
family instance Database.Persist.Class.PersistEntity.Unique [Foundation.Relatorio]
  = Foundation.D:R:UniqueRelatorio0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SC:$wpoly_go10" [0] forall @ v
                            @ s
                            (sc :: GHC.Prim.State# s)
                            (sc1 :: GHC.Prim.Word#)
                            (sc2 :: GHC.Prim.Array#
                                      (Data.HashMap.Base.HashMap Data.Text.Internal.Text v))
                            (sc3 :: GHC.Prim.Int#)
                            (sc4 :: v)
                            (sc5 :: GHC.Prim.Int#)
                            (sc6 :: GHC.Prim.Int#)
                            (sc7 :: GHC.Prim.ByteArray#)
                            (sc8 :: GHC.Prim.Word#)
  Foundation.$wpoly_go1 @ s
                        @ v
                        sc8
                        sc7
                        sc6
                        sc5
                        sc4
                        sc3
                        (Data.HashMap.Base.BitmapIndexed
                           @ Data.Text.Internal.Text
                           @ v
                           sc1
                           sc2)
                        sc
  = Foundation.$sunsafeInsert_$s$wpoly_go1
      @ v
      @ s
      sc
      sc1
      sc2
      sc3
      sc4
      sc5
      sc6
      sc7
      sc8
"SPEC/Foundation $WClienteId @ (Key Cliente)" [ALWAYS] forall (dt :: Database.Persist.Class.PersistEntity.Key
                                                                       Foundation.Cliente
                                                                     Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                                                            Foundation.Cliente)
  Foundation.$WClienteId @ (Database.Persist.Class.PersistEntity.Key
                              Foundation.Cliente)
                         dt
  = Foundation.$fPersistEntityCliente_$s$WClienteId
"SPEC/Foundation $WFuncionarioId @ (Key Funcionario)" [ALWAYS] forall (dt :: Database.Persist.Class.PersistEntity.Key
                                                                               Foundation.Funcionario
                                                                             Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                                                                    Foundation.Funcionario)
  Foundation.$WFuncionarioId @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Funcionario)
                             dt
  = Foundation.$fPersistEntityFuncionario_$s$WFuncionarioId
"SPEC/Foundation $WInventarioId @ (Key Inventario)" [ALWAYS] forall (dt :: Database.Persist.Class.PersistEntity.Key
                                                                             Foundation.Inventario
                                                                           Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                                                                  Foundation.Inventario)
  Foundation.$WInventarioId @ (Database.Persist.Class.PersistEntity.Key
                                 Foundation.Inventario)
                            dt
  = Foundation.$fPersistEntityInventario_$s$WInventarioId
"SPEC/Foundation $WRelatorioId @ (Key Relatorio)" [ALWAYS] forall (dt :: Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Relatorio
                                                                         Data.Type.Equality.~ Database.Persist.Class.PersistEntity.Key
                                                                                                Foundation.Relatorio)
  Foundation.$WRelatorioId @ (Database.Persist.Class.PersistEntity.Key
                                Foundation.Relatorio)
                           dt
  = Foundation.$fPersistEntityRelatorio_$s$WRelatorioId
"SPEC/Foundation $dmapproot @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                 Foundation.App)
  Yesod.Core.Class.Yesod.$dmapproot @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmapproot
"SPEC/Foundation $dmjsLoader @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                  Foundation.App)
  Yesod.Core.Class.Yesod.$dmjsLoader @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmjsLoader
"SPEC/Foundation $dmmaximumContentLength @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                              Foundation.App)
  Yesod.Core.Class.Yesod.$dmmaximumContentLength @ Foundation.App
                                                 $dYesod
  = Foundation.$fYesodApp_$s$dmmaximumContentLength
"SPEC/Foundation $dmshouldLog @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                   Foundation.App)
  Yesod.Core.Class.Yesod.$dmshouldLog @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmshouldLog
"SPEC/Foundation $dmurlRenderOverride @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                           Foundation.App)
  Yesod.Core.Class.Yesod.$dmurlRenderOverride @ Foundation.App
                                              $dYesod
  = Foundation.$fYesodApp_$s$dmurlRenderOverride
"SPEC/Foundation $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonad :: GHC.Base.Monad
                                                                             GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT @ site
"SPEC/Foundation $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
      @ site
"SPEC/Foundation $fApplicativeReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dApplicative :: GHC.Base.Applicative
                                                                                                 (Yesod.Core.Types.HandlerT
                                                                                                    Foundation.App
                                                                                                    GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                   ($dApplicative :: GHC.Base.Applicative
                                                                                                       (Yesod.Core.Types.HandlerT
                                                                                                          Foundation.App
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerT
                                                             Foundation.App GHC.Types.IO)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fApplicativeReaderT_$cp1Applicative @ (HandlerT
                                                          App IO) _" [ALWAYS] forall @ r
                                                                                                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                                                                                                           (Yesod.Core.Types.HandlerT
                                                                                                                                                                              Foundation.App
                                                                                                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ (Yesod.Core.Types.HandlerT
                                                                       Foundation.App GHC.Types.IO)
                                                                  @ r
                                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/Foundation $fApplicativeReaderT_$cpure @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                    ($dApplicative :: GHC.Base.Applicative
                                                                                                        (Yesod.Core.Types.HandlerT
                                                                                                           Foundation.App
                                                                                                           GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cpure @ (Yesod.Core.Types.HandlerT
                                                              Foundation.App GHC.Types.IO)
                                                         @ r
                                                         $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r
"SPEC/Foundation $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site
"SPEC/Foundation $fFunctorReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.App
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO)
                                              @ r
                                              $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$c<$ @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dFunctor :: GHC.Base.Functor
                                                                                              (Yesod.Core.Types.HandlerT
                                                                                                 Foundation.App
                                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                ($dFunctor :: GHC.Base.Functor
                                                                                                (Yesod.Core.Types.HandlerT
                                                                                                   Foundation.App
                                                                                                   GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerT
                                                          Foundation.App GHC.Types.IO)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadBaseControlbHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                          ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT @ GHC.Types.IO
                                               @ GHC.Types.IO
                                               @ site
                                               $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT @ site
"SPEC/Foundation $fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ IO @ IO _" [ALWAYS] forall @ site
                                                                                               ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                                        GHC.Types.IO
                                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ GHC.Types.IO
                                                                    @ GHC.Types.IO
                                                                    @ site
                                                                    $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
      @ site
"SPEC/Foundation $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                     GHC.Types.IO
                                                                                     GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp2MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp2MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp4MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp4MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
      @ site
"SPEC/Foundation $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                 GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ site
"SPEC/Foundation $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT @ site
"SPEC/Foundation $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                ($dMonad :: GHC.Base.Monad
                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site
"SPEC/Foundation $fMonadReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.HandlerT
                                                                                        Foundation.App
                                                                                        GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerT
                                                 Foundation.App GHC.Types.IO)
                                            @ r
                                            $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                            ($dMonad :: GHC.Base.Monad
                                                                                          (Yesod.Core.Types.HandlerT
                                                                                             Foundation.App
                                                                                             GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ (Yesod.Core.Types.HandlerT
                                                      Foundation.App GHC.Types.IO)
                                                 @ r
                                                 $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dMonad :: GHC.Base.Monad
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.App
                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dMonad :: GHC.Base.Monad
                                                                                            (Yesod.Core.Types.HandlerT
                                                                                               Foundation.App
                                                                                               GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation $fMonadReaderT_$cp1Monad @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                 ($dMonad :: GHC.Base.Monad
                                                                                               (Yesod.Core.Types.HandlerT
                                                                                                  Foundation.App
                                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ (Yesod.Core.Types.HandlerT
                                                           Foundation.App GHC.Types.IO)
                                                      @ r
                                                      $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r
"SPEC/Foundation $fPersistFieldMaybe @ Text" [ALWAYS] forall ($dPersistField :: Database.Persist.Class.PersistField.PersistField
                                                                                  Data.Text.Internal.Text)
  Database.Persist.Class.PersistField.$fPersistFieldMaybe @ Data.Text.Internal.Text
                                                          $dPersistField
  = Foundation.$fPersistEntityFuncionario_$s$fPersistFieldMaybe
"SPEC/Foundation fromList @ Text" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Base.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
"SPEC/Foundation fromList @ Text _" [ALWAYS] forall @ a
                                                    ($dOrd :: GHC.Classes.Ord
                                                                Data.Text.Internal.Text)
  Data.Map.Base.fromList @ Data.Text.Internal.Text @ a $dOrd
  = Foundation.$fPersistEntityCliente_$sfromList @ a
"SPEC/Foundation shows @ (Key Cliente)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                     (Database.Persist.Class.PersistEntity.Key
                                                                        Foundation.Cliente))
  GHC.Show.shows @ (Database.Persist.Class.PersistEntity.Key
                      Foundation.Cliente)
                 $dShow
  = Foundation.$fShowKey1_$sshows
"SPEC/Foundation shows @ (Key Funcionario)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                         (Database.Persist.Class.PersistEntity.Key
                                                                            Foundation.Funcionario))
  GHC.Show.shows @ (Database.Persist.Class.PersistEntity.Key
                      Foundation.Funcionario)
                 $dShow
  = Foundation.$fShowKey0_$sshows
"SPEC/Foundation shows @ (Key Inventario)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                        (Database.Persist.Class.PersistEntity.Key
                                                                           Foundation.Inventario))
  GHC.Show.shows @ (Database.Persist.Class.PersistEntity.Key
                      Foundation.Inventario)
                 $dShow
  = Foundation.$fShowKey2_$sshows
"SPEC/Foundation shows @ (Key Relatorio)" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                       (Database.Persist.Class.PersistEntity.Key
                                                                          Foundation.Relatorio))
  GHC.Show.shows @ (Database.Persist.Class.PersistEntity.Key
                      Foundation.Relatorio)
                 $dShow
  = Foundation.$fShowKey_$sshows
"SPEC/Foundation shows @ Relatorio" [ALWAYS] forall ($dShow :: GHC.Show.Show
                                                                 Foundation.Relatorio)
  GHC.Show.shows @ Foundation.Relatorio $dShow
  = Foundation.$fShowRelatorio_$sshows
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

