
==================== FINAL INTERFACE ====================
2016-11-29 01:53:59.154067 UTC

interface main@main:Handler.Cliente 8001
  interface hash: b1bd15fc7852c38ca87579e64f0b8149
  ABI hash: 98ca880164830c89aabbdebb72f53c8b
  export-list hash: f03b757d97a38126f3d7e2db675f8f8a
  orphan hash: 4570706a45e1843f92b14060469221ae
  flag hash: 11e678f4eb0238727b3b58136f2787e5
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handler.Cliente.formCliente
  Handler.Cliente.getClienteR
  Handler.Cliente.getListClienteR
  Handler.Cliente.postClienteR
module dependencies: Foundation
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      aeson-compat-0.3.6@aeson-compat-0.3.6-5wE6V2cyaFcB5no9HXBKW5
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cereal-0.5.4.0@cereal-0.5.4.0-2FJYHGgtE5C3SxaZjt25xS
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      clientsession-0.9.1.2@clientsession-0.9.1.2-IpBcpG3jp1KHy8EW2Zpyr3
                      conduit-1.2.8@conduit-1.2.8-5FcKXI45VDc6lGPbFuJAWM
                      conduit-extra-1.1.15@conduit-extra-1.1.15-53svZ1V22a02WgMiq2YICw
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-COLYQrn2KP0KrG5tq2u9OS
                      crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-GQAZIw8UH93GFERaAFFYYo
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-A7dMarJBg4dHM8dTPvP0ZL
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      css-text-0.1.2.2@css-text-0.1.2.2-2oPStu29BQF6h11Hvse6Bl
                      data-default-0.7.1.1@data-default-0.7.1.1-5uix4eIzBY9IcVb4V2HbW3
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-ESBROgKchbm3QXcQv2e7oG
                      directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF
                      entropy-0.3.7@entropy-0.3.7-54dsRvsNlllHvcIX99CGiD
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.7@fast-logger-2.4.7-E7H6TuZQzia59KuB50vayl
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-FAbjmjQAybhLjdn6FTjXH8 integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q
                      persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD
                      persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK
                      persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW
                      postgresql-libpq-0.9.2.0@postgresql-libpq-0.9.2.0-IWEdPrPraPeE94ud73Ope3
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-3INwbAr3KaOko5GoR6I2w
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      process-1.4.2.0@process-1.4.2.0
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-9vTgJsy3ECMB5KkdzRIRAh
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0
                      silently-1.2.5@silently-1.2.5-Ek776fxSdtm4h8aXqt6CNw
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      skein-1.0.9.4@skein-1.0.9.4-2lnBX1jPJHzHUOltMUlcf7
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-4lLWE8CZnvmDZJW5bKkus1
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-KFZuUgmBRr4GSrTHv7XvSl
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      tagsoup-0.14@tagsoup-0.14-HxE6zinFMUaDOGdOBKKTEg
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-6csRgbgolyoCCOLw42RlBs
                      wai-extra-3.0.19@wai-extra-3.0.19-JgWV2EEhKqI9Cbv1ALadHO
                      wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e
                      warp-3.2.9@warp-3.2.9-1T06si5IpgT9ocLo3cujDp
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-LQRG7XxkG2ZCHdKqzimhvw
                      yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo
                      yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1
                      yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp
                      yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy
                      yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF:Text.Email.Parser
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK:Control.Monad.Logger
                         mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistConfig
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Css
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Handler
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Types
                         yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C:Text.Blaze.Html a616e69638e5c542aa4042a4609214fe
import  -/  blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D:Text.Blaze.Internal 223b48aced8c4f31c68f17d332e96f2f
import  -/  Foundation bdfc389a390ba8340a64910f26b423b5
  exports: 31dbfc5f3fad5442903e5564a49f437a
  Cliente a4850465cb2d794526c07a084de21b64
  Cliente 8b0aeeb27239a39ff8baaa7f64a4edce
  ClienteNome ed7948c919602f4bff45d575db8896d6
  ClienteR 9b41bc362717800c22e3c36e496f3c36
  Form fe0acb1d0515e470de6e3d7bae6261df
  Handler a4ca5fb5ea34b85490f17678c0fc6607
  HomeR 95a1ca3b56d59d1a4f336fddc5d3998f
  clienteCidade 8f5cf19013da16a205d743460da4bc4d
  clienteCpf 21d115ce0be6dd9163a5ea3625d59f4e
  clienteEndereco 85e3187870cce06ca75c623e5554230f
  clienteEstado 861ad59ca41e14062b8f56746d5440f6
  clienteNome c41b83864909b3a2ceaadaeb6447f724
  clienteTelefone 087228be4a79168a5314f50fc8ae9bf5
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistEntity dbb3af8b40ede057aba8c075ea719bcc
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistQuery c2afd8b3d1bd1452e6b77364fb33672c
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistStore 425057bb4452baac78187a91fb6485d4
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore 0f67efe6ed4985f1d278a64d7f69ca44
import  -/  persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql 1b8867174b6955b71b9a450f85dd5d9e
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo:Yesod 60aea8526cb37ebb973e9ce325cb4deb
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Yesod bba8d8da735046bb383f45f087c1645b
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Handler 91ca97147a231a54093ebbcf44176b77
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Widget 6b0aef1518edca4dd696cfd211694629
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Fields 6609e336a601f9246072290aaf0faf40
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Functions e5b39ff68726d0d0d69503c52b11121b
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Types e7c3cd1f2504cbf6aa5d13cc99bfffe3
import  -/  yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy:Yesod.Persist.Core bd24bc5753868a0e0776592694d2328d
19c0d660d2d06db20db2ae9ba9ca2c38
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Cliente.$s$fApplicativeHandlerT_$s$fFunctorHandlerT
                     @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad) -}
7dc1e321ad1f39fb16d9d51a4b669569
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta12 :: a)
                   (eta13 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta14 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta12) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta14)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
f277cbbb4656694256882a67d406b21e
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
c22300aff4139318090c69a2abddc5f3
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fApplicativeHandlerT_$dMonad) -}
93f2d7043d01de8690f3f48fa5963bee
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                   @ Foundation.App) -}
c554be5f87e6264996a5c0ba9f250c26
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handler.Cliente.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail
                     @ site) -}
5fb5425d9419e068f5ef0e75d29aca34
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta12 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta12) -}
ff3b8fabe083e184c5a8d97bc2f1430c
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
                     @ site) -}
dbe4554e8bc8db12fa9db8ea64bbc8e1
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
816c8a79693511e5379ff05edaaa3295
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.$s$fApplicativeHandlerT -}
7622e7bb1593b126a1c670151a8af3c6
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
29d31ef86310f2927602f2358778505a
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT -}
98589fdd7ddbd81daddea24e9c666426
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO ::
    GHC.Types.IO a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta12 :: GHC.Types.IO a) ->
                 let {
                   eta13 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta12
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta13)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <a>_N))) -}
0324fa3e9c957fca909dcc961c1303ea
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fMonadHandlerHandlerT1) -}
06c12017dbbd133097d445c1cf627122
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
8b308d70d196b7bc5e75edd2e55d0df3
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
                     @ site) -}
506f39c16b7bad79bf17a448e288d912
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
9ee41826ad4227000f82a5c304d378b3
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta12 :: GHC.Exception.Exception e)
                   (x2 :: e)
                   (eta13 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta14 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta12 x2) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta14)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
45a4b23587891639d747f3d952e985dd
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Cliente.$s$fMonadHandlerHandlerT1) -}
cd717119b5ee95849f7e8d319e047528
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
86182f5bb96275bdcd762247947fb4e2
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
64f0119e653acbd520815be8af6dd7c6
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
7e87f8f1dc3b79afc397e019fb89767c
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.$s$fMonadBasebHandlerT -}
4dec9590e202a3c5ee635e9e49361420
  $stextField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handler.Cliente.$s$fFunctorAForm1
                      Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
3e1053adc83bb5ab7e121e837340cd25
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Cliente.$trModule2
                   Handler.Cliente.$trModule1) -}
080953c3a24c96331be805357ec44e65
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handler.Cliente"#) -}
b940455f42a7c324e00b1810d76a74b5
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
a4bcdc30388d3298166a8382ccf77563
  formCliente :: Foundation.Form Foundation.Cliente
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.formCliente1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Cliente>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.App>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
de1f79e0cbb3c3fda70af21d426b552a
  formCliente1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Cliente,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Cliente
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   GHC.Types.True
                   Handler.Cliente.formCliente2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Foundation.Cliente>_N))
                   eta105
                   eta106
                   eta107) -}
5c8de53e559fdb8f579eab29a1dbde52
  formCliente10 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
3ec95a800197bcd597ad8fef21891931
  formCliente11 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente12) -}
92d6182c837361f96531954daffa48e8
  formCliente12 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Cliente.formCliente13
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
b537ad1caea560a27e891592cebe2517
  formCliente13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Estado"#) -}
a58833e3d0f29c27a2fcaab5e89f5ba4
  formCliente14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Cliente),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text -> Foundation.Cliente)
                   Handler.Cliente.formCliente20
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Cliente>_N))
                   Handler.Cliente.formCliente15) -}
b4262a87d9e615381e56d7fcae1b6741
  formCliente15 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente16
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c62bcfb6ac3c9a9e7d900352800ac135
  formCliente16 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente17
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
81cd6ed332f5d67ceb28db09bfad4663
  formCliente17 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente18) -}
c5f49f580dfb985e19dfbf5c13bc6073
  formCliente18 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Cliente.formCliente19
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
d594c15c7c658e14a14bedba15f3da88
  formCliente19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cidade "#) -}
37b3a679354cf08f354ccf35429f8212
  formCliente2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Cliente,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   @ Data.Text.Internal.Text
                   @ Foundation.Cliente
                   Handler.Cliente.formCliente8
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Cliente>_N))
                   Handler.Cliente.formCliente3) -}
a5d9d481c2fa985b41164f0f96aa7444
  formCliente20 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Cliente),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Cliente)
                   Handler.Cliente.formCliente26
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Cliente>_N))
                   Handler.Cliente.formCliente21) -}
aa24f5440d81b96c6e0003a7e9702551
  formCliente21 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente22
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c2fc3257961fa9e544079067ca15af7a
  formCliente22 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente23
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
cbee5ef925a27f03789c85dc1e89a52c
  formCliente23 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente24) -}
470b532ccbe8c898eb4f6e54eac5f438
  formCliente24 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Cliente.formCliente25
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
d88013bdfe1522a756a0d6cff3c8851d
  formCliente25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Endereco"#) -}
c29930e49c74076aa3ebab04599af03b
  formCliente26 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Cliente),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Data.Text.Internal.Text
                      -> Foundation.Cliente)
                   Handler.Cliente.formCliente32
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Data.Text.Internal.Text
                              -> Foundation.Cliente>_N))
                   Handler.Cliente.formCliente27) -}
a342ae7bdde2dd6f9c1919e161782795
  formCliente27 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente28
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
16497fe31aaab15b8458ba00132c867b
  formCliente28 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente29
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
ff3cac80cd9675c7e5c907073444238d
  formCliente29 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente30) -}
53c1cd04a2b30a87baaa122d10223c87
  formCliente3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
b847277d043a2465dcc19e8290619953
  formCliente30 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Cliente.formCliente31
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
0e4f6f37cc7009f085237590ebb36487
  formCliente31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CPF "#) -}
edd18a7d759764a8b7dc02fa4a34cab9
  formCliente32 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Data.Text.Internal.Text
             -> Foundation.Cliente),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta12 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta13 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta14 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.App
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handler.Cliente.formCliente_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta12
                       eta13
                       eta14
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x2 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Cliente)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Cliente)
                             errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Data.Text.Internal.Text
                                -> Foundation.Cliente)
                             (Foundation.$WCliente a1) },
                      x2, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text
                                          -> Foundation.Cliente),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.App GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text
                                     -> Foundation.Cliente),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.App GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
666f0e5935ca0bd93b1939cd5c27b0aa
  formCliente33 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente34
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
9b5f3abcdbe7470b58a9ad3e297d2828
  formCliente34 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente35) -}
e6a86f02df1f4ca4b24b2a907c07ce64
  formCliente35 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handler.Cliente.formCliente36 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
579fbe91a5e3700b822c30d5841c86fb
  formCliente36 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handler.Cliente.formCliente37
                   0#
                   ipv }) -}
3e928fc778838c052ef539244b314727
  formCliente37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome "#) -}
a55e079de26f651af80f7b3fc4942a44
  formCliente4 :: Yesod.Form.Types.FieldSettings Foundation.App
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.App
                   Handler.Cliente.formCliente5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.App))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
f00f5cb9f7abd0d41e1532468cee0b7b
  formCliente5 :: Text.Shakespeare.I18N.SomeMessage Foundation.App
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.App
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.App)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Data.Text.Internal.Text>_N))
                   Handler.Cliente.formCliente6) -}
aae2b2e1e0bf3da5ad5027686da1eea6
  formCliente6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Cliente.formCliente7
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
5f66744258c87f8f00ed10f11ee4ba91
  formCliente7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Telefone"#) -}
a6ac30bef632be0dc3c9097a90f75827
  formCliente8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Cliente),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.App)
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Cliente)
                   Handler.Cliente.formCliente14
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Cliente>_N))
                   Handler.Cliente.formCliente9) -}
4807cb784605f812ceaafd3ae5ac9542
  formCliente9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
7a1340df9419705b1836e218a5888ced
  formCliente_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.App
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.App
                      @ Foundation.App
                      @~ <Foundation.App>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.App>_N)) <Foundation.App>_N)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.$stextField
                   Handler.Cliente.formCliente33
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
33daaef4ce7afb47d045ea6f64d82f0b
  getClienteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.getClienteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
ffc8e38e035fb795459a027cff673db8
  getClienteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Cliente.getClienteR27
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodApp_$cdefaultLayout
                     (let {
                        x2 :: GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))) #)
                          {- Arity: 1, Strictness: <S,U>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                         let {
                                           eta12 :: Text.Blaze.Internal.MarkupM ()
                                           = case enctype of wild1 {
                                               Yesod.Form.Types.UrlEncoded
                                               -> Yesod.Form.Types.$fToMarkupEnctype4
                                               Yesod.Form.Types.Multipart
                                               -> Yesod.Form.Types.$fToMarkupEnctype1 }
                                         } in
                                         (# s1,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.App)
                                                (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                                          -> [(Data.Text.Internal.Text,
                                                               Data.Text.Internal.Text)]
                                                          -> Data.Text.Internal.Text) ->
                                                 eta12)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.App>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route Foundation.App)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.App)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route Foundation.App)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.App)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.App
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.App
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.App))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.App>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N
                                                             <Foundation.App>_N)))_R)_R) #)) -}
                        = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          let {
                            eta12 :: Text.Blaze.Internal.MarkupM ()
                            = case enctype of wild1 {
                                Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                                Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                          } in
                          (# s1,
                             (GHC.Tuple.(),
                              (Yesod.Core.Types.GWData
                                 @ (Yesod.Routes.Class.Route Foundation.App)
                                 (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                           -> Data.Text.Internal.Text) ->
                                  eta12)
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:Body[0]
                                           <Yesod.Routes.Class.Route Foundation.App>_R))
                                 (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                   `cast`
                                 (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.App)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:UniqueList[0]
                                           <Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.App)>_R))
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.App)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:UniqueList[0]
                                           <Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.App)>_R))
                                 (Data.Map.Base.Tip
                                    @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                    @ ((Yesod.Routes.Class.Route Foundation.App
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Data.Text.Internal.Builder.Builder))
                                 (GHC.Base.Nothing
                                    @ ((Yesod.Routes.Class.Route Foundation.App
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Text.Julius.Javascript))
                                 (Yesod.Core.Types.$fApplicativeWidgetT2
                                    @ (Yesod.Routes.Class.Route Foundation.App))
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:Head[0]
                                           <Yesod.Routes.Class.Route Foundation.App>_R)))
                                `cast`
                              (Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)
                      } in
                      let {
                        m1 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True)
                                        (\ (eta12 :: Yesod.Core.Types.HandlerData
                                                       Foundation.App
                                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                           (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                         x2 eta13) -}
                        = \ (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          x2
                      } in
                      let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,A,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ (eta12 :: Yesod.Core.Types.HandlerData
                                                       Foundation.App
                                                       (Yesod.Core.Types.MonadRoute
                                                          GHC.Types.IO)) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.N:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N <Foundation.App>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                       <GHC.Types.IO>_N <Foundation.App>_N)
                                                  (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((,)
                                                          <()>_R
                                                          (Yesod.Core.Types.GWData
                                                             (Yesod.Routes.Class.Route
                                                                (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.App>_N))_R)_R)_R)_R))
                                           (case eta12 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.App
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.App)
                                              dt1 })) -}
                        = \ (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.N:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N <Foundation.App>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                        <GHC.Types.IO>_N <Foundation.App>_N)
                                   (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((,)
                                           <()>_R
                                           (Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route
                                                 (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                      <GHC.Types.IO>_N
                                                      <Foundation.App>_N))_R)_R)_R)_R))
                            (case eta12 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.App
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2 @ Foundation.App)
                               dt1 })
                      } in
                      let {
                        lvl57 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m2
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            Handler.Cliente.getClienteR20
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.App
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.App>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            eta12
                      } in
                      let {
                        lvl58 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Cliente.getClienteR15
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.App>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            lvl57
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl59 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m1
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.App>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            lvl58
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl60 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Cliente.getClienteR10
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.App>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            lvl59
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl61 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Cliente.getClienteR7
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            lvl60
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      (\ (eta12 :: Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.App
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handler.Cliente.getClienteR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.App>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                         lvl61
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                         eta12)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
cdc1f1699edc6cd4ae700e92d783759f
  getClienteR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Cliente.getClienteR11 eta13) -}
5258738347d4544fde7dbe8d064bf5cb
  getClienteR11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Cliente.getClienteR_eta1)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
f4921ad9f4b036e07a6734aeff14f182
  getClienteR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getClienteR13) -}
b1fb6dd2e344674297e6abaed6b76e3f
  getClienteR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getClienteR14) -}
ff381456ac8c7c75174a02384f63f67e
  getClienteR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" method=\"post\" enctype=\""#) -}
000838afb6a3bb192e281ecad6698893
  getClienteR15 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Cliente.getClienteR16 eta13) -}
2359d1d96bbd208b3b518c627bbbea9b
  getClienteR16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Cliente.getClienteR_eta2)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
80ce7755c1fdc58e8e4b563665e3fec2
  getClienteR17 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getClienteR18) -}
5f4ba8ef3ba7cf50477ecb405755e7b4
  getClienteR18 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getClienteR19) -}
7009df92a73b1e84518141b5b3d9f3b2
  getClienteR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\">"#) -}
d0169adbeb9734f5a5d0b419c50df21f
  getClienteR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Cliente.getClienteR3 eta13) -}
582f6ebfaaf547d42dc622ee819e13a2
  getClienteR20 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta13, Handler.Cliente.getClienteR21 #)) -}
af94731c3b691bd6bd2ed6a54611af51
  getClienteR21 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Cliente.getClienteR22
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)) -}
87ae700871365417aa82644edb72890f
  getClienteR22 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.Cliente.getClienteR23
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
18175cf95b86fd42ba3c99555c98aaf7
  getClienteR23 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handler.Cliente.getClienteR_eta3) -}
6121dc87f7c4e96899e9dca9a00c695b
  getClienteR24 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getClienteR25) -}
db134d792cb60aceba8ccb80b6c4cff8
  getClienteR25 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getClienteR26) -}
fe73619bcd64363685578ce9686c6af3
  getClienteR26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Cadastrar\">\n\
                   \</form>\n"#) -}
875c46302456370864d849bcaf041682
  getClienteR27 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Cliente
                   @ Foundation.Widget
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.formCliente1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Cliente>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
2f7b1e89f43d094d429cb515bd679ae0
  getClienteR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Cliente.getClienteR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
996963e9eba44734c305f8f5fdda593f
  getClienteR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getClienteR5) -}
f67c2c054ad3499b44fa10b93e706878
  getClienteR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getClienteR6) -}
517940053dc9ef8f856223f5e781856f
  getClienteR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<form action=\""#) -}
a7b3ecf45bc54151d4aae0acded30bb3
  getClienteR7 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.App
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Cliente.getClienteR9
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.App>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.App>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Cliente.getClienteR8) -}
50186e7d0a306ee11a8888944ff0c51b
  getClienteR8 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta12 :: Data.Text.Internal.Text
                   = urender
                       Foundation.ClienteR `cast` (Sym (Foundation.D:R:RouteApp0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta13 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta12
                 } in
                 let {
                   eta14 :: Text.Blaze.Internal.MarkupM ()
                   = Text.Blaze.Internal.Content @ () eta13
                 } in
                 let {
                   lvl57 :: (Yesod.Routes.Class.Route Foundation.App
                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text)
                            -> Text.Blaze.Internal.MarkupM ()
                     {- Arity: 1 -}
                   = \ (ds :: Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text) ->
                     eta14
                 } in
                 let {
                   lvl58 :: Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl57
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl59 :: ((),
                             Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl58
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 (\ (eta15 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta16 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta16, lvl59 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.App>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))) -}
5a715d7348e4e1e140a280414382b348
  getClienteR9 ::
    Yesod.Core.Types.WidgetT
      Foundation.App
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)
                   (Handler.Cliente.$s$fMonadHandlerWidgetT @ Foundation.App)) -}
293a597d21374c1642759c680809dade
  getClienteR_eta :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getClienteR4) -}
049bdd29796be3b9e93215dd92d7cedb
  getClienteR_eta1 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getClienteR12) -}
d3ab6c469020ace23f4fdc35abba1078
  getClienteR_eta2 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getClienteR17) -}
46c59eae71f2213a0d7bacf34a68c3d7
  getClienteR_eta3 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getClienteR24) -}
93e79a08f44bf33eba67729c9f42ec61
  getListClienteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.getListClienteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
1e468e42671690a75b35f0aeed7b61f8
  getListClienteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistApp1
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Cliente]
                        Handler.Cliente.getListClienteR15
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Cliente]>_N))
                        r
                        s of ds1 { (#,#) ipv ipv1 ->
                 ((Foundation.$fYesodApp_$cdefaultLayout
                     (let {
                        m1 :: Yesod.Core.Types.HandlerData
                                Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.App)) #)
                          {- Arity: 2 -}
                        = Handler.Cliente.getListClienteR14 ipv1
                      } in
                      let {
                        lvl57 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.App))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.App
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.App
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m1
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <((),
                                                  Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route Foundation.App))>_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            Handler.Cliente.getListClienteR7
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.App
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.App>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                            eta12
                      } in
                      (\ (eta12 :: Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.App
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handler.Cliente.getListClienteR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.App>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                         lvl57
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                         eta12)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
cc2194edb9102dfd648a4ef48ecc9c90
  getListClienteR10 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handler.Cliente.getListClienteR_eta1) -}
2e150f1e2997c03e42e457ddfb5d7769
  getListClienteR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getListClienteR12) -}
a0ab968e0b691c247e9918d5d544093e
  getListClienteR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getListClienteR13) -}
da5936fd000ee3845b0eba6814729886
  getListClienteR13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</table>\n"#) -}
3aab4e5b74e6abc95fa4d1857aa418d3
  getListClienteR14 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Cliente]
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.App)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
d173c12773a765e11e731db56aed8895
  getListClienteR15 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Cliente]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.App
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Cliente)))
                   = Handler.Cliente.getListClienteR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Cliente))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.App>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Cliente))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Cliente))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Cliente))
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Cliente]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Cliente)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Cliente)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Cliente]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Cliente]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Cliente]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.App>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Cliente]>_N)))) -}
e9f7705f1d69b53fc6beab0528f58203
  getListClienteR16 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Cliente]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Cliente)
                   Handler.Cliente.getListClienteR17
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Cliente))) -}
5ffc235fd605496c25ddf5785664ff61
  getListClienteR17 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Cliente
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Cliente
                   @ Data.Text.Internal.Text
                   Handler.Cliente.getListClienteR18
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldClientetyp0[0]) <Data.Text.Internal.Text>_N)) -}
8a00920515030be254db18d088bfa861
  getListClienteR18 ::
    Foundation.R:EntityFieldClientetyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.ClienteNome
                   @ Data.Text.Internal.Text
                   Handler.Cliente.getListClienteR19
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
d6040edae9209164ec8c1f1f7269ed7e
  getListClienteR19 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
32025eefb3475efcd1ef00cf6cc91cd3
  getListClienteR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Cliente.getListClienteR3 eta13) -}
648077545526c4860197392147e12cb7
  getListClienteR20 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Cliente,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityCliente,
                  Handler.Cliente.getListClienteR21
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
23137f8dc53f58b913f9a75de080d6e1
  getListClienteR21 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
0d81463cb47f87ad1bcc633957853288
  getListClienteR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Cliente.getListClienteR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
9d6cfee8a5c7e46af0525aff72784daa
  getListClienteR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.getListClienteR5) -}
f7cf6284f322a53d97cc72006af627b9
  getListClienteR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.getListClienteR6) -}
d3219fc1d57af2477195da4a132632fc
  getListClienteR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<table><tr><td> id</td>\n\
                   \<td> nome</td>\n\
                   \<td> cpf</td>\n\
                   \<td> endereco</td>\n\
                   \<td> cidade</td>\n\
                   \<td> estado</td>\n\
                   \<td> telefone</td>\n\
                   \</tr>\n"#) -}
424323d108bc8926ac7e068ea6bc837b
  getListClienteR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta13, Handler.Cliente.getListClienteR8 #)) -}
e40b0531569a085bf2b520fc4018742d
  getListClienteR8 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Cliente.getListClienteR9
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)) -}
324a6732e4dc2bf7cf7a2e654b7c4acf
  getListClienteR9 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.Cliente.getListClienteR10
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
a3853333da1a22717330d1a68e946f1c
  getListClienteR_eta :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getListClienteR4) -}
2f3dfe1df49d2b2c2047e96257e2235d
  getListClienteR_eta1 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.getListClienteR11) -}
e6de87db2185c2351500299b11b7ee4a
  getListClienteR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Cliente)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Cliente
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ GHC.Types.IO
                   Handler.Cliente.getListClienteR20
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Cliente>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendCliente[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Cliente))
                   Handler.Cliente.getListClienteR16) -}
30fd55b3dfbcddb0bae3759da2033583
  postClienteR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Cliente.postClienteR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N))) -}
53a6b1a9363349c1dd688c77dbd89831
  postClienteR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Cliente.postClienteR16
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Cliente,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Cliente,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handler.Cliente.postClienteR15
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess clientela
                   -> case (Foundation.$fYesodPersistApp3
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.App>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N))
                              r)
                             `cast`
                           (GHC.Types.N:IO[0] <Foundation.App>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case ((Data.Pool.withResource
                               @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                               (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                                  @ Foundation.App)
                               (case ipv3 of wild3 { Foundation.App ds5 ds6 -> ds6 })
                               (Database.Persist.Sql.Run.runSqlConn
                                  @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                                  @ (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
                                  (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                                     @ Foundation.App)
                                  Foundation.$fYesodPersistApp2
                                    `cast`
                                  (GHC.Classes.(%,%)
                                     <Database.Persist.Class.PersistStore.IsPersistBackend
                                        Database.Persist.Sql.Types.Internal.SqlBackend>_N
                                     ((Data.Type.Equality.~)
                                        <*>_N
                                        (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                                        <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                                  (Handler.Cliente.postClienteR14 clientela)))
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.App>_N
                                 <GHC.Types.IO>_N
                                 <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <Database.Persist.Class.PersistEntity.Key Foundation.Cliente>_R)
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      ((Foundation.$fYesodApp_$cdefaultLayout
                          (let {
                             x2 :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.App GHC.Types.IO)))) #)
                               {- Arity: 1, Strictness: <S,U> -}
                             = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               let {
                                 eta12 :: GHC.Base.String
                                 = case ipv5
                                          `cast`
                                        (Trans
                                             (Foundation.D:R:KeyCliente0[0])
                                             (Trans
                                                  (Foundation.N:R:KeyCliente[0])
                                                  (Trans
                                                       (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                       (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild3 { GHC.Int.I64# x# ->
                                   case GHC.Show.$wshowSignedInt
                                          0#
                                          x#
                                          (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww1 ww6 ->
                                   GHC.Types.: @ GHC.Types.Char ww1 ww6 } }
                               } in
                               let {
                                 eta13 :: Text.Blaze.Internal.ChoiceString
                                 = Text.Blaze.Internal.String eta12
                               } in
                               let {
                                 eta14 :: Text.Blaze.Internal.MarkupM ()
                                 = Text.Blaze.Internal.Content @ () eta13
                               } in
                               (# s1,
                                  (GHC.Tuple.(),
                                   (Yesod.Core.Types.GWData
                                      @ (Yesod.Routes.Class.Route Foundation.App)
                                      (\ (ds6 :: Yesod.Routes.Class.Route Foundation.App
                                                 -> [(Data.Text.Internal.Text,
                                                      Data.Text.Internal.Text)]
                                                 -> Data.Text.Internal.Text) ->
                                       eta14)
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Body[0]
                                                <Yesod.Routes.Class.Route Foundation.App>_R))
                                      (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                        `cast`
                                      (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.App)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Script
                                                   (Yesod.Routes.Class.Route Foundation.App)>_R))
                                      (GHC.Base.id
                                         @ [Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.App)])
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                <Yesod.Core.Types.Stylesheet
                                                   (Yesod.Routes.Class.Route Foundation.App)>_R))
                                      (Data.Map.Base.Tip
                                         @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                         @ ((Yesod.Routes.Class.Route Foundation.App
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Data.Text.Internal.Builder.Builder))
                                      (GHC.Base.Nothing
                                         @ ((Yesod.Routes.Class.Route Foundation.App
                                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                             -> Data.Text.Internal.Text)
                                            -> Text.Julius.Javascript))
                                      (Yesod.Core.Types.$fApplicativeWidgetT2
                                         @ (Yesod.Routes.Class.Route Foundation.App))
                                        `cast`
                                      (Sym (Yesod.Core.Types.N:Head[0]
                                                <Yesod.Routes.Class.Route Foundation.App>_R)))
                                     `cast`
                                   (Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route
                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                   <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)
                           } in
                           let {
                             m1 :: Yesod.Core.Types.HandlerData
                                     Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         ((),
                                          Yesod.Core.Types.GWData
                                            (Yesod.Routes.Class.Route
                                               (Yesod.Core.Class.Handler.HandlerSite
                                                  (Yesod.Core.Types.WidgetT
                                                     Foundation.App GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A>,
                                  Unfolding: InlineRule (1, True, True)
                                             (\ (eta12 :: Yesod.Core.Types.HandlerData
                                                            Foundation.App
                                                            (Yesod.Core.Types.MonadRoute
                                                               GHC.Types.IO))
                                                (eta13 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                              x2 eta13) -}
                             = \ (eta12 :: Yesod.Core.Types.HandlerData
                                             Foundation.App
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                               x2
                           } in
                           let {
                             lvl57 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.App))
                               {- Arity: 2 -}
                             = \ (ds6 :: ())
                                 (eta12 :: Yesod.Core.Types.HandlerData
                                             Foundation.App
                                             (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                               Yesod.Core.Types.$fApplicativeWidgetT3
                                 @ GHC.Types.IO
                                 @ Foundation.App
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 m1
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.App
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.App>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                                 Handler.Cliente.postClienteR7
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.App
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.N:IO[0]
                                                          ((,)
                                                             <()>_R
                                                             (Yesod.Core.Types.GWData
                                                                (Yesod.Routes.Class.Route
                                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                             <GHC.Types.IO>_N
                                                                             <Foundation.App>_N)))_R)_R)_R))
                                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                     <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                                 eta12
                           } in
                           (\ (eta12 :: Yesod.Core.Types.HandlerData
                                          Foundation.App
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                            Yesod.Core.Types.$fApplicativeWidgetT3
                              @ GHC.Types.IO
                              @ Foundation.App
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handler.Cliente.postClienteR2
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  ((,)
                                                     <()>_R
                                                     (Yesod.Core.Types.GWData
                                                        (Yesod.Routes.Class.Route
                                                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.App>_N)))_R)_R)_R))
                                   (Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                              lvl57
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                             <Foundation.App>_N <GHC.Types.IO>_N <()>_N))
                              eta12)
                             `cast`
                           (Sym (Yesod.Core.Types.N:WidgetT[0]
                                     <Foundation.App>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
f86adbd1745e5250c590c133c341e0d6
  postClienteR10 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handler.Cliente.postClienteR_eta1) -}
936850ba986f4dde70d8b9797c047c34
  postClienteR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.postClienteR12) -}
b150d38a1922e437d314a907b3a20a66
  postClienteR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.postClienteR13) -}
6509210f0fe8eee27ad216d6c27b62fe
  postClienteR13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " cadastrado!</h1>\n"#) -}
bd89ad142a5c9ba1ff658e4e39604f2c
  postClienteR14 ::
    Foundation.Cliente
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Cliente)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ Foundation.Cliente
                   (Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.App)
                   Handler.Cliente.getListClienteR20
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Cliente>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendCliente[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
aa903f9b608ab1479325f304e9560096
  postClienteR15 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   @ Text.Blaze.Html.Html
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.App)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Routes.Class.Route Foundation.App>_N))
                   Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
e8e74773aad757531a0e0d630c301f73
  postClienteR16 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Cliente,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Cliente
                   @ Foundation.Widget
                   Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Cliente.$s$fMonadResourceHandlerT @ Foundation.App)
                   (Handler.Cliente.$s$fMonadHandlerHandlerT @ Foundation.App)
                   Handler.Cliente.formCliente1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Cliente>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.App>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
2d6a3abd45beafb7f69eaca20e76cf3c
  postClienteR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Cliente.postClienteR3 eta13) -}
a411dbe42a35ffc222a858580048fd67
  postClienteR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.App)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.App
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Cliente.postClienteR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.App)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.App
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.App))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.App>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R) #)) -}
eb97675fbd3ca2c7d41287f20452bc3d
  postClienteR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Cliente.postClienteR5) -}
44c77778d04a115071b597ef0672f272
  postClienteR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Cliente.postClienteR6) -}
b128735382dd414414199ab1df859920
  postClienteR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> Cliente "#) -}
787a7bfb0e7d36a088c9f8c91d6b9825
  postClienteR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta13, Handler.Cliente.postClienteR8 #)) -}
0b2dfdac0a984024083cf1f4172c4b2e
  postClienteR8 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Cliente.postClienteR9
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)) -}
1a8cea54d36f23229c21d639722118a9
  postClienteR9 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Handler.Cliente.postClienteR10
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.App)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.App)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.App
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.App))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
fa2a74d5fb7cdb29b5e7762293bf5fd2
  postClienteR_eta :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.postClienteR4) -}
a8c9bb7111e1c7c398c8faf58ec958d9
  postClienteR_eta1 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Cliente.postClienteR11) -}
"SPEC/Handler.Cliente $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                                    ($dMonad :: GHC.Base.Monad
                                                                                  GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handler.Cliente.$s$fApplicativeHandlerT @ site
"SPEC/Handler.Cliente $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                             ($dMonad :: GHC.Base.Monad
                                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handler.Cliente.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handler.Cliente $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                                ($dMonad :: GHC.Base.Monad
                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Cliente.$s$fApplicativeHandlerT_$s$fFunctorHandlerT
      @ site
"SPEC/Handler.Cliente $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                          GHC.Types.IO
                                                                                          GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handler.Cliente.$s$fMonadBasebHandlerT @ site
"SPEC/Handler.Cliente $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handler.Cliente $fMonadBasebHandlerT_$cp2MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp2MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
      @ site
"SPEC/Handler.Cliente $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handler.Cliente $fMonadBasebHandlerT_$cp4MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp4MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
      @ site
"SPEC/Handler.Cliente $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                     ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                      GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handler.Cliente.$s$fMonadHandlerHandlerT @ site
"SPEC/Handler.Cliente $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handler.Cliente $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                     ($dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handler.Cliente.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Handler.Cliente $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                                    ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                     GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handler.Cliente.$s$fMonadHandlerWidgetT @ site
"SPEC/Handler.Cliente $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                                ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handler.Cliente $fMonadIOHandlerT_$cliftIO @ IO _" [ALWAYS] forall @ site
                                                                         ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cliftIO @ GHC.Types.IO
                                              @ site
                                              $dMonadIO
  = Handler.Cliente.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
      @ site
"SPEC/Handler.Cliente $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                      GHC.Types.IO)
                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                        GHC.Types.IO
                                                                                        GHC.Types.IO)
                                                                      ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handler.Cliente.$s$fMonadResourceHandlerT @ site
"SPEC/Handler.Cliente $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                        GHC.Types.IO)
                                                                                        ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                          GHC.Types.IO
                                                                                                          GHC.Types.IO)
                                                                                        ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handler.Cliente $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                        GHC.Types.IO)
                                                                                        ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                          GHC.Types.IO
                                                                                                          GHC.Types.IO)
                                                                                        ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handler.Cliente $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                        ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                        GHC.Types.IO)
                                                                                        ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                          GHC.Types.IO
                                                                                                          GHC.Types.IO)
                                                                                        ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                           GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Cliente.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handler.Cliente $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handler.Cliente $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                            ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                               GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handler.Cliente.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handler.Cliente textField @ Handler" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                         Foundation.Handler)
                                                           ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                                 (Yesod.Core.Class.Handler.HandlerSite
                                                                                    Foundation.Handler)
                                                                                 Yesod.Form.Types.FormMessage)
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.App GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handler.Cliente.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

