
==================== FINAL INTERFACE ====================
2016-11-29 16:07:58.448448 UTC

interface main@main:Handler.Admin 8001
  interface hash: dc98acf7fd2204cf586f243596780fff
  ABI hash: 30fbaefb4d66a10483acf5816c549355
  export-list hash: 84cbe8ae563f76392b1a9915987d0002
  orphan hash: 4b8075c6d9bf46d81fffbce723ae81cd
  flag hash: b9b96879b99cd2bbed62939a3bf7a4c9
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handler.Admin.formFuncionario
  Handler.Admin.getAdminR
  Handler.Admin.getListAdminR
  Handler.Admin.postAdminR
module dependencies: Foundation
package dependencies: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz
                      aeson-compat-0.3.6@aeson-compat-0.3.6-5wE6V2cyaFcB5no9HXBKW5
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-448ipfN5j28Ha0AgPiJmdI
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-tmPpmtbHbvIDjFWbkjGrR
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C
                      blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cereal-0.5.4.0@cereal-0.5.4.0-2FJYHGgtE5C3SxaZjt25xS
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      clientsession-0.9.1.2@clientsession-0.9.1.2-IpBcpG3jp1KHy8EW2Zpyr3
                      conduit-1.2.8@conduit-1.2.8-5FcKXI45VDc6lGPbFuJAWM
                      conduit-extra-1.1.15@conduit-extra-1.1.15-53svZ1V22a02WgMiq2YICw
                      containers-0.5.7.1@containers-0.5.7.1
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-COLYQrn2KP0KrG5tq2u9OS
                      crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-GQAZIw8UH93GFERaAFFYYo
                      cryptohash-0.11.9@cryptohash-0.11.9-9KNu0EEbreBFrmNJAeHgYz
                      cryptohash-conduit-0.1.1@cryptohash-conduit-0.1.1-A7dMarJBg4dHM8dTPvP0ZL
                      cryptonite-0.19@cryptonite-0.19-G9PYO4oOEqhDTta2u9rAaU
                      css-text-0.1.2.2@css-text-0.1.2.2-2oPStu29BQF6h11Hvse6Bl
                      data-default-0.7.1.1@data-default-0.7.1.1-5uix4eIzBY9IcVb4V2HbW3
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-ESBROgKchbm3QXcQv2e7oG
                      directory-1.2.6.2@directory-1.2.6.2
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-bAUkz2rC2kFhBbPjw2Of5
                      email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF
                      entropy-0.3.7@entropy-0.3.7-54dsRvsNlllHvcIX99CGiD
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.7@fast-logger-2.4.7-E7H6TuZQzia59KuB50vayl
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      http-api-data-0.2.4@http-api-data-0.2.4-3jwS7OrPl3l4oJfG3gRZ5C
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-FAbjmjQAybhLjdn6FTjXH8 integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J
                      network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      path-pieces-0.2.1@path-pieces-0.2.1-EQ6YdjSujhVE8ECatsqK1q
                      persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD
                      persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK
                      persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW
                      postgresql-libpq-0.9.2.0@postgresql-libpq-0.9.2.0-IWEdPrPraPeE94ud73Ope3
                      postgresql-simple-0.5.2.1@postgresql-simple-0.5.2.1-3INwbAr3KaOko5GoR6I2w
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      process-1.4.2.0@process-1.4.2.0
                      psqueues-0.2.2.2@psqueues-0.2.2.2-Abmw1tivvf7JJikDhHX0px
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-9vTgJsy3ECMB5KkdzRIRAh
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0
                      silently-1.2.5@silently-1.2.5-Ek776fxSdtm4h8aXqt6CNw
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-FZS0Stqtwd5AOyFRQgM4IV
                      skein-1.0.9.4@skein-1.0.9.4-2lnBX1jPJHzHUOltMUlcf7
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-4lLWE8CZnvmDZJW5bKkus1
                      streaming-commons-0.1.16@streaming-commons-0.1.16-KtRawhq8O97EWCabefpk66
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-KFZuUgmBRr4GSrTHv7XvSl
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      tagsoup-0.14@tagsoup-0.14-HxE6zinFMUaDOGdOBKKTEg
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      unix-2.7.2.0@unix-2.7.2.0
                      unix-compat-0.4.2.0@unix-compat-0.4.2.0-GNHotEMWE5dJ4oYFhgibIV
                      unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      wai-3.2.1.1@wai-3.2.1.1-f77bMYZGLQBAD3XJrvGiW
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-6csRgbgolyoCCOLw42RlBs
                      wai-extra-3.0.19@wai-extra-3.0.19-JgWV2EEhKqI9Cbv1ALadHO
                      wai-logger-2.3.0@wai-logger-2.3.0-IfusT8I9ees2102USHAF8e
                      warp-3.2.9@warp-3.2.9-1T06si5IpgT9ocLo3cujDp
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-LQRG7XxkG2ZCHdKqzimhvw
                      yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo
                      yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1
                      yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp
                      yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy
                      yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Generic
         aeson-0.11.2.1@aeson-0.11.2.1-5ZQWuTFmffALcfpzDCXoOz:Data.Aeson.Types.Instances
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-LliNhOf849x8qng9ESkbgP:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         network-2.6.3.1@network-2.6.3.1-G4Up1CPKbp7DeFsnywOnGG:Network.Socket
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.1.6@persistent-template-2.5.1.6-L1UJyeURwQyFqq8arz68gW:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-HcxGsrnTmTlC98pyanzoMW:Data.UnixTime.Diff
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.List.NonEmpty
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Semigroup
                         base-4.9.0.0:Data.Type.Equality base-4.9.0.0:Data.Version
                         base-4.9.0.0:Data.Void base-4.9.0.0:GHC.Exts
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         email-validate-2.2.0@email-validate-2.2.0-2BoqWfhv2Lj2AtrEHUvNRF:Text.Email.Parser
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-9hsGfRvggCmFA0ueZi5Sd9:Data.IP.Range
                         main@main:Foundation
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         monad-logger-0.3.20.1@monad-logger-0.3.20.1-Id6Qefl6M7BBA3QajigPhK:Control.Monad.Logger
                         mwc-random-0.13.4.0@mwc-random-0.13.4.0-CH6ozsPFZjwVSNwmEz44J:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistConfig
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Css
                         shakespeare-2.0.11.2@shakespeare-2.0.11.2-LSLtnlDTQwm3fnDmntHvG0:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Handler
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Types
                         yesod-static-1.5.1.1@yesod-static-1.5.1.1-3OXXDcQnEWB2nHnar7fIdk:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  blaze-html-0.8.1.2@blaze-html-0.8.1.2-2kD96kJB6JEGow1dP8IL6C:Text.Blaze.Html a616e69638e5c542aa4042a4609214fe
import  -/  blaze-markup-0.7.1.0@blaze-markup-0.7.1.0-5a5pBG0fO8kJX4ke3K7j3D:Text.Blaze.Internal 223b48aced8c4f31c68f17d332e96f2f
import  -/  Foundation 03599e542dc4ed9579c1b02a9b07337f
  exports: ff685fbd2381d15b6ec2fbd4dcfa4a87
  AdminR 2bf800f8b19531a898c39b2a5147ef3d
  Form 6e9d930124df28505e659e965c12beb6
  Funcionario 8a88ff636957c53abfd1b57d379f18b4
  Funcionario 664b63bc4dbf7d73df569d640be4db41
  FuncionarioNome 95d6050b3e312cf728a6465289e42eb7
  Handler aa03133617c2300e0c6ed9b3c3f3f1d0
  HomeR 280ed3aab010aa0988b7dc077414d8ff
  UniqueEmail 20e4434c6a5bfcff4dcb8104dcda0180
  funcionarioEmail 5a7f7e525dfd534ca9d7b7a85da9127e
  funcionarioNome 08f2539d22b4c50c159ed68a9c42056e
  funcionarioSenha e17dbb2b517666cdbb96c7f9ea85dbdb
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistEntity dbb3af8b40ede057aba8c075ea719bcc
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistQuery c2afd8b3d1bd1452e6b77364fb33672c
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistStore 425057bb4452baac78187a91fb6485d4
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Class.PersistUnique 52e37b7e0f39653db9830ee80e59907f
import  -/  persistent-2.6@persistent-2.6-1lE9S4auQBGDBFFzb0JIqD:Database.Persist.Sql.Orphan.PersistStore 0f67efe6ed4985f1d278a64d7f69ca44
import  -/  persistent-postgresql-2.6@persistent-postgresql-2.6-GvBYHyPf2H6GQQdyjSi6nK:Database.Persist.Postgresql 1b8867174b6955b71b9a450f85dd5d9e
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 6515f3179e27a91345842b6e634f584c
import  -/  yesod-1.4.3.1@yesod-1.4.3.1-1vmCfs8CO1Q5gxmTVtL5zo:Yesod 60aea8526cb37ebb973e9ce325cb4deb
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Class.Yesod bba8d8da735046bb383f45f087c1645b
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Handler 91ca97147a231a54093ebbcf44176b77
import  -/  yesod-core-1.4.26@yesod-core-1.4.26-Bs4t4O0dhoG8RcNqRS5IQ1:Yesod.Core.Widget 6b0aef1518edca4dd696cfd211694629
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Fields 6609e336a601f9246072290aaf0faf40
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Functions e5b39ff68726d0d0d69503c52b11121b
import  -/  yesod-form-1.4.9@yesod-form-1.4.9-DmRFNLEmWDZUKyMpfqIgp:Yesod.Form.Types e7c3cd1f2504cbf6aa5d13cc99bfffe3
import  -/  yesod-persistent-1.4.0.6@yesod-persistent-1.4.0.6-BOcgTkEXC55By9RMaZULwy:Yesod.Persist.Core bd24bc5753868a0e0776592694d2328d
10182d4842e58aad138f041774abf146
  $s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Admin.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad) -}
91edeab88cc204f8898bed8567e99890
  $s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta12 :: a)
                   (eta13 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta14 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta12) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta14)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
3d67034fd9b388f9191fb345a0f43fdc
  $s$fApplicativeHandlerT_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
61da91a4d57f4c0d41342e63805e79fe
  $s$fApplicativeHandlerT_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fApplicativeHandlerT_$dMonad) -}
726857656e4235f8a072dcc54fc2622f
  $s$fFunctorAForm1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT
                   @ Foundation.Sitio) -}
fe99253b5a7f4c78c3882bf644c190f3
  $s$fFunctorAForm_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     GHC.Base.$fMonadIO)
                  (Handler.Admin.$s$fApplicativeHandlerT_$creturn @ site)
                  (Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site) -}
1e268c8dbb100b7b3de50ab24560c29e
  $s$fFunctorAForm_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta12 :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   GHC.Base.$fMonadIO
                   eta12) -}
6b3fc289c35e15686f5f5b3e9ff2d43b
  $s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
                     @ site) -}
fc5647d9e4d5f126a1063ef95370d473
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
fc1d9ebc28861de72481da4d3f4dd2d8
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.$s$fApplicativeHandlerT -}
ad509860ef17e8421060941ff7c6c4fc
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
73ed32b47b97ac908a524cbdb5909927
  $s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT -}
3fa62215aefc3c827d16820b5f72b7b3
  $s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO ::
    GHC.Types.IO a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta12 :: GHC.Types.IO a) ->
                 let {
                   eta13 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta12
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta13)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <a>_N))) -}
765ec4100fe49b9e80e4181b258d37bb
  $s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fMonadHandlerHandlerT1) -}
e042db553fa0ba9a7076b8b8a0304818
  $s$fMonadHandlerHandlerT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
838737dd46ab9bb5746963303f16874a
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
                     @ site) -}
3ad6e0fa6b59b6b3e9943f29c0db4d72
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
                     @ site) -}
1813c07490e75ff3d7ab6440b204794a
  $s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM ::
    GHC.Exception.Exception e =>
    e -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <B,1*U(A,A,1*C1(U),A,A)><B,U><B,A><B,U>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ e
                   @ a
                   (eta12 :: GHC.Exception.Exception e)
                   (x2 :: e)
                   (eta13 :: Yesod.Core.Types.HandlerData
                               site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta14 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.IO.throwIO @ e @ a eta12 x2) `cast` (GHC.Types.N:IO[0] <a>_R)
                   eta14)
                  `cast`
                (forall (site :: <*>_N) (e :: <*>_N) (a :: <*>_N).
                 <GHC.Exception.Exception e>_R
                 ->_R <e>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
659c3640cda8c3412dfa275a0e0e32b8
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.WidgetT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fMonadHandlerHandlerT1)
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Handler.Admin.$s$fMonadHandlerHandlerT1) -}
1b9f26c8aa86b491c062140269db8570
  $s$fMonadResourceHandlerT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
                     @ site)
                  (Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
                     @ site)
                  (Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
                     @ site)
                  (Yesod.Core.Types.$fMonadResourceHandlerT_$cliftResourceT
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
f58861e65cf43101411d5a97e3b5ecb9
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT -}
3eb2c8ef547bd198af7734a658e53642
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT -}
4251ef74f0ad5e02210f98ff949d0147
  $s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.$s$fMonadBasebHandlerT -}
26fa25bf4bcc3ec16df38c492ffd47b7
  $stextField ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   (\ (eta156 :: [Data.Text.Internal.Text])
                      (eta157 :: [Yesod.Core.Types.FileInfo]) ->
                    Yesod.Form.Functions.$wparseHelperGen
                      @ Foundation.Handler
                      @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text
                      Handler.Admin.$s$fFunctorAForm1
                      Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                        `cast`
                      (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                                (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                <Yesod.Form.Types.FormMessage>_N))
                      (Data.Either.Right
                         @ Yesod.Form.Types.FormMessage
                         @ Data.Text.Internal.Text)
                      eta156)
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
6664b894700e790797f3d528af05ce23
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Handler.Admin.$trModule2
                   Handler.Admin.$trModule1) -}
9c611c5ecd721cd02aa0cac6ee9a6756
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Handler.Admin"#) -}
6464691f733998937dac6dae2126857f
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
852778b01dfae2a12e53df7739e447f5
  formFuncionario :: Foundation.Form Foundation.Funcionario
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.formFuncionario1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((,)
                                  <Yesod.Form.Types.FormResult Foundation.Funcionario>_N
                                  (Yesod.Core.Types.WidgetT
                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                               <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                     <GHC.Types.IO>_N
                                     <()>_N)_N)_N)) -}
0bcc98d376e3c3993127a96d46588670
  formFuncionario1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Funcionario,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (eta105 :: Text.Blaze.Internal.Markup)
                   (eta106 :: (GHC.Base.Maybe
                                 (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                               Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                               [Text.Shakespeare.I18N.Lang]))
                   (eta107 :: Yesod.Form.Types.Ints) ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Funcionario
                   (Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.Sitio)
                   GHC.Types.True
                   Handler.Admin.formFuncionario2
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Funcionario>_N))
                   eta105
                   eta106
                   eta107) -}
f0fb18796422dfd809adf9785f12ca9a
  formFuncionario10 ::
    Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handler.Admin.formFuncionario11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
606df28441b092ca7d916c6f6d25f802
  formFuncionario11 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handler.Admin.formFuncionario12) -}
19f4bf5abf8a423becf5baa38d7cf1ea
  formFuncionario12 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Admin.formFuncionario13
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
7985fcea4845d0fe5c748c002b941ace
  formFuncionario13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Email"#) -}
b709e423428b96a405e123db3bdd3bce
  formFuncionario14 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text
             -> Data.Text.Internal.Text -> Foundation.Funcionario),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ (eta12 :: (Yesod.Core.Class.Handler.HandlerSite
                                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                              [Data.Text.Internal.Text]))
                   (eta13 :: GHC.Base.Maybe
                               (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv))
                   (eta14 :: Yesod.Form.Types.Ints) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
                   = Handler.Admin.formFuncionario_ds
                       `cast`
                     (Yesod.Form.Types.N:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta12
                       eta13
                       eta14
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x2 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Funcionario)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Funcionario)
                             errs
                        Yesod.Form.Types.FormSuccess a1
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text
                                -> Data.Text.Internal.Text -> Foundation.Funcionario)
                             (Foundation.$WFuncionario a1) },
                      x2, y, z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text
                                          -> Data.Text.Internal.Text -> Foundation.Funcionario),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text
                                     -> Data.Text.Internal.Text -> Foundation.Funcionario),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)>_N)))) -}
5555664e584f506405ea9928226a1c5b
  formFuncionario15 ::
    Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handler.Admin.formFuncionario16
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
d91fc9297b46f0e50215bfe55f53da71
  formFuncionario16 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handler.Admin.formFuncionario17) -}
15daff5badb8534e9bc15e1959cc63e9
  formFuncionario17 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Handler.Admin.formFuncionario18 of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
76058ed99a1300d23ed4469260ee4249
  formFuncionario18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds4 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handler.Admin.formFuncionario19
                   0#
                   ipv }) -}
5d82d48d10a064966cd3986f187bad8b
  formFuncionario19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome"#) -}
d7c32ac10612d4ac87c4c1b1b43d97ae
  formFuncionario2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Funcionario,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   (Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.Sitio)
                   @ Data.Text.Internal.Text
                   @ Foundation.Funcionario
                   Handler.Admin.formFuncionario8
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Funcionario>_N))
                   Handler.Admin.formFuncionario3) -}
c942908eb7e63a41f59a2c807fb934a9
  formFuncionario3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handler.Admin.$stextField
                   Handler.Admin.formFuncionario4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
635e7163dc688c2b0a6b8f106db9a412
  formFuncionario4 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handler.Admin.formFuncionario5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
aeebbdeb5e96597298c02832b348a29e
  formFuncionario5 ::
    Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handler.Admin.formFuncionario6) -}
367faf2a0076fee51a7ab221a5ad4a98
  formFuncionario6 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds4 { (#,#) ipv ipv1 ->
                         Text.Shakespeare.I18N.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Text.Shakespeare.I18N.$fIsStringSomeMessage1
                           Handler.Admin.formFuncionario7
                           0#
                           ipv }) of ds4 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
b29dc69ff0966f9b36ddb1b5e2a42033
  formFuncionario7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Password"#) -}
a41d41aa3c741c44f2b78db5f7792355
  formFuncionario8 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Funcionario),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints, Yesod.Form.Types.Enctype)
  {- Arity: 3,
     Unfolding: (Yesod.Form.Types.$fApplicativeAForm2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   (Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT
                      @ Foundation.Sitio)
                   @ Data.Text.Internal.Text
                   @ (Data.Text.Internal.Text -> Foundation.Funcionario)
                   Handler.Admin.formFuncionario14
                     `cast`
                   (Sym (Yesod.Form.Types.N:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Data.Text.Internal.Text
                              -> Data.Text.Internal.Text -> Foundation.Funcionario>_N))
                   Handler.Admin.formFuncionario9) -}
5bf18d21f0838303880f6d148af2dd44
  formFuncionario9 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handler.Admin.$stextField
                   Handler.Admin.formFuncionario10
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
c5217573f5e2b1d99117411b36958fe8
  formFuncionario_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Sitio
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ Foundation.Sitio
                      @ Foundation.Sitio
                      @~ <Foundation.Sitio>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                              <GHC.Types.IO>_N
                                              <Foundation.Sitio>_N)) <Foundation.Sitio>_N)
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handler.Admin.$stextField
                   Handler.Admin.formFuncionario15
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
a1819a9fb8819542d43c879adcdd49c6
  getAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.getAdminR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0244ab24203fd2e99ad92785893d0025
  getAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Admin.getAdminR27
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        x2 :: GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.Sitio GHC.Types.IO)))) #)
                          {- Arity: 1, Strictness: <S,U>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                         let {
                                           eta12 :: Text.Blaze.Internal.MarkupM ()
                                           = case enctype of wild1 {
                                               Yesod.Form.Types.UrlEncoded
                                               -> Yesod.Form.Types.$fToMarkupEnctype4
                                               Yesod.Form.Types.Multipart
                                               -> Yesod.Form.Types.$fToMarkupEnctype1 }
                                         } in
                                         (# s1,
                                            (GHC.Tuple.(),
                                             (Yesod.Core.Types.GWData
                                                @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                                (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                                          -> [(Data.Text.Internal.Text,
                                                               Data.Text.Internal.Text)]
                                                          -> Data.Text.Internal.Text) ->
                                                 eta12)
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:Body[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Sitio>_R))
                                                (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                  `cast`
                                                (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Script
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                          <Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)>_R))
                                                (GHC.Base.id
                                                   @ [Yesod.Core.Types.Stylesheet
                                                        (Yesod.Routes.Class.Route
                                                           Foundation.Sitio)])
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:UniqueList[0]
                                                          <Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)>_R))
                                                (Data.Map.Base.Tip
                                                   @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                   @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Data.Text.Internal.Builder.Builder))
                                                (GHC.Base.Nothing
                                                   @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                                       -> [(Data.Text.Internal.Text,
                                                            Data.Text.Internal.Text)]
                                                       -> Data.Text.Internal.Text)
                                                      -> Text.Julius.Javascript))
                                                (Yesod.Core.Types.$fApplicativeWidgetT2
                                                   @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                                  `cast`
                                                (Sym (Yesod.Core.Types.N:Head[0]
                                                          <Yesod.Routes.Class.Route
                                                             Foundation.Sitio>_R)))
                                               `cast`
                                             (Yesod.Core.Types.GWData
                                                (Yesod.Routes.Class.Route
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N
                                                             <Foundation.Sitio>_N)))_R)_R) #)) -}
                        = \ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          let {
                            eta12 :: Text.Blaze.Internal.MarkupM ()
                            = case enctype of wild1 {
                                Yesod.Form.Types.UrlEncoded -> Yesod.Form.Types.$fToMarkupEnctype4
                                Yesod.Form.Types.Multipart -> Yesod.Form.Types.$fToMarkupEnctype1 }
                          } in
                          (# s1,
                             (GHC.Tuple.(),
                              (Yesod.Core.Types.GWData
                                 @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                 (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                           -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                           -> Data.Text.Internal.Text) ->
                                  eta12)
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:Body[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                 (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                   `cast`
                                 (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:UniqueList[0]
                                           <Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:UniqueList[0]
                                           <Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (Data.Map.Base.Tip
                                    @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Data.Text.Internal.Builder.Builder))
                                 (GHC.Base.Nothing
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Text.Julius.Javascript))
                                 (Yesod.Core.Types.$fApplicativeWidgetT2
                                    @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                   `cast`
                                 (Sym (Yesod.Core.Types.N:Head[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                                `cast`
                              (Yesod.Core.Types.GWData
                                 (Yesod.Routes.Class.Route
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)
                      } in
                      let {
                        m1 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.Sitio GHC.Types.IO)))) #)
                          {- Arity: 2, Strictness: <L,A>,
                             Unfolding: InlineRule (1, True, True)
                                        (\ (eta12 :: Yesod.Core.Types.HandlerData
                                                       Foundation.Sitio
                                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                                           (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                         x2 eta13) -}
                        = \ (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          x2
                      } in
                      let {
                        m2 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Types.IO
                                   ((),
                                    Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,1*U(U,U,U,A,U)>,
                             Unfolding: InlineRule (1, True, False)
                                        (\ (eta12 :: Yesod.Core.Types.HandlerData
                                                       Foundation.Sitio
                                                       (Yesod.Core.Types.MonadRoute
                                                          GHC.Types.IO)) ->
                                         widget
                                           `cast`
                                         (Trans
                                              (Yesod.Core.Types.N:WidgetT[0]
                                                   (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                             <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                                   <GHC.Types.IO>_N
                                                   <()>_N)
                                              ((Yesod.Core.Types.HandlerData
                                                  (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                       <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                                  (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                                               ->_R (GHC.Types.IO
                                                       ((,)
                                                          <()>_R
                                                          (Yesod.Core.Types.GWData
                                                             (Yesod.Routes.Class.Route
                                                                (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                     <GHC.Types.IO>_N
                                                                     <Foundation.Sitio>_N))_R)_R)_R)_R))
                                           (case eta12 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                                            Yesod.Core.Types.HandlerData
                                              @ Foundation.Sitio
                                              @ ()
                                              ds
                                              ds2
                                              dt
                                              (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                                 @ Foundation.Sitio)
                                              dt1 })) -}
                        = \ (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                          widget
                            `cast`
                          (Trans
                               (Yesod.Core.Types.N:WidgetT[0]
                                    (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                              <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)
                               ((Yesod.Core.Types.HandlerData
                                   (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                        <GHC.Types.IO>_N <Foundation.Sitio>_N)
                                   (Sub (Yesod.Core.Types.D:R:MonadRouteIO[0])))_R
                                ->_R (GHC.Types.IO
                                        ((,)
                                           <()>_R
                                           (Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route
                                                 (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                      <GHC.Types.IO>_N
                                                      <Foundation.Sitio>_N))_R)_R)_R)_R))
                            (case eta12 of wild1 { Yesod.Core.Types.HandlerData ds ds2 dt ds3 dt1 ->
                             Yesod.Core.Types.HandlerData
                               @ Foundation.Sitio
                               @ ()
                               ds
                               ds2
                               dt
                               (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT2
                                  @ Foundation.Sitio)
                               dt1 })
                      } in
                      let {
                        lvl54 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m2
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            Handler.Admin.getAdminR20
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta12
                      } in
                      let {
                        lvl55 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Admin.getAdminR15
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl54
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl56 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m1
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl55
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl57 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Admin.getAdminR10
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                ((,)
                                                   <()>_R
                                                   (Yesod.Core.Types.GWData
                                                      (Yesod.Routes.Class.Route
                                                         (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                   <GHC.Types.IO>_N
                                                                   <Foundation.Sitio>_N)))_R)_R)_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl56
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      let {
                        lvl58 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handler.Admin.getAdminR7
                              `cast`
                            (Sym (Yesod.Core.Types.N:WidgetT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            lvl57
                              `cast`
                            (<()>_R
                             ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                            eta12
                      } in
                      (\ (eta12 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handler.Admin.getAdminR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.Sitio>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                         lvl58
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         eta12)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
dab6876220d734e2a01623da039027fb
  getAdminR10 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Admin.getAdminR11 eta13) -}
a6d1fb0b37dbaf740ab78e1b5e29d95c
  getAdminR11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Admin.getAdminR_eta1)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
e53263f69ad7521155658b714235fa56
  getAdminR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getAdminR13) -}
e151415d63a525b686c5e31c49ae8e9b
  getAdminR13 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handler.Admin.getAdminR14) -}
6e58dae2ecfb1d9f2671a29ece30a151
  getAdminR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\" method=\"post\" enctype=\""#) -}
0ef68e3e10db14a924a030ab29b9537e
  getAdminR15 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Admin.getAdminR16 eta13) -}
a375101f8f497d9c22c2ddfe3dfc3b55
  getAdminR16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Admin.getAdminR_eta2)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
c4714b1d18fb2a0a12b5adaabfd263e9
  getAdminR17 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getAdminR18) -}
a50a6e213af992a9fe3d0e1c6ea64cea
  getAdminR18 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handler.Admin.getAdminR19) -}
aea17e9970158b454eff911e8e028590
  getAdminR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "\">"#) -}
4606d16dd501753592c854e82236239c
  getAdminR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Admin.getAdminR3 eta13) -}
884fd6c92a3fc8a3fb91307f85cf479d
  getAdminR20 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta13, Handler.Admin.getAdminR21 #)) -}
499691ccb3f580c5f79c2ee55a826520
  getAdminR21 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Admin.getAdminR22
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
00d37982d108fdff5efa996e1c20a9a4
  getAdminR22 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handler.Admin.getAdminR23
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
13c5537fab8b17f3097ed99694ddaa2c
  getAdminR23 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handler.Admin.getAdminR_eta3) -}
f141e107b77670b791580eec1b77c1c1
  getAdminR24 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getAdminR25) -}
6a6ef7293ce3a092e80e3684b3dd8a3d
  getAdminR25 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handler.Admin.getAdminR26) -}
4a491e96643f9e8ba7c139c82376ecd5
  getAdminR26 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "\n\
                   \<input type=\"submit\" value=\"Cadastrar funcionario\">\n\
                   \</form>\n"#) -}
f320d31fab83b48b8c216d3c721f81ce
  getAdminR27 ::
    Foundation.Handler (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ Foundation.Handler
                   @ Foundation.Funcionario
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handler.Admin.formFuncionario1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Funcionario>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
ff288cf3c6b4f5886722af4733db8b65
  getAdminR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Admin.getAdminR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
24d1ef94cda8bd62348ee9a189715e1d
  getAdminR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getAdminR5) -}
54222c719e351306080594b10233240d
  getAdminR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handler.Admin.getAdminR6) -}
3b166de5d03e2081195f6950dea345d4
  getAdminR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<form action=\""#) -}
6fac689c6dab18942ea6079dd22b1e02
  getAdminR7 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 1,
     Unfolding: (Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.Sitio
                   GHC.Base.$fMonadIO
                   @ (Yesod.Routes.Class.Route Foundation.Sitio
                      -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                      -> Data.Text.Internal.Text)
                   @ ()
                   Handler.Admin.getAdminR9
                     `cast`
                   (Yesod.Core.Types.WidgetT
                      <Foundation.Sitio>_N
                      <GHC.Types.IO>_N
                      ((Yesod.Routes.Class.Route
                          (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                               <GHC.Types.IO>_N <Foundation.Sitio>_N))_N
                       ->_N <[(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text>_N))_R
                   Handler.Admin.getAdminR8) -}
7eebb29fb365b7b020128953b81cbe34
  getAdminR8 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*C1(C1(U(U,U,U)))>,
     Unfolding: (\ (urender :: Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text) ->
                 let {
                   eta12 :: Data.Text.Internal.Text
                   = urender
                       Foundation.AdminR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))
                       (GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                 } in
                 let {
                   eta13 :: Text.Blaze.Internal.ChoiceString
                   = Text.Blaze.Internal.Text eta12
                 } in
                 let {
                   eta14 :: Text.Blaze.Internal.MarkupM ()
                   = Text.Blaze.Internal.Content @ () eta13
                 } in
                 let {
                   lvl54 :: (Yesod.Routes.Class.Route Foundation.Sitio
                             -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                             -> Data.Text.Internal.Text)
                            -> Text.Blaze.Internal.MarkupM ()
                     {- Arity: 1 -}
                   = \ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text) ->
                     eta14
                 } in
                 let {
                   lvl55 :: Yesod.Core.Types.GWData
                              (Yesod.Routes.Class.Route Foundation.Sitio)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)
                       lvl54
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.Sitio)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.Sitio)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.Sitio
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.Sitio
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.Sitio))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                 } in
                 let {
                   lvl56 :: ((),
                             Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl55
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)
                 } in
                 (\ (eta15 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (eta16 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# eta16, lvl56 #))
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     ((,)
                                        <()>_R
                                        (Yesod.Core.Types.GWData
                                           (Yesod.Routes.Class.Route
                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                        <GHC.Types.IO>_N
                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))) -}
7ca40c4055af8d706a3a200c51dce3ae
  getAdminR9 ::
    Yesod.Core.Types.WidgetT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Routes.Class.Route
         (Yesod.Core.Class.Handler.HandlerSite
            (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
       -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
       -> Data.Text.Internal.Text)
  {- Unfolding: (Yesod.Core.Handler.getUrlRenderParams
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   (Handler.Admin.$s$fMonadHandlerWidgetT @ Foundation.Sitio)) -}
aff5326a45089fb9071cbd58664751df
  getAdminR_eta :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getAdminR4) -}
756d77ff9cd35ebed79c333d0651f181
  getAdminR_eta1 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getAdminR12) -}
b1c3ea2ed5779b95a239d430a55a1c6e
  getAdminR_eta2 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getAdminR17) -}
b2ee6253a606c3c5ece5fe30dfb0907f
  getAdminR_eta3 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getAdminR24) -}
b00b1ebd9a582b196ee839e247ea22ec
  getListAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.getListAdminR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
0005367562cc3b167f0de0cc0b4795d8
  getListAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Foundation.$fYesodPersistSitio1
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Funcionario]
                        Handler.Admin.getListAdminR15
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  (Sub (Foundation.D:R:YesodPersistBackendSitio[0]))
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Funcionario]>_N))
                        r
                        s of ds1 { (#,#) ipv ipv1 ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        m1 :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                              -> GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                          {- Arity: 2 -}
                        = Handler.Admin.getListAdminR14 ipv1
                      } in
                      let {
                        lvl54 :: ()
                                 -> Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 -> GHC.Types.IO
                                      ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 2 -}
                        = \ (ds :: ())
                            (eta12 :: Yesod.Core.Types.HandlerData
                                        Foundation.Sitio
                                        (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot] ->
                          Yesod.Core.Types.$fApplicativeWidgetT3
                            @ GHC.Types.IO
                            @ Foundation.Sitio
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            m1
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <((),
                                                  Yesod.Core.Types.GWData
                                                    (Yesod.Routes.Class.Route
                                                       Foundation.Sitio))>_R))
                                 (Sym (Yesod.Core.Types.N:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            Handler.Admin.getListAdminR7
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     ((,)
                                                        <()>_R
                                                        (Yesod.Core.Types.GWData
                                                           (Yesod.Routes.Class.Route
                                                              (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                        <GHC.Types.IO>_N
                                                                        <Foundation.Sitio>_N)))_R)_R)_R))
                                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta12
                      } in
                      (\ (eta12 :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                       Yesod.Core.Types.$fApplicativeWidgetT3
                         @ GHC.Types.IO
                         @ Foundation.Sitio
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         Handler.Admin.getListAdminR2
                           `cast`
                         (Trans
                              (<Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                               ->_R Sym (GHC.Types.N:IO[0]
                                             ((,)
                                                <()>_R
                                                (Yesod.Core.Types.GWData
                                                   (Yesod.Routes.Class.Route
                                                      (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                                <GHC.Types.IO>_N
                                                                <Foundation.Sitio>_N)))_R)_R)_R))
                              (Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                         lvl54
                           `cast`
                         (<()>_R
                          ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                                        <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         eta12)
                        `cast`
                      (Sym (Yesod.Core.Types.N:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv }) -}
e6cc7e30ac3cc626709937a80f359554
  getListAdminR10 ::
    (Yesod.Routes.Class.Route Foundation.Sitio
     -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
     -> Data.Text.Internal.Text)
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text) ->
                 Handler.Admin.getListAdminR_eta1) -}
7d9c82f629a971bd0e4349567907cb49
  getListAdminR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getListAdminR12) -}
58cad83af8604a18ca142ab1a664d31a
  getListAdminR12 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Admin.getListAdminR13) -}
4bbf8130cfe07b8771bf0887913f6c2c
  getListAdminR13 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</table>\n"#) -}
6f81159a062a455658a506c4c2e77f72
  getListAdminR14 ::
    [Database.Persist.Class.PersistEntity.Entity
       Foundation.Funcionario]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U> -}
2b95f8a15983618aac40c9d8bc08bb86
  getListAdminR15 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Funcionario]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (r1 :: Database.Persist.Sql.Types.Internal.SqlBackend) ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Funcionario)))
                   = Handler.Admin.getListAdminR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.N:ReaderT[0]
                          <*>_N
                          <Database.Persist.Sql.Types.Internal.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Funcionario))>_N)
                       r1
                 } in
                 (\ (r :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.N:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Funcionario))>_N)
                          r)
                         `cast`
                       (GHC.Types.N:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Funcionario))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ GHC.Types.IO
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Funcionario))
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Funcionario]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Funcionario)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Funcionario)>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Funcionario]>_R)))
                    `cast`
                  (GHC.Types.N:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Funcionario]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Funcionario]>_R))
                      (Sym (Yesod.Core.Types.N:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Funcionario]>_N)))) -}
cc0a97019ba25b2985b7922bc41ba6da
  getListAdminR16 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Funcionario]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Funcionario)
                   Handler.Admin.getListAdminR17
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Funcionario))) -}
a0b6acc4f992a17b1f4e09434c2651f1
  getListAdminR17 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Funcionario
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Funcionario
                   @ Data.Text.Internal.Text
                   Handler.Admin.getListAdminR18
                     `cast`
                   (Sym (Foundation.D:R:EntityFieldFuncionariotyp0[0]) <Data.Text.Internal.Text>_N)) -}
9b1194115ae9f458fdbe6922b30cb2dc
  getListAdminR18 ::
    Foundation.R:EntityFieldFuncionariotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.FuncionarioNome
                   @ Data.Text.Internal.Text
                   Handler.Admin.getListAdminR19
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) <Data.Text.Internal.Text>_N <Data.Text.Internal.Text>_N)) -}
b979babd9721d8d2822fd854b6ed0d11
  getListAdminR19 ::
    Data.Text.Internal.Text GHC.Types.~~ Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Data.Text.Internal.Text
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
c3027d67bfa4218901f955a5bcb703d9
  getListAdminR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Handler.Admin.getListAdminR3 eta13) -}
1a7e0814d466bbe158b91c0649605cac
  getListAdminR20 ::
    (Database.Persist.Class.PersistEntity.PersistEntity
       Foundation.Funcionario,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- Strictness: m,
     Unfolding: ((Foundation.$fPersistEntityFuncionario,
                  Handler.Admin.getListAdminR21
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
c3d78b480480623b06ee5d560b404566
  getListAdminR21 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
3c34bda958aa38b1fa85861102196146
  getListAdminR3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ (ds :: Yesod.Routes.Class.Route Foundation.Sitio
                                  -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                  -> Data.Text.Internal.Text) ->
                         Handler.Admin.getListAdminR_eta)
                          `cast`
                        (Sym (Yesod.Core.Types.N:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.N:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.N:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                     <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R) #)) -}
422c88dbd5c48336adb0e9dfa25bef66
  getListAdminR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handler.Admin.getListAdminR5) -}
53991691dae782a3c1e23fd751ed79f2
  getListAdminR5 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text
                   Handler.Admin.getListAdminR6) -}
49934df10a387cc72e4b833f896ce629
  getListAdminR6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<table><tr><td> id</td>\n\
                   \<td> nome</td>\n\
                   \<td> email</td>\n\
                   \<td> senha</td>\n\
                   \</tr>\n"#) -}
746d7e2e6817b24a5f3149ab7af1ede1
  getListAdminR7 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ (ds :: ())
                   (eta12 :: Yesod.Core.Types.HandlerData
                               Foundation.Sitio
                               (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                   (eta13 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta13, Handler.Admin.getListAdminR8 #)) -}
941b96735c70a5826bb8c59ab2613a54
  getListAdminR8 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handler.Admin.getListAdminR9
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)))_R)_R)) -}
c3eaf955e25902ec1de06940fe10add3
  getListAdminR9 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handler.Admin.getListAdminR10
                     `cast`
                   (Sym (Yesod.Core.Types.N:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.N:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.N:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
9888b891b116fa13ac72700c85e080cf
  getListAdminR_eta :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getListAdminR4) -}
66214bb6bad1d43fe2cbb778907d00af
  getListAdminR_eta1 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handler.Admin.getListAdminR11) -}
dc6979a44b44be24291e59c799bbd784
  getListAdminR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.Internal.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Funcionario)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$fPersistQueryReadSqlBackend_$cselectSourceRes
                   @ Foundation.Funcionario
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Handler.Admin.getListAdminR20
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Funcionario>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendFuncionario[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R
                   (Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Control.Monad.IO.Class.$fMonadIOIO
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Funcionario))
                   Handler.Admin.getListAdminR16) -}
1c5c69030f0294e2494880d166bfad8d
  postAdminR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Handler.Admin.postAdminR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
378ee978ccf8c1b27d301bf271ec1fd1
  postAdminR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Handler.Admin.postAdminR6
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Funcionario,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Funcionario,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handler.Admin.postAdminR5
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess funcionario
                   -> case (Foundation.$fYesodPersistSitio3
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                      <GHC.Types.IO>_N <Foundation.Sitio>_N))
                              r)
                             `cast`
                           (GHC.Types.N:IO[0] <Foundation.Sitio>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case ((Data.Pool.withResource
                               @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                               @ Database.Persist.Sql.Types.Internal.SqlBackend
                               @ (GHC.Base.Maybe
                                    (Database.Persist.Class.PersistEntity.Entity
                                       Foundation.Funcionario))
                               (Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                  @ Foundation.Sitio)
                               (case ipv3 of wild3 { Foundation.Sitio ds5 ds6 -> ds6 })
                               (Database.Persist.Sql.Run.runSqlConn
                                  @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                                  @ Database.Persist.Sql.Types.Internal.SqlBackend
                                  @ (GHC.Base.Maybe
                                       (Database.Persist.Class.PersistEntity.Entity
                                          Foundation.Funcionario))
                                  (Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                     @ Foundation.Sitio)
                                  Foundation.$fYesodPersistSitio2
                                    `cast`
                                  (GHC.Classes.(%,%)
                                     <Database.Persist.Class.PersistStore.IsPersistBackend
                                        Database.Persist.Sql.Types.Internal.SqlBackend>_N
                                     ((Data.Type.Equality.~)
                                        <*>_N
                                        (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                                        <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                                  (Handler.Admin.postAdminR4
                                     (Foundation.UniqueEmail
                                        (Foundation.funcionarioEmail funcionario))
                                       `cast`
                                     (Sym (Foundation.D:R:UniqueFuncionario0[0])))))
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 <GHC.Base.Maybe
                                    (Database.Persist.Class.PersistEntity.Entity
                                       Foundation.Funcionario)>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0]
                                <GHC.Base.Maybe
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Funcionario)>_R)
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      case ipv5 of wild3 {
                        GHC.Base.Nothing
                        -> case (Foundation.$fYesodPersistSitio3
                                   `cast`
                                 (Yesod.Core.Types.N:HandlerT[0]
                                      <Foundation.Sitio>_N
                                      <GHC.Types.IO>_N
                                      (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                           <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                   r)
                                  `cast`
                                (GHC.Types.N:IO[0] <Foundation.Sitio>_R)
                                  ipv4 of ds6 { (#,#) ipv6 ipv7 ->
                           case ((Data.Pool.withResource
                                    @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                                    @ Database.Persist.Sql.Types.Internal.SqlBackend
                                    @ (Database.Persist.Class.PersistEntity.Key
                                         Foundation.Funcionario)
                                    (Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                       @ Foundation.Sitio)
                                    (case ipv7 of wild4 { Foundation.Sitio ds7 ds8 -> ds8 })
                                    (Database.Persist.Sql.Run.runSqlConn
                                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                                       @ Database.Persist.Sql.Types.Internal.SqlBackend
                                       @ (Database.Persist.Class.PersistEntity.Key
                                            Foundation.Funcionario)
                                       (Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                          @ Foundation.Sitio)
                                       Foundation.$fYesodPersistSitio2
                                         `cast`
                                       (GHC.Classes.(%,%)
                                          <Database.Persist.Class.PersistStore.IsPersistBackend
                                             Database.Persist.Sql.Types.Internal.SqlBackend>_N
                                          ((Data.Type.Equality.~)
                                             <*>_N
                                             (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                                             <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                                       (Handler.Admin.postAdminR3 funcionario)))
                                   `cast`
                                 (Yesod.Core.Types.N:HandlerT[0]
                                      <Foundation.Sitio>_N
                                      <GHC.Types.IO>_N
                                      <Database.Persist.Class.PersistEntity.Key
                                         Foundation.Funcionario>_N)
                                   r)
                                  `cast`
                                (GHC.Types.N:IO[0]
                                     <Database.Persist.Class.PersistEntity.Key
                                        Foundation.Funcionario>_R)
                                  ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                           (Handler.Admin.postAdminR2
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                             ipv8 } }
                        GHC.Base.Just ds6
                        -> (Handler.Admin.postAdminR5
                              `cast`
                            (Yesod.Core.Types.N:HandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                              r)
                             `cast`
                           (GHC.Types.N:IO[0] <Text.Blaze.Html.Html>_R)
                             ipv4 } } } } } } }) -}
0625c522b30a20ec5d62d9d360a8e885
  postAdminR2 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
63accf2b95acca6066229bb80e77e769
  postAdminR3 ::
    Foundation.Funcionario
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Funcionario)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$fPersistStoreWriteSqlBackend_$cinsert
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Funcionario
                   (Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handler.Admin.getListAdminR20
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Funcionario>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendFuncionario[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
891223fdea444f380a892091d95f9363
  postAdminR4 ::
    Database.Persist.Class.PersistEntity.Unique Foundation.Funcionario
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.Internal.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (GHC.Base.Maybe
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Funcionario))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistUnique.$fPersistUniqueReadSqlBackend_$cgetBy
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Funcionario
                   (Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
                      @ Foundation.Sitio)
                   Handler.Admin.getListAdminR20
                     `cast`
                   (GHC.Classes.(%,%)
                      <Database.Persist.Class.PersistEntity.PersistEntity
                         Foundation.Funcionario>_N
                      ((Data.Type.Equality.~)
                         <*>_N
                         (Sym (Foundation.D:R:PersistEntityBackendFuncionario[0]))
                         (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0])))_N)_R) -}
b233919bd8c8068f1d3076a646c10b96
  postAdminR5 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ Text.Blaze.Html.Html
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.N:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.AdminR `cast` (Sym (Foundation.D:R:RouteSitio0[0]))) -}
f394ce34300e6ff1f140540345de173e
  postAdminR6 ::
    Foundation.Handler
      ((Yesod.Form.Types.FormResult Foundation.Funcionario,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.runFormPost
                   @ Foundation.Handler
                   @ Foundation.Funcionario
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                             (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                  <GHC.Types.IO>_N <Foundation.Sitio>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Handler.Admin.$s$fMonadResourceHandlerT @ Foundation.Sitio)
                   (Handler.Admin.$s$fMonadHandlerHandlerT @ Foundation.Sitio)
                   Handler.Admin.formFuncionario1
                     `cast`
                   (<Text.Blaze.Html.Html>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.N:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((,)
                                     <Yesod.Form.Types.FormResult Foundation.Funcionario>_N
                                     (Yesod.Core.Types.WidgetT
                                        (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                                  <GHC.Types.IO>_N <Foundation.Sitio>_N))
                                        <GHC.Types.IO>_N
                                        <()>_N)_N)_N))) -}
"SPEC/Handler.Admin $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                                  ($dMonad :: GHC.Base.Monad
                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Handler.Admin.$s$fApplicativeHandlerT @ site
"SPEC/Handler.Admin $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                           ($dMonad :: GHC.Base.Monad
                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Handler.Admin.$s$fApplicativeHandlerT_$creturn @ site
"SPEC/Handler.Admin $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Admin.$s$fApplicativeHandlerT_$s$fFunctorHandlerT @ site
"SPEC/Handler.Admin $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                        GHC.Types.IO
                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Handler.Admin.$s$fMonadBasebHandlerT @ site
"SPEC/Handler.Admin $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                    ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                      GHC.Types.IO
                                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Handler.Admin $fMonadBasebHandlerT_$cp2MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                    ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                      GHC.Types.IO
                                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp2MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp2MonadBase
      @ site
"SPEC/Handler.Admin $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                    ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                      GHC.Types.IO
                                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Handler.Admin $fMonadBasebHandlerT_$cp4MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                    ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                      GHC.Types.IO
                                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp4MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadBasebHandlerT_$cp4MonadBase
      @ site
"SPEC/Handler.Admin $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                   ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                    GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Handler.Admin.$s$fMonadHandlerHandlerT @ site
"SPEC/Handler.Admin $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                            ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT @ site
"SPEC/Handler.Admin $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonad :: GHC.Base.Monad
                                                                                 GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Handler.Admin.$s$fFunctorAForm_$s$fMonadHandlerT_$cfail @ site
"SPEC/Handler.Admin $fMonadHandlerWidgetT @ IO _" [ALWAYS] forall @ site
                                                                  ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                   GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ GHC.Types.IO
                                                 @ site
                                                 $d(%,,,,%)
  = Handler.Admin.$s$fMonadHandlerWidgetT @ site
"SPEC/Handler.Admin $fMonadIOHandlerT @ IO _" [ALWAYS] forall @ site
                                                              ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT @ GHC.Types.IO @ site $dMonadIO
  = Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadIOHandlerT
      @ site
"SPEC/Handler.Admin $fMonadIOHandlerT_$cliftIO @ IO _" [ALWAYS] forall @ site
                                                                       ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                       GHC.Types.IO)
  Yesod.Core.Types.$fMonadIOHandlerT_$cliftIO @ GHC.Types.IO
                                              @ site
                                              $dMonadIO
  = Handler.Admin.$s$fMonadBasebHandlerT_$s$fMonadIOHandlerT_$cliftIO
      @ site
"SPEC/Handler.Admin $fMonadResourceHandlerT @ IO _" [ALWAYS] forall @ site
                                                                    ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                    GHC.Types.IO)
                                                                    ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      GHC.Types.IO)
                                                                    ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                       GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT @ GHC.Types.IO
                                           @ site
                                           $dMonadIO
                                           $dMonadBase
                                           $dMonadThrow
  = Handler.Admin.$s$fMonadResourceHandlerT @ site
"SPEC/Handler.Admin $fMonadResourceHandlerT_$cp1MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                      GHC.Types.IO)
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
                                                                                      ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp1MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp1MonadResource
      @ site
"SPEC/Handler.Admin $fMonadResourceHandlerT_$cp2MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                      GHC.Types.IO)
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
                                                                                      ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp2MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp2MonadResource
      @ site
"SPEC/Handler.Admin $fMonadResourceHandlerT_$cp4MonadResource @ IO _" [ALWAYS] forall @ site
                                                                                      ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                                      GHC.Types.IO)
                                                                                      ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                        GHC.Types.IO
                                                                                                        GHC.Types.IO)
                                                                                      ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                                         GHC.Types.IO)
  Yesod.Core.Types.$fMonadResourceHandlerT_$cp4MonadResource @ GHC.Types.IO
                                                             @ site
                                                             $dMonadIO
                                                             $dMonadBase
                                                             $dMonadThrow
  = Handler.Admin.$s$fMonadResourceHandlerT_$s$fMonadResourceHandlerT_$cp4MonadResource
      @ site
"SPEC/Handler.Admin $fMonadThrowHandlerT @ IO _" [ALWAYS] forall @ site
                                                                 ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                    GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT @ GHC.Types.IO
                                        @ site
                                        $dMonadThrow
  = Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT
      @ site
"SPEC/Handler.Admin $fMonadThrowHandlerT_$cthrowM @ IO _" [ALWAYS] forall @ site
                                                                          ($dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                             GHC.Types.IO)
  Yesod.Core.Types.$fMonadThrowHandlerT_$cthrowM @ GHC.Types.IO
                                                 @ site
                                                 $dMonadThrow
  = Handler.Admin.$s$fMonadHandlerHandlerT_$cp1MonadHandler_$s$fMonadThrowHandlerT_$cthrowM
      @ site
"SPEC/Handler.Admin textField @ Handler" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                       Foundation.Handler)
                                                         ($dRenderMessage :: Text.Shakespeare.I18N.RenderMessage
                                                                               (Yesod.Core.Class.Handler.HandlerSite
                                                                                  Foundation.Handler)
                                                                               Yesod.Form.Types.FormMessage)
  Yesod.Form.Fields.textField @ (Yesod.Core.Types.HandlerT
                                   Foundation.Sitio GHC.Types.IO)
                              $dMonad
                              $dRenderMessage
  = Handler.Admin.$stextField
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

